{"version":3,"sources":["webpack:///src/app/user/verify/user-verify.component.ts","webpack:///src/app/user/verify/user-verify.component.html","webpack:///src/app/volunteer/volunteer.component.ts","webpack:///src/app/volunteer/volunteer.component.html","webpack:///src/app/_overlay/overlay.service.ts","webpack:///src/app/_services/pos.service.ts","webpack:///src/app/user/home/user-home.component.ts","webpack:///src/app/user/home/user-home.component.html","webpack:///src/app/_models/aim.ts","webpack:///src/app/_services/auth.service.ts","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/_models/merchant.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/_forms/user/forms-user.directive.ts","webpack:///src/app/_forms/user/forms-user.directive.html","webpack:///src/environments/environment.ts","webpack:///src/app/_helpers/httpInterceptor.ts","webpack:///src/app/privacy/instrument/instrument.component.ts","webpack:///src/app/privacy/instrument/instrument.component.html","webpack:///src/app/_models/dialogType.ts","webpack:///src/app/user/not-verified/user-not-verified.component.ts","webpack:///src/app/user/not-verified/user-not-verified.component.html","webpack:///src/app/_services/index.ts","webpack:///src/app/_forms/pos/forms-pos.directive.ts","webpack:///src/app/_forms/pos/forms-pos.directive.html","webpack:///src/app/_forms/merchant/forms-merchant.directive.ts","webpack:///src/app/_forms/merchant/forms-merchant.directive.html","webpack:///src/app/privacy/pos/pos.component.ts","webpack:///src/app/privacy/pos/pos.component.html","webpack:///src/app/authentication/signin/signin.component.html","webpack:///src/app/authentication/signin/signin.component.ts","webpack:///src/app/privacy/pocket/pocket.component.ts","webpack:///src/app/privacy/pocket/pocket.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/privacy/privacy.component.ts","webpack:///src/app/privacy/privacy.component.html","webpack:///src/app/_services/user.service.ts","webpack:///src/app/_services/merchant.service.ts","webpack:///src/app/breadcrumbs/breadcrumbs.component.ts","webpack:///src/app/breadcrumbs/breadcrumbs.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/_models/countryList.ts","webpack:///src/app/_models/primaryActivityType.ts","webpack:///src/app/instrument/instrument.component.ts","webpack:///src/app/instrument/instrument.component.html","webpack:///src/app/_models/pos.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/_helpers/HttpMockRequestInterceptor.ts","webpack:///src/app/user/add-merchant/add-merchant.component.ts","webpack:///src/app/user/add-merchant/add-merchant.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/merchant/dashboard/merchant-dashboard.component.ts","webpack:///src/app/merchant/dashboard/merchant-dashboard.component.html","webpack:///src/app/user/add-pos/add-pos.component.ts","webpack:///src/app/user/add-pos/add-pos.component.html","webpack:///src/app/nav/nav.component.html","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/_overlay/overlay.module.ts","webpack:///src/app/_progressSpinner/progress-spinner.component.html","webpack:///src/app/_progressSpinner/progress-spinner.component.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/merchant/merchant.component.ts","webpack:///src/app/merchant/merchant.component.html","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/pageNotFound/page-not-found.component.ts","webpack:///src/app/pageNotFound/page-not-found.component.html","webpack:///src/app/home/index.ts","webpack:///src/app/authentication/requestNewPassword/request-new-password.component.ts","webpack:///src/app/authentication/requestNewPassword/request-new-password.component.html","webpack:///src/app/authentication/signup/signup-login-error.directive.ts","webpack:///src/app/authentication/reset-password/reset-password.component.ts","webpack:///src/app/authentication/reset-password/reset-password.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["UserVerifyComponent","VolunteerComponent","OverlayService","overlay","config","create","overlayRef","templateRef","vcRef","templatePortal","attach","position","global","centerHorizontally","centerVertically","PosService","http","localUrlV1","baseUrl","v1","localUrlV2","v2","id","get","pipe","response","pos","patch","put","ownerMerchantId","name","latitude","longitude","url","UserHomeComponent","dialog","snackBar","userService","merchantService","authService","translate","username","currentUserValue","surname","loadData","merchantSubscription","unsubscribe","merchants","subscribe","error","console","log","merchantDialogData","data","type","dialogRef","open","afterClosed","result","openSnackBar","merchantId","merchant","edit","message","duration","addMerchant","Aim","json","Object","assign","Titles","AuthService","value","post","AboutComponent","Merchant","MerchantContainer","Merchants","HomeComponent","router","link","navigate","window","navigateExternal","UserFormComponent","fb","formChange","form","group","email","disabled","password","required","passwordRepeat","firstName","lastName","valueChanges","emit","changes","controls","disable","environment","production","mock","i18n","TokenInterceptorService","noAuthStrings","req","next","some","str","includes","handle","userLogin","localStorage","getItem","user","JSON","parse","duplicate","clone","setHeaders","Authorization","token","ev","PrivacyInstrumentComponent","DialogType","UserNotVerifiedComponent","sendValidationEmail","MapTypeId","google","maps","PosFormComponent","options","center","lat","lng","zoom","mapTypeId","ROADMAP","event","clickedLocation","latLng","marker","Marker","map","googleMap","draggable","addListener","evt","markerLocation","setPosition","currentLocation","getPosition","setValue","posLat","toFixed","posLon","mapClick","MerchantFormComponent","countryList","businessList","minLength","fiscalCode","maxLength","address","cap","city","country","primaryActivity","description","zipCode","PrivacyPosComponent","SignInComponent","route","returnUrl","snapshot","queryParams","checkAuthenticated","loginInvalid","formSubmitAttempt","valid","login","getLoggedUser","res","status","err","onSubmit","PrivacyPocketComponent","AppComponent","title","addLangs","setDefaultLang","getBrowserLang","use","PrivacyComponent","UserService","localStorageUserLogin","fromJson","currentUserLoginSubject","currentUserLogin","asObservable","localStorageUser","currentUserSubject","currentUser","getValue","undefined","observe","headers","btoa","body","setItem","stringify","removeItem","userId","MerchantService","primaryActivityType","BreadcrumbsComponent","activatedRoute","home","icon","events","menuItems","createBreadcrumbs","root","breadcrumbs","children","menu","forEach","b","label","instant","push","length","child","routeURL","segment","path","join","labelVal","ROUTE_DATA_BREADCRUMB","createTranslateLoader","translateFactory","Promise","resolve","onLangChange","isMock","AppModule","provide","useFactory","deps","multi","useClass","forRoot","component","pathMatch","defaultLanguage","loader","InstrumentComponent","Pos","PosRegistration","routes","redirectTo","breadcrumb","canActivate","appRoutingModule","urls","HttpMockRequestInterceptor","injector","request","element","AddMerchantDialogComponent","cd","dialogTypes","merchantData","detectChanges","createMerchantDataStruct","register","close","formApiError","update","formInputError","formMerchant","MerchantDialogData","FooterComponent","currentYear","Date","getFullYear","MerchantDashboardComponent","AddPosDialogComponent","posService","formPos","NavComponent","isExpanded","openMenu","isOver","x","logout","AppOverlayModule","ProgressSpinnerComponent","overlayService","diameter","backdropEnabled","positionGloballyCenter","progressSpinnerOverlayConfig","hasBackdrop","positionStrategy","createOverlay","displayProgressSpinner","hasAttached","attachTemplatePortal","progressSpinnerRef","detach","UserRegistrationPayload","User","UserLogin","verified","AuthGuard","authenticationService","state","currentUserLoginValue","then","r","MerchantComponent","infoContent","markers","clickableIcons","zoomControl","scrollwheel","disableDoubleClickZoom","maxZoom","minZoom","navigator","geolocation","getCurrentPosition","coords","addMarker","searchBox","places","SearchBox","searchField","nativeElement","getPlaces","bounds","LatLngBounds","place","geometry","location","viewport","union","extend","fitBounds","getCenter","Math","random","info","animation","Animation","DROP","content","infoWindow","getBounds","toJSON","north","south","east","west","boundsChanged","click","MerchantSignUpComponent","userRegistered","userSignedIn","color","mode","showProgressSpinner","setTimeout","signupComplete","signupInvalid","signupTimeout","termsAndConditionsText","formSubmit","termsConditionsCheckbox","requiredTrue","tcInfo","errorMessage","merchantFormValid","requireMerchantRegistration","posFormValid","requirePosRegistration","userData","logIn","registerPos","registerMerchant","PageNotFoundComponent","RequestNewPasswordComponent","requestSent","passwordResetRequest","LogInErrorDialogComponent","ResetPasswordComponent","passwordNoMatch","expiredLink","params","checkPasswords","pswd","passwordReset","snackTitle","snackAction","snackBarRef","onAction","afterDismissed","resetPassword","bootstrapModule","webpackEmptyAsyncContext","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../_services/user.service';\nimport {User} from '../../_models';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-user-verify',\n    templateUrl: './user-verify.component.html',\n    styleUrls: ['./user-verify.component.css']\n})\nexport class UserVerifyComponent {\n}\n","<mat-card>\n    <mat-card-content>\n        User verified!\n    </mat-card-content>\n</mat-card>\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-volunteer',\r\n  templateUrl: './volunteer.component.html',\r\n  styleUrls: ['./volunteer.component.css']\r\n})\r\nexport class VolunteerComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <span class=\"page-title\" [innerHTML]=\"'VOLUNTEER.TITLE' | translate\"></span>\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"20px grid\">\r\n    <div fxFlex=\"100%\">\r\n      <p class=\"page-secondary-title\" [innerHTML]=\"'VOLUNTEER.SECTION_A.TITLE' | translate\"></p>\r\n      <p [innerHTML]=\"'VOLUNTEER.SECTION_A.A' | translate\"></p>\r\n    </div>\r\n    <div fxFlex=\"100%\">\r\n      <p class=\"page-secondary-title\" [innerHTML]=\"'VOLUNTEER.SECTION_B.TITLE' | translate\"></p>\r\n      <p [innerHTML]=\"'VOLUNTEER.SECTION_B.A' | translate\"></p>\r\n    </div>\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n      <a href=\"https://play.google.com/store/apps/details?id=social.wom.pocket\" title=\"Download WOM Pocket from Google Play\">\r\n        <img style=\"max-width: 100%;\" src=\"assets/images/badge_google_play.png\" alt=\"Google Play\" />\r\n      </a>\r\n    </div>\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n      <a href=\"https://apps.apple.com/it/app/wom-pocket/id1466969163\" title=\"Download WOM Pocket from App Store\">\r\n        <img style=\"max-width: 100%;\" src=\"assets/images/badge_app_store.png\" alt=\"Apple App Store\" />\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef, PositionStrategy } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\n\n@Injectable()\n\nexport class OverlayService {\n    constructor(\n        private overlay: Overlay\n    ) { }\n    createOverlay(config: AppOverlayConfig): OverlayRef {\n        return this.overlay.create(config);\n    }\n    attachTemplatePortal(overlayRef: OverlayRef, templateRef: TemplateRef<any>, vcRef: ViewContainerRef): any {\n        const templatePortal = new TemplatePortal(templateRef, vcRef);\n        overlayRef.attach(templatePortal);\n    }\n    positionGloballyCenter(): PositionStrategy {\n        return this.overlay.position()\n            .global()\n            .centerHorizontally()\n            .centerVertically();\n    }\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppOverlayConfig extends OverlayConfig { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Pos, PosRegistration} from '../_models';\nimport {environment} from '../../environments/environment';\nimport {map} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class PosService {\n    localUrlV1 = environment.baseUrl + environment.v1 + 'pos/';\n    localUrlV2 = environment.baseUrl + environment.v2 + 'pos/';\n\n    constructor(private http: HttpClient) {\n    }\n\n    /**\n     * Get merchant data from specific pos id\n     * @param id pos id\n     */\n    get(id: string): Observable<Pos> {\n        return this.http.get<Pos>(this.localUrlV1 + id)\n            .pipe(map(response => response));\n    }\n\n    /**\n     * Update all information of a pos\n     * @param pos data to update\n     */\n    update(pos: Pos): Observable<Pos> {\n        return this.http.patch<Pos>(this.localUrlV1 + pos.id,\n            {\n\n            })\n            .pipe(map (response => response));\n    }\n\n    /**\n     * Create a new pos for a merchant\n     * @param pos data of pos to create\n     */\n    register(pos: PosRegistration): Observable<Pos> {\n        return this.http.put<Pos>(this.localUrlV1,\n            {\n                ownerMerchantId: pos.ownerMerchantId,\n                name: pos.name,\n                latitude: pos.latitude,\n                longitude: pos.longitude,\n                url: pos.url\n            })\n            .pipe(map (response => response));\n    }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserService} from '../../_services/user.service';\nimport {Merchant, Merchants} from '../../_models';\nimport {MerchantService} from '../../_services/merchant.service';\nimport {AuthService} from '../../_services';\nimport {MatDialog} from '@angular/material/dialog';\nimport {AddMerchantDialogComponent, MerchantDialogData} from '../add-merchant/add-merchant.component';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {TranslateService} from '@ngx-translate/core';\nimport {first} from 'rxjs/operators';\nimport {AddPosDialogComponent} from '../add-pos/add-pos.component';\nimport {DialogType} from '../../_models/dialogType';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'app-user-home',\n    templateUrl: './user-home.component.html',\n    styleUrls: ['./user-home.component.css']\n})\nexport class UserHomeComponent implements OnInit, OnDestroy {\n    username: string;\n    merchants: Merchants;\n    merchantSubscription: Subscription;\n\n    constructor(public dialog: MatDialog,\n                private snackBar: MatSnackBar,\n                private userService: UserService,\n                private merchantService: MerchantService,\n                private authService: AuthService,\n                private translate: TranslateService) {\n    }\n\n    ngOnInit(): any {\n        this.username = this.userService.currentUserValue.name + ' ' +   this.userService.currentUserValue.surname;\n        this.loadData();\n    }\n\n    ngOnDestroy(): any {\n        this.merchantSubscription.unsubscribe();\n    }\n\n    loadData(): any {\n        this.merchantSubscription = this.authService.merchants().pipe().subscribe(\n            response =>\n            {\n                this.merchants = response;\n            }, error => {\n                console.log(error);\n            });\n    }\n\n    addMerchant(): any {\n        const merchantDialogData = new MerchantDialogData();\n        merchantDialogData.data = null;\n        merchantDialogData.type = DialogType.create;\n        const dialogRef = this.dialog.open(AddMerchantDialogComponent, {\n            data: merchantDialogData\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loadData();\n                this.translate.get('USER.ADD_MERCHANT.SUCCESS').pipe(first()).subscribe(\n                    response => {\n                        this.openSnackBar(response);\n                    });\n            }\n        });\n    }\n\n    addPos(merchantId: string): any {\n        const dialogRef = this.dialog.open(AddPosDialogComponent, {\n            data: merchantId\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loadData();\n                this.translate.get('USER.ADD_POS.SUCCESS').pipe(first()).subscribe(\n                    response => {\n                        this.openSnackBar(response);\n                    });\n            }\n        });\n    }\n\n    editMerchant(merchant: Merchant): any {\n        const merchantDialogData = new MerchantDialogData();\n        merchantDialogData.data = merchant;\n        merchantDialogData.type = DialogType.edit;\n        const dialogRef = this.dialog.open(AddMerchantDialogComponent, {\n            data: merchantDialogData\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loadData();\n                this.translate.get('USER.EDIT_MERCHANT.SUCCESS').pipe(first()).subscribe(\n                    response => {\n                        this.openSnackBar(response);\n                    });\n            }\n        });\n    }\n\n    openSnackBar(message = 'null'): any {\n        this.snackBar.open(message, null, {\n            duration: 2000\n        });\n    }\n}\n","<div class=\"container\">\n    <div class=\"mat-card\" >\n        <h3>{{\"USER.HOME.WELCOME\" | translate}}, {{username}}</h3>\n        <mat-divider></mat-divider>\n        <div class=\"merchant-container\">\n            <div class=\"merchant-header\">\n                <h1>{{\"USER.HOME.MERCHANT_TITLE\" | translate}}</h1>\n                <div class=\"button-container\" >\n                    <button mat-icon-button color=\"primary\" matTooltip=\"{{'USER.HOME.ADD_MERCHANT_TOOLTIP' | translate}}\"\n                            (click)=\"addMerchant()\">\n                        <mat-icon>add</mat-icon>\n                    </button>\n                </div>\n            </div>\n\n            <ng-container *ngIf=\"merchants\">\n                <mat-accordion class=\"merchant-mat-accordion\">\n                    <ng-container *ngFor=\"let merchant of merchants.merchants\">\n                        <mat-expansion-panel>\n                            <mat-expansion-panel-header>\n                                <mat-panel-title>\n                                    {{merchant.name}}\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <mat-divider></mat-divider>\n\n                            <p>\n                                <b>{{\"USER.HOME.MERCHANT.CODE\" | translate}}</b>:\n                                {{merchant.fiscalCode}}\n                            </p>\n                            <p>\n                                <b>{{\"USER.HOME.MERCHANT.ADDRESS\" | translate}}</b>:\n                                {{merchant.address}},\n                                {{merchant.zipCode}},\n                                {{merchant.city}},\n                                {{merchant.country}}\n                            </p>\n                            <p>\n                                <b>{{\"USER.HOME.MERCHANT.ACTIVITY_TYPE\" | translate}}</b>:\n                                {{merchant.primaryActivity}}\n                            </p>\n                            <p *ngIf=\"merchant.url\">\n                                <b>{{\"USER.HOME.MERCHANT.URL\" | translate}}</b>:\n                                <a [href]=\"merchant.url\" target=\"_blank\">{{merchant.url}}</a>\n                            </p>\n                            <p *ngIf=\"merchant.description\">\n                                {{merchant.description}}\n                            </p>\n                            <button mat-raised-button\n                                    color=\"primary\"\n                                    matTooltip=\"{{'USER.HOME.EDIT_MERCHANT_TOOLTIP' | translate}}\"\n                                    (click)=\"editMerchant(merchant)\">\n                                {{\"USER.HOME.EDIT_MERCHANT_BTN\" | translate}}\n                            </button>\n                            <!-- POS LIST -->\n                            <mat-card class=\"pos-card\">\n                                <mat-card-header>\n                                    <div class=\"button-container\">\n                                        <button mat-icon-button\n                                                color=\"primary\"\n                                                matTooltip=\"{{'USER.HOME.MERCHANT.ADD_POS_TOOLTIP' | translate}} {{merchant.name}}\"\n                                                (click)=\"addPos(merchant.id)\">\n                                            <mat-icon>add</mat-icon>\n                                        </button>\n                                    </div>\n                                    <mat-card-title>{{\"USER.HOME.MERCHANT.POS_TITLE\" | translate}}</mat-card-title>\n                                    <mat-card-subtitle>{{\"USER.HOME.MERCHANT.POS_SUBTITLE\" | translate}}</mat-card-subtitle>\n                                </mat-card-header>\n                                    <ng-container *ngFor=\"let pos of merchant.pos\">\n                                        <mat-card-content>\n                                        {{pos.name}}\n                                        </mat-card-content>\n                                    </ng-container>\n                            </mat-card>\n                        </mat-expansion-panel>\n                    </ng-container>\n                </mat-accordion>\n            </ng-container>\n        </div>\n    </div>\n</div>\n","export class Aim {\n    code: string;\n    titles: Titles[];\n    order: number;\n\n    public static fromJson(json): any {\n        if (json === null) {\n            return null;\n        }\n        return Object.assign(new Aim(), json);\n    }\n}\n\nexport class Titles {\n    en: string;\n    it: string;\n\n    public static fromJson(json): any {\n        if (json === null) {\n            return null;\n        }\n        return Object.assign(new Titles(), json);\n    }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {environment} from '../../environments/environment';\r\nimport {Merchants, Pos} from '../_models';\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n  localUrlV1 = environment.baseUrl + environment.v1 + 'auth/';\r\n  localUrlV2 = environment.baseUrl + environment.v2 + 'auth/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Retrieve available WOM sources for the authenticated user\r\n   */\r\n  sources(): Observable<any> {\r\n    return this.http.get<any>(this.localUrlV1 + 'sources')\r\n        .pipe(map(value => value));\r\n  }\r\n\r\n  /**\r\n   * Retrieve available WOM POS for the authenticated user\r\n   */\r\n  pos(): Observable<Pos> {\r\n    return this.http.get<Pos>(this.localUrlV1 + 'pos')\r\n        .pipe(map(value => value));\r\n  }\r\n\r\n  /**\r\n   * Retrieve the public key used by the WOM registry\r\n   */\r\n  publicKey(): Observable<any> {\r\n    return this.http.get<any>(this.localUrlV2 + 'key') // Can use also v1\r\n      .pipe(map(value => value));\r\n  }\r\n\r\n  /**\r\n   * Retrieve available WOM Merchants for the authenticated user\r\n   */\r\n  merchants(): Observable<Merchants> {\r\n    return this.http.post<Merchants>(this.localUrlV2 + 'merchant', {})\r\n        .pipe(map(value => value));\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <span class=\"page-title\">Cosa sono i WOM</span>\r\n\r\n    <p class=\"page-secondary-title\" [innerHTML]=\"'ABOUT.SECTION_A.TITLE' | translate\"></p >\r\n    <p class=\"content\" [innerHTML]=\"'ABOUT.SECTION_A.A' | translate\"></p>\r\n    <p class=\"content\" [innerHTML]=\"'ABOUT.SECTION_A.B' | translate\"></p>\r\n    <p class=\"content\" [innerHTML]=\"'ABOUT.SECTION_A.C' | translate\"></p>\r\n\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"20px grid\">\r\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n            <div>\r\n                <p class=\"page-secondary-title\" [innerHTML]=\"'ABOUT.SECTION_B.TITLE' | translate\"></p>\r\n                <p [innerHTML]=\"'ABOUT.SECTION_B.A' | translate\"></p>\r\n                <p [innerHTML]=\"'ABOUT.SECTION_B.B' | translate\"></p>\r\n            </div>\r\n        </div>\r\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n            <img fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"image\" src=\"assets/images/wom_pocket.png\" alt=\"WOM Pocket app\" />\r\n        </div>\r\n        <div fxFlex=\"100%\">\r\n            <div>\r\n                <p class=\"page-secondary-title\" [innerHTML]=\"'ABOUT.SECTION_C.TITLE' | translate\"></p>\r\n                <p [innerHTML]=\"'ABOUT.SECTION_C.A' | translate\"></p>\r\n                <p [innerHTML]=\"'ABOUT.SECTION_C.B' | translate\"></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Pos} from './pos';\r\n\r\nexport class Merchant {\r\n  id: string;\r\n  name: string;\r\n  fiscalCode: string;\r\n  primaryActivity: string;\r\n  address: string;\r\n  zipCode: string;\r\n  city: string;\r\n  country: string;\r\n  description: string;\r\n  url: string;\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new Merchant(), json);\r\n  }\r\n}\r\n\r\nexport class MerchantContainer extends Merchant {\r\n  pos: Pos[];\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new MerchantContainer(), json);\r\n  }\r\n}\r\n\r\nexport class Merchants {\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  merchants: MerchantContainer[];\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new Merchants(), json);\r\n  }\r\n}\r\n\r\n\r\n","import {Component} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n  constructor(private router: Router){}\r\n\r\n  async navigate(link: string): Promise<void> {\r\n    await this.router.navigate(['/' + link]);\r\n  }\r\n\r\n  async navigateExternal(link: string): Promise<void> {\r\n    window.open(link, '_blank');\r\n  }\r\n}\r\n","<div class=\"img-container\">\r\n  <img class=\"image\" src=\"assets/images/wom_header.jpg\" alt=\"WOM header\" />\r\n</div>\r\n<div class=\"container\">\r\n  <div fxLayout=\"row wrap\">\r\n    <img fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"image\" src=\"assets/images/wom-logo.png\" alt=\"WOM logo\" />\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"section\">\r\n      <h1 [innerHTML]=\"'HOME.SECTION_A.TITLE' | translate\"></h1>\r\n      <p [innerHTML]=\"'HOME.SECTION_A.A' | translate\"></p>\r\n      <button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('about')\"></button>\r\n    </div>\r\n\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"section\">\r\n      <p [innerHTML]=\"'HOME.SECTION_A.B' | translate\"></p>\r\n      <button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigateExternal('https://www.digit.srl')\"></button>\r\n    </div>\r\n    <img fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"image\" src=\"assets/images/digit_logo.png\" alt=\"DIGIT srl logo\" />\r\n\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"section\">\r\n      <div class=\"header-box-title\">\r\n        <h1 [innerHTML]=\"'HOME.SECTION_B.TITLE' | translate\"></h1>\r\n      </div>\r\n      <div class=\"header-box-content\">\r\n        <p [innerHTML]=\"'HOME.SECTION_B.MESSAGE' | translate\"></p>\r\n        <button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('volunteer')\"></button>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"section\">\r\n      <div class=\"header-box-title\">\r\n        <h1 [innerHTML]=\"'HOME.SECTION_C.TITLE' | translate\"></h1>\r\n      </div>\r\n      <div class=\"header-box-content\">\r\n        <p [innerHTML]=\"'HOME.SECTION_C.MESSAGE' | translate\"></p>\r\n        <button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('merchant')\"></button>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"100%\" class=\"section\">\r\n      <div class=\"header-box-title\">\r\n        <h1 [innerHTML]=\"'HOME.SECTION_D.TITLE' | translate\"></h1>\r\n      </div>\r\n      <div class=\"header-box-content\">\r\n        <p [innerHTML]=\"'HOME.SECTION_D.MESSAGE' | translate\"></p>\r\n        <button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('instrument')\"></button>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"100%\" class=\"section\">\r\n      <div class=\"header-box-title\">\r\n        <h1 [innerHTML]=\"'HOME.SECTION_E.TITLE' | translate\"></h1>\r\n      </div>\r\n      <div class=\"header-box-content\">\r\n        <p [innerHTML]=\"'HOME.SECTION_E.MESSAGE' | translate\"></p>\r\n        <!--<button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('instrument')\"></button>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"100%\" class=\"section\">\r\n      <div class=\"header-box-content\">\r\n        <h1 [innerHTML]=\"'HOME.SECTION_F.TITLE' | translate\"></h1>\r\n        <p [innerHTML]=\"'HOME.SECTION_F.MESSAGE' | translate\"></p>\r\n        <!--<button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('instrument')\"></button>-->\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {EventEmitter} from '@angular/core';\n\n@Component({\n    selector: 'app-forms-user',\n    templateUrl: './forms-user.directive.html',\n    styleUrls: ['./forms-user.directive.css', '../forms.directive.css']\n})\nexport class UserFormComponent implements OnInit, OnChanges {\n    posLon: string;\n    posLat: string;\n\n    @Input() form: FormGroup;\n    @Input() disabled: boolean;\n    @Output() formChange = new EventEmitter<FormGroup>();\n    constructor(private fb: FormBuilder){}\n\n    ngOnInit(): any {\n        this.form = this.fb.group({\n            email: [{value: '', disabled: this.disabled}, Validators.email],\n            password: [{value: '', disabled: this.disabled}, Validators.required],\n            passwordRepeat: [{value: '', disabled: this.disabled}, Validators.required],\n            firstName: [{value: '', disabled: this.disabled}, Validators.required],\n            lastName: [{value: '', disabled: this.disabled}, Validators.required]\n        });\n\n        this.form.get('email').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('password').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('passwordRepeat').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('firstName').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('lastName').valueChanges.subscribe(value => this.formChange.emit(this.form));\n    }\n\n    ngOnChanges(changes: SimpleChanges): any {\n        console.log('changed');\n        if (this.disabled) {\n            this.form.controls.email.disable();\n            this.form.controls.password.disable();\n            this.form.controls.passwordRepeat.disable();\n            this.form.controls.firstName.disable();\n            this.form.controls.lastName.disable();\n        }\n    }\n}\n","<form [formGroup]=\"form\">\n    <table class=\"full-width\">\n        <tr>\n            <td colspan=\"2\">\n                <h1>{{ 'SIGN_UP.REPRESENTATIVE.TITLE' | translate }}</h1>\n\n                <mat-form-field>\n                    <label>\n                        <input matInput placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.EMAIL' | translate }}\" formControlName=\"email\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.REPRESENTATIVE.EMAIL_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"password\" placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.PASSWORD' | translate }}\" formControlName=\"password\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.REPRESENTATIVE.PASSWORD_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"password\" placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.REPEAT_PASSWORD' | translate }}\" formControlName=\"passwordRepeat\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.REPRESENTATIVE.PASSWORD_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.NAME' | translate }}\" formControlName=\"firstName\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.REPRESENTATIVE.NAME_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.SURNAME' | translate }}\" formControlName=\"lastName\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.REPRESENTATIVE.SURNAME_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n    </table>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <div>\n        <button mat-button matStepperNext>{{'SIGN_UP.NEXT' | translate}}</button>\n    </div>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  mock: false,\r\n  baseUrl: 'https://wom.social/api/',\r\n  v1: 'v1/',\r\n  v2: 'v2/',\r\n  i18n: '1.0.0'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {\n    HttpEvent,\n    HttpHandler,\n    HttpInterceptor,\n    HttpRequest,\n    HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {UserLogin} from '../_models';\n\n@Injectable()\nexport class TokenInterceptorService implements HttpInterceptor {\n    noAuthStrings: string[] = ['aims', 'aim', 'auth/key', 'user/login', 'user/register', 'user/password-reset'];\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // If true do nothing - auth header not needed\n        if (this.noAuthStrings.some(str => req.url.includes(str))) {\n            return next.handle(req);\n        }\n        const userLogin = localStorage.getItem('currentUserLogin');\n        if (userLogin === null) {\n            return next.handle(req);\n        }\n\n        const user: UserLogin = JSON.parse(userLogin);\n\n        const duplicate = req.clone( {setHeaders: {\n                Authorization: 'Bearer ' + user.token\n            }});\n        return next.handle(duplicate).pipe(tap((ev: HttpEvent<any>) => {\n            /*\n            if (ev instanceof HttpResponse) {\n                console.log('HttpResponse:', ev);\n            }\n            */\n        }));\n    }\n}\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-privacy-instrument',\r\n  templateUrl: './instrument.component.html',\r\n  styleUrls: ['./instrument.component.css', '../privacy.component.css']\r\n})\r\nexport class PrivacyInstrumentComponent {}\r\n","<div class=\"container\">\r\n  <h1>Privacy Policy ‘WOM Instrument’</h1>\r\n\r\nThe service is compliant with the <a href=\"https://www.eugdpr.org/\">EU General Data Protection Regulation.</a>\r\n</div>\r\n","export enum DialogType {\n    create,\n    edit\n}\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../_services/user.service';\nimport {User} from '../../_models';\n\n@Component({\n    selector: 'app-user-not-verified',\n    templateUrl: './user-not-verified.component.html',\n    styleUrls: ['./user-not-verified.component.css']\n})\nexport class UserNotVerifiedComponent  {\n    user: User;\n\n    constructor(private userService: UserService) {\n        this.user = userService.currentUserValue;\n    }\n\n    sendValidationEmail(): any {\n        // TODO\n    }\n}\n","<mat-card>\n    <mat-card-content>\n        <p>\n            {{\"USER.NOT_VERIFIED.TITLE\" | translate}}\n        </p>\n        <p>\n            {{\"USER.NOT_VERIFIED.SUBTITLE\" | translate}}\n            <button (click)=\"sendValidationEmail()\" >{{\"USER.NOT_VERIFIED.SEND_EMAIL_LINK\" | translate}}</button>\n            {{\"USER.NOT_VERIFIED.SEND_EMAIL_TEXT\" | translate}}\n            {{user.email}}\n        </p>\n    </mat-card-content>\n</mat-card>\n","export * from './auth.service';\r\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport MapTypeId = google.maps.MapTypeId;\nimport {GoogleMap} from '@angular/google-maps';\n\n@Component({\n    selector: 'app-forms-pos',\n    templateUrl: './forms-pos.directive.html',\n    styleUrls: ['./forms-pos.directive.css', '../forms.directive.css']\n})\nexport class PosFormComponent implements OnInit {\n    @ViewChild(GoogleMap, { static: false }) map: GoogleMap;\n\n    posLon: string;\n    posLat: string;\n    marker: google.maps.Marker;\n    options: google.maps.MapOptions = {\n        center: {lat: 45.788, lng: 9.948},\n        zoom: 4,\n        mapTypeId: MapTypeId.ROADMAP\n    };\n\n    @Input() form: FormGroup;\n    @Output() formChange = new EventEmitter<FormGroup>();\n\n    constructor(private fb: FormBuilder){}\n\n    ngOnInit(): any {\n        this.form = this.fb.group({\n            name: ['', Validators.required],\n            latitude: [{value: 0, disabled: true}, Validators.required],\n            longitude: [{value: 0, disabled: true}, Validators.required],\n            url: ['', !Validators.required]\n        });\n\n        this.form.get('name').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('latitude').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('longitude').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('url').valueChanges.subscribe(value => this.formChange.emit(this.form));\n    }\n\n    mapClick(event): any {\n        console.log(event);\n        const clickedLocation = event.latLng;\n        if (!this.marker) {\n            this.marker = new google.maps.Marker({\n                position: clickedLocation,\n                map: this.map.googleMap,\n                draggable: true\n            });\n            google.maps.event.addListener(this.marker, 'dragend', (evt) => {\n                this.markerLocation();\n            });\n        } else {\n            this.marker.setPosition(clickedLocation);\n        }\n        this.markerLocation();\n    }\n\n    markerLocation(): any {\n        const currentLocation = this.marker.getPosition();\n        this.form.controls.latitude.setValue(currentLocation.lat());\n        this.form.controls.longitude.setValue(currentLocation.lng());\n\n        this.posLat = currentLocation.lat().toFixed(5);\n        this.posLon = currentLocation.lng().toFixed(5);\n    }\n}\n","<form [formGroup]=\"form\">\n    <h1 [innerHTML]=\"'SIGN_UP.POS.TITLE' | translate\"></h1>\n\n    <p [innerHTML]=\"'SIGN_UP.POS.SUBTITLE_A' | translate\"></p>\n\n    <p [innerHTML]=\"'SIGN_UP.POS.SUBTITLE_B' | translate\"></p>\n    <table class=\"full-width\">\n        <tr>\n            <td colspan=\"2\">\n                <mat-form-field class=\"example-full-width\">\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.POS.NAME' | translate }}\" formControlName=\"name\">\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.POS.NAME_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=\"2\">\n                <p class=\"description\">\n                    {{ 'SIGN_UP.POS.NAME_TEXT' | translate }}\n                </p>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=\"2\">\n                {{ 'SIGN_UP.POS.MAP_TITLE' | translate }}\n                <div>\n                    <google-map [options]=\"options\"\n                                (mapClick)=\"mapClick($event)\">\n                    </google-map>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field class=\"example-full-width\">\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.POS.LAT' | translate }}\" [value]=\"posLat\" formControlName=\"latitude\">\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.POS.LAT_LON_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n            <td>\n                <mat-form-field class=\"example-full-width\">\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.POS.LON' | translate }}\" [value]=\"posLon\" formControlName=\"longitude\">\n                    </label>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=\"2\">\n                <mat-form-field class=\"example-full-width\">\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.POS.URL' | translate }}\" formControlName=\"url\">\n                    </label>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=\"2\">\n                <p class=\"description\" [innerHTML]=\"'SIGN_UP.POS.URL_OPTIONAL_TEXT' | translate\"></p>\n            </td>\n        </tr>\n    </table>\n</form>\n","import {Component, Input, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {EventEmitter} from '@angular/core';\nimport {countryList, Merchant, primaryActivityType} from '../../_models';\n\n@Component({\n    selector: 'app-forms-merchant',\n    templateUrl: './forms-merchant.directive.html',\n    styleUrls: ['./forms-merchant.directive.css', '../forms.directive.css']\n})\nexport class MerchantFormComponent implements OnInit {\n    countryList: string[] = countryList;\n    businessList: string[] = primaryActivityType;\n\n    @Input() form: FormGroup;\n    @Input() merchant: Merchant;\n    @Output() formChange = new EventEmitter<FormGroup>();\n    constructor(private fb: FormBuilder){}\n\n    ngOnInit(): any {\n        this.form = this.fb.group({\n            name: ['', [Validators.required, Validators.minLength(8)]],\n            fiscalCode: [\n                {value: '', disabled: this.merchant !== null},\n                [Validators.required, Validators.minLength(16), Validators.maxLength(16)]\n            ],\n            address: ['', !Validators.required],\n            cap: ['', Validators.required],\n            city: ['', Validators.required],\n            country: ['', Validators.required],\n            primaryActivity: ['', Validators.required],\n            url: ['', !Validators.required],\n            description: ['', !Validators.required]\n        });\n\n        this.form.get('name').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('fiscalCode').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('address').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('cap').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('city').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('country').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('primaryActivity').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('url').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('description').valueChanges.subscribe(value => this.formChange.emit(this.form));\n\n        if (this.merchant !== null) {\n            this.form.controls.name.setValue(this.merchant.name);\n            this.form.controls.fiscalCode.setValue(this.merchant.fiscalCode);\n            this.form.controls.address.setValue(this.merchant.address);\n            this.form.controls.cap.setValue(this.merchant.zipCode);\n            this.form.controls.city.setValue(this.merchant.city);\n            this.form.controls.country.setValue(this.merchant.country);\n            this.form.controls.primaryActivity.setValue(this.merchant.primaryActivity);\n            this.form.controls.url.setValue(this.merchant.url);\n            this.form.controls.description.setValue(this.merchant.description);\n        }\n    }\n}\n","<form [formGroup]=\"form\">\n    <!-- MERCHANT DATA -->\n    <table class=\"full-width\">\n        <tr>\n            <td colspan=\"2\">\n                <h1>{{ 'SIGN_UP.MERCHANT.TITLE' | translate }}</h1>\n\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"text\" min=\"8\" placeholder=\"{{ 'SIGN_UP.MERCHANT.NAME' | translate }}\" formControlName=\"name\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.MERCHANT.NAME_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput\n                               type=\"text\"\n                               #cf\n                               minlength=\"16\"\n                               maxlength=\"16\"\n                               placeholder=\"{{ 'SIGN_UP.MERCHANT.CF' | translate }}\"\n                               formControlName=\"fiscalCode\"\n                               required>\n                    </label>\n                    <mat-hint align=\"start\">{{cf.value.length}} / {{cf.maxLength}}</mat-hint>\n                    <mat-error>\n                        {{'SIGN_UP.MERCHANT.CF_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n    </table>\n\n    <!-- OPTIONAL MERCHANT DATA -->\n    <div class=\"row form-subgroup\">\n        <p class=\"description\" [innerHTML]=\"'SIGN_UP.MERCHANT.OPTIONAL_TEXT' | translate\"></p>\n        <table class=\"full-width\">\n            <tr>\n                <td colspan=\"2\">\n                    <mat-form-field>\n                        <label>\n                            <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.MERCHANT.ADDRESS' | translate }}\" formControlName=\"address\">\n                        </label>\n                        <mat-error>\n                            {{'SIGN_UP.MERCHANT.ADDRESS_ERROR' | translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </td>\n            </tr>\n            <tr>\n                <td colspan=\"1\">\n                    <mat-form-field>\n                        <label>\n                            <input matInput #cap placeholder=\"{{ 'SIGN_UP.MERCHANT.CAP' | translate }}\" formControlName=\"cap\">\n                        </label>\n                        <mat-hint align=\"start\">{{cap.value.length}} / 5</mat-hint>\n                        <mat-error>\n                            {{'SIGN_UP.MERCHANT.CAP_ERROR' | translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </td>\n                <td colspan=\"1\">\n                    <mat-form-field>\n                        <label>\n                            <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.MERCHANT.CITY' | translate }}\" formControlName=\"city\">\n                        </label>\n                    </mat-form-field>\n                </td>\n            </tr>\n            <tr>\n                <td colspan=\"2\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>{{ 'SIGN_UP.MERCHANT.SELECT_COUNTRY' | translate }}</mat-label>\n                        <mat-select formControlName=\"country\" >\n                            <mat-option *ngFor=\"let country of countryList\" [value]=\"country\">{{country}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <table class=\"full-width\">\n        <tr>\n            <td>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>{{ 'SIGN_UP.MERCHANT.BUSINESS' | translate }}</mat-label>\n                    <mat-select formControlName=\"primaryActivity\" >\n                        <mat-option *ngFor=\"let business of businessList\" [value]=\"business\">{{business}}</mat-option>\n                    </mat-select>\n                    <mat-error>\n                        {{'SIGN_UP.MERCHANT.BUSINESS_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.MERCHANT.WEBSITE' | translate }}\" formControlName=\"url\">\n                    </label>\n\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <p class=\"description\" [innerHTML]=\"'SIGN_UP.MERCHANT.OPTIONAL_WEBSITE_TEXT' | translate\"></p>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field class=\"example-full-width \">\n                    <label>\n                        <textarea class=\"form-subgroup\" matInput placeholder=\"{{ 'SIGN_UP.MERCHANT.DESCRIPTION' | translate }}\" formControlName=\"description\"></textarea>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.MERCHANT.DESCRIPTION_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <p class=\"description\">\n                    {{ 'SIGN_UP.MERCHANT.DESCRIPTION_TEXT' | translate }}\n                </p>\n            </td>\n        </tr>\n    </table>\n</form>\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-privacy-pos',\r\n  templateUrl: './pos.component.html',\r\n  styleUrls: ['./pos.component.css', '../privacy.component.css']\r\n})\r\nexport class PrivacyPosComponent {}\r\n","<div class=\"container\">\r\n  <h1>Privacy Policy ‘WOM Point of Service’</h1>\r\n  Personal data collected for the following purposes and using the following services:\r\n  <ul>\r\n    <li>\r\n      Authentication: password and username\r\n    </li>\r\n    <li>\r\n      Non-continuous geolocation: geographic location\r\n    </li>\r\n  </ul>\r\n\r\n  WOM POS will ask for the following permissions during regular operation:\r\n  <ul>\r\n    <li>\r\n      Location: using your device’s GPS to find current location (this permission is optional)\r\n    </li>\r\n  </ul>\r\n\r\n  Communication protocols with the WOM POS online service have been developed in order to be privacy-preserving by design:\r\n  <ul>\r\n    <li>\r\n      Unique identifiers of sessions and other sensitive data are never transmitted to the online service and are kept on the device;\r\n    </li>\r\n    <li>\r\n      No personal information is ever stored on our servers.\r\n    </li>\r\n  </ul>\r\n  The service is compliant with the <a href=\"https://www.eugdpr.org/\">EU General Data Protection Regulation.</a>\r\n</div>\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <h2>{{ 'SIGN_IN.TITLE' | translate }}</h2>\r\n      <mat-error *ngIf=\"loginInvalid\">\r\n        {{error}}\r\n      </mat-error>\r\n      <mat-form-field class=\"full-width-input\">\r\n        <label>\r\n          <input matInput placeholder=\"{{ 'SIGN_IN.EMAIL' | translate }}\" formControlName=\"username\" required>\r\n        </label>\r\n        <mat-error>\r\n          {{ 'SIGN_IN.ERR.EMAIL' | translate }}\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"full-width-input\">\r\n        <label>\r\n          <input matInput type=\"password\" placeholder=\"{{ 'SIGN_IN.PASSWORD' | translate }}\" formControlName=\"password\" required>\r\n        </label>\r\n        <mat-error>\r\n          {{ 'SIGN_IN.ERR.PASSWORD' | translate }}\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <button mat-raised-button color=\"primary\">{{ 'SIGN_IN.BTN_SIGN_IN' | translate }}</button>\r\n    </form>\r\n      <div class=\"bottom-buttons\">\r\n        <a class=\"nav-link text-spacing\" [routerLink]=\"['/authentication/request-new-password']\">{{ 'SIGN_IN.BTN_FORGOT_PASSWORD' | translate }}</a>\r\n        <a class=\"nav-link text-spacing\" [routerLink]=\"['/authentication/signup']\">{{ 'SIGN_IN.BTN_SIGN_UP' | translate }}</a>\r\n      </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {first} from 'rxjs/operators';\r\nimport {UserService} from '../../_services/user.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  error: string;\r\n  form: FormGroup;\r\n  public loginInvalid: boolean;\r\n  private formSubmitAttempt: boolean;\r\n  private returnUrl: string;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/user/home';\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', Validators.email],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    if (await this.userService.checkAuthenticated()) {\r\n      await this.router.navigate([this.returnUrl]);\r\n    }\r\n  }\r\n\r\n  async onSubmit(): Promise<void> {\r\n    this.loginInvalid = false;\r\n    this.formSubmitAttempt = false;\r\n    if (this.form.valid) {\r\n      try {\r\n        console.log('request login...');\r\n        const username = this.form.get('username').value;\r\n        const password = this.form.get('password').value;\r\n        this.userService.login(username, password)\r\n          .pipe(first())\r\n          .subscribe(\r\n            data => {\r\n              this.userService.getLoggedUser().pipe().subscribe(\r\n                  user => {\r\n                    this.router.navigate([this.returnUrl]);\r\n                  }, error => {\r\n                    console.log(error);\r\n                    this.error = error;\r\n                  });\r\n            },\r\n            error => {\r\n              console.log(error);\r\n              this.translate.get(['SIGN_IN.ERR.LOGIN', 'SIGN_IN.ERR.LOGIN']).subscribe(res => {\r\n                if (error.status === 403) {\r\n                  this.error = res['SIGN_IN.ERR.LOGIN'];\r\n                } else {\r\n                  this.error = res['SIGN_IN.ERR.LOGIN'];\r\n                }\r\n                this.loginInvalid = true;\r\n              });\r\n            });\r\n      } catch (err) {\r\n        console.log(err);\r\n        this.loginInvalid = true;\r\n      }\r\n    } else {\r\n      this.formSubmitAttempt = true;\r\n    }\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-privacy-pocket',\r\n  templateUrl: './pocket.component.html',\r\n  styleUrls: ['./pocket.component.css', '../privacy.component.css']\r\n})\r\nexport class PrivacyPocketComponent {}\r\n","<div class=\"container\">\r\n  <h1>Privacy Policy ‘WOM Pocket’</h1>\r\n  The Pocket mobile application and its online services are designed to be fully anonymous and will never collect personal information from their users.\r\n\r\n  WOM Pocket will ask for the following permissions during regular operation:\r\n\r\n  <ul>\r\n    <li>\r\n      Camera: Using your device’s camera to scan a QR-Code\r\n    </li>\r\n  </ul>\r\n  It is required to grant these permissions otherwise the stated functions may not work as intended.\r\n\r\n  Communication protocols with the Pocket online service have been developed in order to be privacy-preserving by design:\r\n\r\n  <ul>\r\n    <li>\r\n      Unique identifiers of sessions and other sensitive data are never transmitted to the online service and are kept on the device;\r\n    </li>\r\n    <li>\r\n      No personal information is ever stored on our servers.\r\n    </li>\r\n  </ul>\r\n\r\n  The service is compliant with the <a href=\"https://www.eugdpr.org/\">EU General Data Protection Regulation.</a>\r\n</div>\r\n","import { Component } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor(translate: TranslateService) {\n    translate.addLangs(['en', 'it']);\n\n    translate.setDefaultLang('it');\n\n    console.log('browser lang: ', translate.getBrowserLang());\n    if (translate.getBrowserLang()) {\n      translate.use(translate.getBrowserLang());\n    }\n  }\n}\n","<div fxLayout=\"column\" fxFlexFill>\n  <app-nav></app-nav>\n  <div fxFlex class=\"main-container\">\n    <app-breadcrumbs></app-breadcrumbs>\n    <router-outlet></router-outlet>\n  </div>\n  <app-footer></app-footer>\n</div>\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-privacy',\r\n  templateUrl: './privacy.component.html',\r\n  styleUrls: ['./privacy.component.css']\r\n})\r\nexport class PrivacyComponent {}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Title</title>\r\n</head>\r\n<body>\r\n\r\n</body>\r\n</html>\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {User, UserLogin, UserRegistrationPayload} from '../_models';\nimport {environment} from '../../environments/environment';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n    localUrlV1 = environment.baseUrl + environment.v1 + 'user/';\n    localUrlV2 = environment.baseUrl + environment.v2 + 'user/';\n\n    // Login data\n    public currentUserLogin: Observable<UserLogin>;\n    private currentUserLoginSubject: BehaviorSubject<UserLogin>;\n\n    // User data\n    public currentUser: Observable<User>;\n    private currentUserSubject: BehaviorSubject<User>;\n\n    constructor(private http: HttpClient) {\n        const localStorageUserLogin = UserLogin.fromJson(JSON.parse(localStorage.getItem('currentUserLogin')));\n        this.currentUserLoginSubject = new BehaviorSubject<UserLogin>(localStorageUserLogin);\n        this.currentUserLogin = this.currentUserLoginSubject.asObservable();\n\n        const localStorageUser = User.fromJson(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUserSubject = new BehaviorSubject<User>(localStorageUser);\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    public get currentUserLoginValue(): UserLogin {\n        return this.currentUserLoginSubject.value;\n    }\n\n    async checkAuthenticated(): Promise<boolean> {\n        return this.currentUserSubject.getValue() !== null && this.currentUserSubject.getValue() !== undefined;\n    }\n\n    /**\n     * Login and retrieve the user id and bearer token\n     * @param email username is always email\n     * @param password password associated for the username\n     */\n    login(email: string, password: string): Observable<any> {\n        return this.http.post<any>(this.localUrlV1 + 'login', {\n            /*\n            email,\n            password,\n            clientName: '',\n            persistent: true\n            */\n        }, {\n            observe: 'response',\n            headers: {\n                Authorization: 'Basic ' + btoa(email + ':' + password)\n            }\n        })\n            .pipe(map(response => {\n                // login successful if there's a valid user in the response\n                if (response.body) {\n                    const login = UserLogin.fromJson(response.body);\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\n                    localStorage.setItem('currentUserLogin', JSON.stringify(login));\n                    this.currentUserLoginSubject.next(login);\n                    return login;\n                }\n            }));\n    }\n\n    /**\n     * Notify the server that the user has logged out & remove local storage data\n     */\n    logout(): void {\n        this.http.post<any>(this.localUrlV1 + 'logout', {})\n            .pipe(map(value => {\n                console.log('logout: ' + value);\n            }));\n\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUserLogin');\n        localStorage.removeItem('currentUser');\n\n        this.currentUserLoginSubject.next(null);\n        this.currentUserSubject.next(null);\n    }\n\n    /**\n     * Get user data for current user id\n     */\n    getLoggedUser(): Observable<User> {\n        return this.http.get<User>(this.localUrlV1 + this.currentUserLoginSubject.value.id)\n            .pipe(map(user => {\n                // user id is correct if value is not null\n                if (user) {\n                    // hydrate a full User object from its JSON representation (to have its methods/logic)\n                    user = User.fromJson(user);\n\n                    // store user details in local storage to save user data in between page refreshes\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n                }\n                return user;\n            }));\n    }\n\n    /**\n     * Register a new user\n     * @param data user data\n     */\n    register(data: UserRegistrationPayload): Observable<User> {\n        return this.http.post<User>(this.localUrlV1 + 'register', data)\n            .pipe(map(response => response));\n    }\n\n    /**\n     * Update an existing user's data\n     * @param data user data\n     */\n    update(data: UserRegistrationPayload): Observable<User> {\n        return this.http.patch<User>(this.localUrlV1 + this.currentUserLoginSubject.value.id,\n            data).pipe(map (response => response));\n    }\n\n    /**\n     * verify status of user account\n     */\n    verify(): Observable<any> {\n        return this.http.post<any>(this.localUrlV1 + this.currentUserLoginSubject.value.id + '/verify', {})\n            .pipe(map (response => response));\n    }\n\n    /**\n     * ask for password reset\n     * @param email registered user's email (username)\n     */\n    passwordResetRequest(email: string): Observable<any> {\n        return this.http.post<any>(this.localUrlV1 + 'password-reset',\n            {email}).pipe(map (response => response));\n    }\n\n    /**\n     * Send new password\n     * @param userId user's id to reset password for\n     * @param token confirmation token\n     * @param password new password\n     */\n    passwordReset(userId: string, token: string, password: string): Observable<any> {\n        return this.http.post<any>(this.localUrlV1 + userId + '/password-reset',\n            {\n                token,\n                password\n            }).pipe(map (response => response));\n    }\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Merchant} from '../_models';\nimport {environment} from '../../environments/environment';\nimport {map} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class MerchantService {\n    localUrlV1 = environment.baseUrl + environment.v1 + 'merchant/';\n    localUrlV2 = environment.baseUrl + environment.v2 + 'merchant/';\n\n    constructor(private http: HttpClient) {}\n\n    /**\n     * Get merchant data from specific merchant id\n     * @param id merchant id\n     */\n    getMerchant(id: string): Observable<Merchant> {\n        return this.http.get<Merchant>(this.localUrlV1 + id)\n            .pipe(map (response => response));\n    }\n\n    /**\n     * Update all information of a merchant\n     * @param merchant data to update\n     */\n    update(merchant: Merchant): Observable<Merchant> {\n        return this.http.patch<Merchant>(this.localUrlV1 + merchant.id,\n            {\n                name: merchant.name,\n                fiscalCode: merchant.fiscalCode,\n                primaryActivity: merchant.primaryActivity,\n                address: merchant.address,\n                zipCode: merchant.zipCode,\n                city: merchant.city,\n                country: merchant.country,\n                description: merchant.description,\n                url: merchant.url\n            })\n            .pipe(map (response => response));\n    }\n\n    /**\n     * Create a new merchant\n     * @param merchant data of merchant to create\n     */\n    register(merchant: Merchant): Observable<Merchant> {\n        return this.http.put<Merchant>(this.localUrlV1,\n            {\n                name: merchant.name,\n                fiscalCode: merchant.fiscalCode,\n                primaryActivityType: merchant.primaryActivity,\n                address: merchant.address,\n                zipCode: merchant.zipCode,\n                city: merchant.city,\n                country: merchant.country,\n                description: merchant.description,\n                url: merchant.url\n            })\n            .pipe(map (response => response));\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {MenuItem} from 'primeng-lts/api';\nimport {filter} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html'\n})\nexport class BreadcrumbsComponent implements OnInit {\n    static readonly ROUTE_DATA_BREADCRUMB = 'breadcrumb';\n    readonly home = {icon: 'pi pi-home', url: 'home'};\n    menuItems: MenuItem[];\n\n    constructor(\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private translate: TranslateService) {}\n\n    ngOnInit(): void {\n        this.router.events\n            .pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(() => this.menuItems = this.createBreadcrumbs(this.activatedRoute.root));\n    }\n\n    private createBreadcrumbs(route: ActivatedRoute, url: string = '#', breadcrumbs: MenuItem[] = []): MenuItem[] {\n        const children: ActivatedRoute[] = route.children;\n        const menu: MenuItem[] = [];\n        breadcrumbs.forEach(b => {\n            const label: string = this.translate.instant(b.label);\n            menu.push({label, url: b.url});\n        });\n\n        if (children.length === 0) {\n            return menu;\n        }\n\n        for (const child of children) {\n            const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\n            if (routeURL !== '') {\n                url += `/${routeURL}`;\n            }\n\n            const labelVal = child.snapshot.data[BreadcrumbsComponent.ROUTE_DATA_BREADCRUMB];\n            if (labelVal !== undefined) {\n                const label: string = this.translate.instant(labelVal);\n                menu.push({label, url});\n            }\n            return this.createBreadcrumbs(child, url, menu);\n        }\n    }\n}\n","<p-breadcrumb [home]=\"home\" [model]=\"menuItems\"></p-breadcrumb>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS, HttpClient} from '@angular/common/http';\r\nimport {appRoutingModule} from './app.routing';\r\nimport {RouterModule} from '@angular/router';\r\nimport {TranslateLoader, TranslateModule, TranslateService} from '@ngx-translate/core';\r\nimport {HomeComponent} from './home';\r\nimport {NavComponent} from './nav/nav.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {SignInComponent} from './authentication/signin/signin.component';\r\nimport {FooterComponent} from './footer/footer.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MerchantSignUpComponent} from './authentication/signup/signup.component';\r\nimport {FlexLayoutModule, FlexModule} from '@angular/flex-layout';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MerchantDashboardComponent} from './merchant/dashboard/merchant-dashboard.component';\r\nimport {PrivacyComponent} from './privacy/privacy.component';\r\nimport {PrivacyInstrumentComponent} from './privacy/instrument/instrument.component';\r\nimport {PrivacyPocketComponent} from './privacy/pocket/pocket.component';\r\nimport {PrivacyPosComponent} from './privacy/pos/pos.component';\r\nimport {HttpMockRequestInterceptor} from './_helpers/HttpMockRequestInterceptor';\r\n\r\nimport {environment} from '../environments/environment';\r\nimport {TokenInterceptorService} from './_helpers/httpInterceptor';\r\nimport {UserHomeComponent} from './user/home/user-home.component';\r\nimport {PosFormComponent} from './_forms/pos/forms-pos.directive';\r\nimport {UserFormComponent} from './_forms/user/forms-user.directive';\r\nimport {MerchantFormComponent} from './_forms/merchant/forms-merchant.directive';\r\nimport {ProgressSpinnerComponent} from './_progressSpinner/progress-spinner.component';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {AppOverlayModule} from './_overlay/overlay.module';\r\nimport {UserNotVerifiedComponent} from './user/not-verified/user-not-verified.component';\r\nimport {AddMerchantDialogComponent} from './user/add-merchant/add-merchant.component';\r\nimport {AddPosDialogComponent} from './user/add-pos/add-pos.component';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {ResetPasswordComponent} from './authentication/reset-password/reset-password.component';\r\nimport {LogInErrorDialogComponent} from './authentication/signup/signup-login-error.directive';\r\nimport {UserVerifyComponent} from './user/verify/user-verify.component';\r\nimport {PageNotFoundComponent} from './pageNotFound/page-not-found.component';\r\nimport {RequestNewPasswordComponent} from './authentication/requestNewPassword/request-new-password.component';\r\nimport {MerchantComponent} from './merchant/merchant.component';\r\nimport {InstrumentComponent} from './instrument/instrument.component';\r\nimport {VolunteerComponent} from './volunteer/volunteer.component';\r\nimport {AboutComponent} from './about/about.component';\r\nimport {BreadcrumbsComponent} from './breadcrumbs/breadcrumbs.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport {BreadcrumbModule} from 'primeng-lts/breadcrumb';\r\n\r\n// AoT requires an exported function for factories\r\nexport const createTranslateLoader = (http: HttpClient) => new TranslateHttpLoader(http, './assets/i18n/', '.json?cb=' + environment.i18n);\r\nexport function translateFactory(translate: TranslateService): any {\r\n    return async () => {\r\n        translate.setDefaultLang('en');\r\n        translate.use('en');\r\n        return new Promise(resolve => {\r\n            translate.onLangChange.subscribe(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n}\r\nexport const isMock = environment.mock;\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    NavComponent,\r\n    SignInComponent,\r\n    MerchantSignUpComponent,\r\n    MerchantDashboardComponent,\r\n    PrivacyComponent,\r\n    PrivacyInstrumentComponent,\r\n    PrivacyPocketComponent,\r\n    PrivacyPosComponent,\r\n    UserHomeComponent,\r\n    PosFormComponent,\r\n    UserFormComponent,\r\n    MerchantFormComponent,\r\n    ProgressSpinnerComponent,\r\n    UserNotVerifiedComponent,\r\n    AddMerchantDialogComponent,\r\n    AddPosDialogComponent,\r\n    ResetPasswordComponent,\r\n    LogInErrorDialogComponent,\r\n    UserVerifyComponent,\r\n    RequestNewPasswordComponent,\r\n    PageNotFoundComponent,\r\n    MerchantComponent,\r\n    InstrumentComponent,\r\n    VolunteerComponent,\r\n    AboutComponent,\r\n    BreadcrumbsComponent\r\n  ],\r\n  exports: [\r\n      MatStepperModule\r\n  ],\r\n    imports: [\r\n        appRoutingModule,\r\n        RouterModule.forRoot([\r\n            {path: '', component: HomeComponent, pathMatch: 'full'}\r\n        ]),\r\n        TranslateModule.forRoot({\r\n            defaultLanguage: 'en',\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (createTranslateLoader),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        FlexLayoutModule,\r\n        MatIconModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatExpansionModule,\r\n        MatCheckboxModule,\r\n        MatMenuModule,\r\n        MatDividerModule,\r\n        MatProgressSpinnerModule,\r\n        MatInputModule,\r\n        MatCardModule,\r\n        MatSlideToggleModule,\r\n        MatSelectModule,\r\n        MatStepperModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatSnackBarModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        GoogleMapsModule,\r\n        OverlayModule,\r\n        AppOverlayModule,\r\n        TranslateModule,\r\n        MatButtonModule,\r\n        MatButtonModule,\r\n        TranslateModule,\r\n        MatGridListModule,\r\n        MatGridListModule,\r\n        GoogleMapsModule,\r\n        FlexModule,\r\n        FlexLayoutModule,\r\n        FlexModule,\r\n        MatButtonModule,\r\n        BreadcrumbModule\r\n    ],\r\n  providers: [\r\n      {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: translateFactory,\r\n          deps: [TranslateService],\r\n          multi: true\r\n      },\r\n    isMock\r\n      ? [{\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: HttpMockRequestInterceptor,\r\n          multi: true\r\n        },\r\n          CookieService\r\n        ]\r\n      : [{\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: TokenInterceptorService,\r\n          multi: true\r\n        },\r\n          CookieService\r\n        ]\r\n  ],\r\n  entryComponents: [ProgressSpinnerComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export const countryList = [\n    'Afghanistan',\n    'Albania',\n    'Algeria',\n    'American Samoa',\n    'Andorra',\n    'Angola',\n    'Anguilla',\n    'Antarctica',\n    'Antigua and Barbuda',\n    'Argentina',\n    'Armenia',\n    'Aruba',\n    'Australia',\n    'Austria',\n    'Azerbaijan',\n    'Bahamas (the)',\n    'Bahrain',\n    'Bangladesh',\n    'Barbados',\n    'Belarus',\n    'Belgium',\n    'Belize',\n    'Benin',\n    'Bermuda',\n    'Bhutan',\n    'Bolivia (Plurinational State of)',\n    'Bonaire, Sint Eustatius and Saba',\n    'Bosnia and Herzegovina',\n    'Botswana',\n    'Bouvet Island',\n    'Brazil',\n    'British Indian Ocean Territory (the)',\n    'Brunei Darussalam',\n    'Bulgaria',\n    'Burkina Faso',\n    'Burundi',\n    'Cabo Verde',\n    'Cambodia',\n    'Cameroon',\n    'Canada',\n    'Cayman Islands (the)',\n    'Central African Republic (the)',\n    'Chad',\n    'Chile',\n    'China',\n    'Christmas Island',\n    'Cocos (Keeling) Islands (the)',\n    'Colombia',\n    'Comoros (the)',\n    'Congo (the Democratic Republic of the)',\n    'Congo (the)',\n    'Cook Islands (the)',\n    'Costa Rica',\n    'Croatia',\n    'Cuba',\n    'Curaçao',\n    'Cyprus',\n    'Czechia',\n    'Côte d\\'Ivoire',\n    'Denmark',\n    'Djibouti',\n    'Dominica',\n    'Dominican Republic (the)',\n    'Ecuador',\n    'Egypt',\n    'El Salvador',\n    'Equatorial Guinea',\n    'Eritrea',\n    'Estonia',\n    'Eswatini',\n    'Ethiopia',\n    'Falkland Islands (the) [Malvinas]',\n    'Faroe Islands (the)',\n    'Fiji',\n    'Finland',\n    'France',\n    'French Guiana',\n    'French Polynesia',\n    'French Southern Territories (the)',\n    'Gabon',\n    'Gambia (the)',\n    'Georgia',\n    'Germany',\n    'Ghana',\n    'Gibraltar',\n    'Greece',\n    'Greenland',\n    'Grenada',\n    'Guadeloupe',\n    'Guam',\n    'Guatemala',\n    'Guernsey',\n    'Guinea',\n    'Guinea-Bissau',\n    'Guyana',\n    'Haiti',\n    'Heard Island and McDonald Islands',\n    'Holy See (the)',\n    'Honduras',\n    'Hong Kong',\n    'Hungary',\n    'Iceland',\n    'India',\n    'Indonesia',\n    'Iran (Islamic Republic of)',\n    'Iraq',\n    'Ireland',\n    'Isle of Man',\n    'Israel',\n    'Italy',\n    'Jamaica',\n    'Japan',\n    'Jersey',\n    'Jordan',\n    'Kazakhstan',\n    'Kenya',\n    'Kiribati',\n    'Korea (the Democratic People\\'s Republic of)',\n    'Korea (the Republic of)',\n    'Kuwait',\n    'Kyrgyzstan',\n    'Lao People\\'s Democratic Republic (the)',\n    'Latvia',\n    'Lebanon',\n    'Lesotho',\n    'Liberia',\n    'Libya',\n    'Liechtenstein',\n    'Lithuania',\n    'Luxembourg',\n    'Macao',\n    'Madagascar',\n    'Malawi',\n    'Malaysia',\n    'Maldives',\n    'Mali',\n    'Malta',\n    'Marshall Islands (the)',\n    'Martinique',\n    'Mauritania',\n    'Mauritius',\n    'Mayotte',\n    'Mexico',\n    'Micronesia (Federated States of)',\n    'Moldova (the Republic of)',\n    'Monaco',\n    'Mongolia',\n    'Montenegro',\n    'Montserrat',\n    'Morocco',\n    'Mozambique',\n    'Myanmar',\n    'Namibia',\n    'Nauru',\n    'Nepal',\n    'Netherlands (the)',\n    'New Caledonia',\n    'New Zealand',\n    'Nicaragua',\n    'Niger (the)',\n    'Nigeria',\n    'Niue',\n    'Norfolk Island',\n    'Northern Mariana Islands (the)',\n    'Norway',\n    'Oman',\n    'Pakistan',\n    'Palau',\n    'Palestine, State of',\n    'Panama',\n    'Papua New Guinea',\n    'Paraguay',\n    'Peru',\n    'Philippines (the)',\n    'Pitcairn',\n    'Poland',\n    'Portugal',\n    'Puerto Rico',\n    'Qatar',\n    'Republic of North Macedonia',\n    'Romania',\n    'Russian Federation (the)',\n    'Rwanda',\n    'Réunion',\n    'Saint Barthélemy',\n    'Saint Helena, Ascension and Tristan da Cunha',\n    'Saint Kitts and Nevis',\n    'Saint Lucia',\n    'Saint Martin (French part)',\n    'Saint Pierre and Miquelon',\n    'Saint Vincent and the Grenadines',\n    'Samoa',\n    'San Marino',\n    'Sao Tome and Principe',\n    'Saudi Arabia',\n    'Senegal',\n    'Serbia',\n    'Seychelles',\n    'Sierra Leone',\n    'Singapore',\n    'Sint Maarten (Dutch part)',\n    'Slovakia',\n    'Slovenia',\n    'Solomon Islands',\n    'Somalia',\n    'South Africa',\n    'South Georgia and the South Sandwich Islands',\n    'South Sudan',\n    'Spain',\n    'Sri Lanka',\n    'Sudan (the)',\n    'Suriname',\n    'Svalbard and Jan Mayen',\n    'Sweden',\n    'Switzerland',\n    'Syrian Arab Republic',\n    'Taiwan',\n    'Tajikistan',\n    'Tanzania, United Republic of',\n    'Thailand',\n    'Timor-Leste',\n    'Togo',\n    'Tokelau',\n    'Tonga',\n    'Trinidad and Tobago',\n    'Tunisia',\n    'Turkey',\n    'Turkmenistan',\n    'Turks and Caicos Islands (the)',\n    'Tuvalu',\n    'Uganda',\n    'Ukraine',\n    'United Arab Emirates (the)',\n    'United Kingdom of Great Britain and Northern Ireland (the)',\n    'United States Minor Outlying Islands (the)',\n    'United States of America (the)',\n    'Uruguay',\n    'Uzbekistan',\n    'Vanuatu',\n    'Venezuela (Bolivarian Republic of)',\n    'Viet Nam',\n    'Virgin Islands (British)',\n    'Virgin Islands (U.S.)',\n    'Wallis and Futuna',\n    'Western Sahara',\n    'Yemen',\n    'Zambia',\n    'Zimbabwe',\n    'Åland Islands'\n];\n","export const primaryActivityType = [\n    'Agricolture',\n    'Construction',\n    'Manifacture',\n    'RetailCommerce',\n    'Transport',\n    'Lodging',\n    'Food',\n    'Information',\n    'Finance',\n    'Travel',\n    'Education',\n    'Health',\n    'Sports',\n    'Services',\n    'Entertainment',\n    'Organizations'\n];\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-instrument',\r\n  templateUrl: './instrument.component.html',\r\n  styleUrls: ['./instrument.component.css']\r\n})\r\nexport class InstrumentComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <span class=\"page-title\">{{\"INSTRUMENT.TITLE\" | translate}}</span>\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"20px grid\">\r\n    <div fxFlex=\"100%\">\r\n      <p class=\"page-secondary-title\" [innerHTML]=\"'INSTRUMENT.SECTION_A.TITLE' | translate\"></p>\r\n      <p [innerHTML]=\"'INSTRUMENT.SECTION_A.A' | translate\"></p>\r\n    </div>\r\n</div>\r\n","export class Pos {\r\n  id: string;\r\n  name: string;\r\n  url: string;\r\n  privateKey: string;\r\n  publicKey: string;\r\n  latitude: number;\r\n  longitude: number;\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new Pos(), json);\r\n  }\r\n}\r\n\r\nexport class PosRegistration {\r\n  ownerMerchantId: string;\r\n  name: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  url: string;\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new PosRegistration(), json);\r\n  }\r\n}\r\n","import {AuthGuard} from './_helpers/auth.guard';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from './home';\r\nimport {SignInComponent} from './authentication/signin/signin.component';\r\nimport {MerchantSignUpComponent} from './authentication/signup/signup.component';\r\nimport {MerchantDashboardComponent} from './merchant/dashboard/merchant-dashboard.component';\r\nimport {PrivacyComponent} from './privacy/privacy.component';\r\nimport {PrivacyPosComponent} from './privacy/pos/pos.component';\r\nimport {PrivacyPocketComponent} from './privacy/pocket/pocket.component';\r\nimport {PrivacyInstrumentComponent} from './privacy/instrument/instrument.component';\r\nimport {UserHomeComponent} from './user/home/user-home.component';\r\nimport {UserNotVerifiedComponent} from './user/not-verified/user-not-verified.component';\r\nimport {ResetPasswordComponent} from './authentication/reset-password/reset-password.component';\r\nimport {UserVerifyComponent} from './user/verify/user-verify.component';\r\nimport {PageNotFoundComponent} from './pageNotFound/page-not-found.component';\r\nimport {RequestNewPasswordComponent} from './authentication/requestNewPassword/request-new-password.component';\r\nimport {MerchantComponent} from './merchant/merchant.component';\r\nimport {VolunteerComponent} from './volunteer/volunteer.component';\r\nimport {InstrumentComponent} from './instrument/instrument.component';\r\nimport {AboutComponent} from './about/about.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: '/home',\r\n        pathMatch: 'full',\r\n        data: {\r\n          breadcrumb: null\r\n        }\r\n      },\r\n      {\r\n        path: 'home',\r\n        component: HomeComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.HOME'\r\n        },\r\n      },\r\n      {\r\n        path: 'about',\r\n        component: AboutComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.ABOUT'\r\n        },\r\n      },\r\n      {\r\n        path: 'volunteer',\r\n        component: VolunteerComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.VOLUNTEER'\r\n        },\r\n      },\r\n      {\r\n        path: 'merchant',\r\n        component: MerchantComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.MERCHANT'\r\n        },\r\n      },\r\n      {\r\n        path: 'instrument',\r\n        component: InstrumentComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.INSTRUMENT'\r\n        },\r\n      },\r\n      {\r\n        path: 'user',\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.USER.USER'\r\n        },\r\n        children: [\r\n          {\r\n            path: 'merchant',\r\n            component :  MerchantDashboardComponent,\r\n            canActivate: [AuthGuard],\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.USER.MERCHANT'\r\n            }\r\n          },\r\n          {\r\n            path: 'not-verified',\r\n            component: UserNotVerifiedComponent,\r\n            canActivate: [AuthGuard],\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.USER.ERROR'\r\n            }\r\n          },\r\n          {\r\n            path: 'home',\r\n            component: UserHomeComponent,\r\n            canActivate: [AuthGuard],\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.USER.HOME'\r\n            }\r\n          },\r\n          {\r\n            path: 'verify',\r\n            component: UserVerifyComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.USER.VERIFY'\r\n            }\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'authentication',\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.AUTHENTICATION.AUTHENTICATION'\r\n        },\r\n        children: [\r\n          {\r\n            path: 'signin',\r\n            component : SignInComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.AUTHENTICATION.SIGNIN'\r\n            }\r\n          },\r\n          {\r\n            path: 'signup',\r\n            component : MerchantSignUpComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.AUTHENTICATION.SIGNUP'\r\n            }\r\n          },\r\n          {\r\n            path: 'reset-password',\r\n            component : ResetPasswordComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.AUTHENTICATION.RESET_PASSWORD'\r\n            }\r\n          },\r\n          {\r\n            path: 'request-new-password',\r\n            component : RequestNewPasswordComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.AUTHENTICATION.NEW_PASSWORD'\r\n            }\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'privacy',\r\n        component : PrivacyComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.PRIVACY.PRIVACY'\r\n        },\r\n        children: [\r\n          {\r\n            path: 'pos',\r\n            component : PrivacyPosComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.PRIVACY.POS'\r\n            },\r\n          },\r\n          {\r\n            path: 'pocket',\r\n            component : PrivacyPocketComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.PRIVACY.POCKET'\r\n            },\r\n          },\r\n          {\r\n            path: 'instrument',\r\n            component : PrivacyInstrumentComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.PRIVACY.INSTRUMENT'\r\n            },\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: '**',\r\n        component : PageNotFoundComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const appRoutingModule = RouterModule.forRoot(routes);\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n// @ts-ignore\r\nimport * as user from './user.json';\r\n\r\nconst urls = [\r\n  {\r\n    url: 'https://wom.social/api/v2/auth/merchant',\r\n    json: user\r\n  }\r\n];\r\n\r\n@Injectable()\r\nexport class HttpMockRequestInterceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    for (const element of urls) {\r\n      if (request.url === element.url) {\r\n        console.log('Loaded from json : ' + request.url);\r\n        return of(new HttpResponse({ status: 200, body: ((element.json) as any).default }));\r\n      }\r\n    }\r\n    console.log('Loaded from http call :' + request.url);\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {ChangeDetectorRef, Component, Inject, OnInit} from '@angular/core';\nimport {Merchant} from '../../_models';\nimport {first} from 'rxjs/operators';\nimport {FormGroup} from '@angular/forms';\nimport {MerchantService} from '../../_services/merchant.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {DialogType} from '../../_models/dialogType';\n\n@Component({\n    selector: 'app-merchant-dialog',\n    templateUrl: 'add-merchant.component.html',\n    styleUrls: ['add-merchant.component.css']\n})\nexport class AddMerchantDialogComponent implements OnInit {\n    formMerchant: FormGroup;\n    formInputError: boolean;\n    formApiError: boolean;\n    dialogTypes = DialogType;\n    merchantData: Merchant;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: MerchantDialogData,\n                public dialogRef: MatDialogRef<AddMerchantDialogComponent>,\n                private merchantService: MerchantService,\n                private cd: ChangeDetectorRef) {}\n\n    ngOnInit(): any {\n        this.merchantData = this.data.data;\n        this.cd.detectChanges();\n    }\n    onSubmit(): any {\n        switch (this.data.type) {\n            case DialogType.create:\n                this.create();\n                break;\n            case DialogType.edit:\n                this.edit();\n                break;\n        }\n    }\n\n    create(): any {\n        const merchant = this.createMerchantDataStruct();\n        this.merchantService.register(merchant).pipe(first()).subscribe(\n            result => {\n                console.log(result);\n                this.dialogRef.close(true);\n            }, error => {\n                this.formApiError = true;\n                console.log(error);\n            });\n    }\n\n    edit(): any {\n        const merchant = this.createMerchantDataStruct();\n        merchant.id = this.merchantData.id;\n        this.merchantService.update(merchant).pipe(first()).subscribe(\n            result => {\n                console.log(result);\n                this.dialogRef.close(true);\n            }, error => {\n                this.formApiError = true;\n                console.log(error);\n            });\n    }\n\n    createMerchantDataStruct(): Merchant {\n        this.formInputError = this.formMerchant === undefined;\n        const merchant: Merchant = new Merchant();\n        merchant.fiscalCode = this.formMerchant.controls.fiscalCode.value;\n        merchant.country = this.formMerchant.controls.country.value;\n        merchant.city = this.formMerchant.controls.city.value;\n        merchant.zipCode = this.formMerchant.controls.cap.value;\n        merchant.address = this.formMerchant.controls.address.value;\n        merchant.primaryActivity = this.formMerchant.controls.primaryActivity.value;\n        merchant.name = this.formMerchant.controls.name.value;\n        // Optional values\n        if (this.formMerchant.controls.url.value !== '') {\n            merchant.url = this.formMerchant.controls.url.value;\n        }\n        if (this.formMerchant.controls.description.value !== '') {\n            merchant.description = this.formMerchant.controls.description.value;\n        }\n\n        return merchant;\n    }\n}\n\nexport class MerchantDialogData {\n    type: DialogType;\n    data: Merchant;\n}\n","<h2 mat-dialog-title>{{( data.type === dialogTypes.create ? \"USER.ADD_MERCHANT.TITLE\" : \"USER.EDIT_MERCHANT.TITLE\") | translate}}</h2>\n<mat-dialog-content >\n    <mat-error *ngIf=\"formInputError\">\n        {{(data.type === dialogTypes.create ? \"USER.ADD_MERCHANT.INPUT_ERROR\" : \"USER.EDIT_MERCHANT.INPUT_ERROR\") | translate}}\n    </mat-error>\n    <mat-error *ngIf=\"formApiError\">\n        {{(data.type === dialogTypes.create ? \"USER.ADD_MERCHANT.API_ERROR\" : \"USER.EDIT_MERCHANT.API_ERROR\") | translate}}\n    </mat-error>\n    <app-forms-merchant [(form)]=\"formMerchant\" [merchant]=\"merchantData\" ></app-forms-merchant>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>{{(data.type === dialogTypes.create ? \"USER.ADD_MERCHANT.CANCEL\" : \"USER.EDIT_MERCHANT.CANCEL\") | translate}}</button>\n    <button mat-button (click)=\"onSubmit()\" cdkFocusInitial>{{(data.type === dialogTypes.create ? \"USER.ADD_MERCHANT.ADD\" : \"USER.EDIT_MERCHANT.ADD\") | translate}}</button>\n</mat-dialog-actions>\n","import {Component} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n  currentYear = new Date().getFullYear();\r\n}\r\n","<footer>\r\n  <div class=\"container\">\r\n    <div fxLayout=\"row\" color=\"primary\">\r\n      <div fxFlex=\"100%\">\r\n        <p>WOM&nbsp;Platform&nbsp;&mdash;&nbsp;{{currentYear}}. <a [routerLink]=\"['/privacy']\">Privacy policy</a> &#169; <a href=\"https://www.digit.srl\" target=\"_blank\">DIGIT srl</a></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {first} from 'rxjs/operators';\r\nimport {UserService} from '../../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-merchant',\r\n  templateUrl: './merchant-dashboard.component.html',\r\n  styleUrls: ['./merchant-dashboard.component.css']\r\n})\r\nexport class MerchantDashboardComponent {\r\n  constructor(private userService: UserService) {\r\n    userService.getLoggedUser().pipe(first()).subscribe(user => {\r\n      console.log(user);\r\n    });\r\n  }\r\n}\r\n","<div class=\"mat-card\">\r\n  Merchant\r\n</div>\r\n","import {Component, Inject} from '@angular/core';\nimport { PosRegistration} from '../../_models';\nimport {first} from 'rxjs/operators';\nimport {FormGroup} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {PosService} from '../../_services/pos.service';\n\n@Component({\n    selector: 'app-pos-dialog',\n    templateUrl: 'add-pos.component.html',\n    styleUrls: ['add-pos.component.css']\n})\nexport class AddPosDialogComponent {\n    formPos: FormGroup;\n    formInputError: boolean;\n    formApiError: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: string,\n                public dialogRef: MatDialogRef<AddPosDialogComponent>,\n                private posService: PosService) {}\n\n    onSubmit(): any {\n        this.formInputError = this.formPos === undefined;\n        if (this.formPos.controls.latitude.value === 0) {\n            this.formInputError = true;\n            return;\n        }\n\n        const pos: PosRegistration = new PosRegistration();\n        pos.longitude = this.formPos.controls.longitude.value;\n        pos.latitude = this.formPos.controls.latitude.value;\n        pos.name = this.formPos.controls.name.value;\n        pos.ownerMerchantId = this.data;\n\n        // Optional values\n        if (this.formPos.controls.url.value !== '') {\n            pos.url = this.formPos.controls.url.value;\n        }\n\n        this.posService.register(pos).pipe(first()).subscribe(\n            result => {\n                console.log(result);\n                this.dialogRef.close(true);\n            }, error => {\n                this.formApiError = true;\n                console.log(error);\n            });\n    }\n}\n","<h2 mat-dialog-title>{{\"USER.ADD_POS.TITLE\" | translate}}</h2>\n<mat-dialog-content >\n    <mat-error *ngIf=\"formInputError\">\n        {{\"USER.ADD_POS.INPUT_ERROR\" | translate}}\n    </mat-error>\n    <mat-error *ngIf=\"formApiError\">\n        {{\"USER.ADD_POS.API_ERROR\" | translate}}\n    </mat-error>\n    <app-forms-pos [(form)]=\"formPos\" ></app-forms-pos>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>{{\"USER.ADD_POS.CANCEL\" | translate}}</button>\n    <button mat-button (click)=\"onSubmit()\" cdkFocusInitial>{{\"USER.ADD_POS.ADD\" | translate}}</button>\n</mat-dialog-actions>\n","<mat-toolbar class=\"app-toolbar\" >\r\n  <img src=\"assets/images/wom-logo-bianco.png\">\r\n  <span class=\"example-spacer\"></span>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('home')\">\r\n    <span>{{ \"NAV.HOME\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('about')\">\r\n    <span>{{ \"NAV.ABOUT\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('volunteer')\">\r\n    <span>{{ \"NAV.VOLUNTEERS\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('merchant')\">\r\n    <span>{{ \"NAV.MERCHANT\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('instrument')\">\r\n    <span>{{ \"NAV.INSTRUMENT\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('user/home')\">\r\n    <span>{{ \"NAV.PROFILE\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\"  *ngIf=\"isLogged\" (click)=\"logout()\">\r\n    <span>{{ \"NAV.SIGN_OUT\" | translate }}</span>\r\n  </button>\r\n\r\n  <button mat-icon-button class=\"example-icon nav-icon-button\" aria-label=\"Example icon-button with menu icon\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item (click)=\"navigate('home')\">\r\n      <mat-icon>home</mat-icon>\r\n      <span>{{ \"NAV.HOME\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"navigate('about')\">\r\n      <mat-icon>info</mat-icon>\r\n      <span>{{ \"NAV.ABOUT\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"navigate('volunteers')\">\r\n      <mat-icon>person_pin_circle</mat-icon>\r\n      <span>{{ \"NAV.VOLUNTEERS\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"navigate('merchant')\">\r\n      <mat-icon>store</mat-icon>\r\n      <span>{{ \"NAV.MERCHANT\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"navigate('instrument')\">\r\n      <mat-icon>timer</mat-icon>\r\n      <span>{{ \"NAV.INSTRUMENT\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"navigate('user/home')\">\r\n      <mat-icon>account_circle</mat-icon>\r\n      <span>{{ \"NAV.PROFILE\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item *ngIf=\"isLogged\" (click)=\"logout()\">\r\n      <mat-icon>close</mat-icon>\r\n      <span>{{ \"NAV.SIGN_OUT\" | translate }}</span>\r\n    </button>\r\n  </mat-menu>\r\n</mat-toolbar>\r\n","import {Component} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {UserLogin} from '../_models';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {UserService} from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent {\r\n  isExpanded = false;\r\n  currentUserLogin: UserLogin;\r\n  openMenu = false;\r\n  isOver = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private translate: TranslateService,\r\n    private userService: UserService\r\n  ) {\r\n    this.userService.currentUserLogin.subscribe(x => this.currentUserLogin = x);\r\n  }\r\n\r\n  get isLogged(): boolean {\r\n    return this.currentUserLogin != null;\r\n  }\r\n\r\n  clickMenu(): void {\r\n    this.openMenu = !this.openMenu;\r\n  }\r\n\r\n  collapse(): void {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle(): void {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n  async navigate(link: string): Promise<void> {\r\n    this.openMenu = false;\r\n    await this.router.navigate(['/' + link]);\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    this.userService.logout();\r\n    await this.router.navigate(['/home']);\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\nimport { OverlayService, AppOverlayConfig } from './overlay.service';\nexport { OverlayService, AppOverlayConfig } from './overlay.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    providers: [OverlayService],\n})\nexport class AppOverlayModule { }\n","<ng-template #progressSpinnerRef>\n    <mat-progress-spinner [color]=\"color\" [diameter]=\"diameter\" [mode]=\"mode\" [strokeWidth]=\"strokeWidth\" [value]=\"value\">\n    </mat-progress-spinner>\n</ng-template>\n","import { Component, Input, OnInit, ViewChild, TemplateRef, ViewContainerRef, DoCheck } from '@angular/core';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport {OverlayService, AppOverlayConfig} from '../_overlay/overlay.service';\nimport {ThemePalette} from '@angular/material/core';\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\n\n@Component({\n    selector: 'app-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.component.css']\n})\nexport class ProgressSpinnerComponent implements OnInit, DoCheck {\n    @Input() color?: ThemePalette;\n    @Input() diameter ? = 100;\n    @Input() mode?: ProgressSpinnerMode;\n    @Input() strokeWidth?: number;\n    @Input() value?: number;\n    @Input() backdropEnabled = true;\n    @Input() positionGloballyCenter = true;\n    @Input() displayProgressSpinner: boolean;\n\n    @ViewChild('progressSpinnerRef')\n    private progressSpinnerRef: TemplateRef<any>;\n    private progressSpinnerOverlayConfig: AppOverlayConfig;\n    private overlayRef: OverlayRef;\n    constructor(private vcRef: ViewContainerRef, private overlayService: OverlayService) { }\n\n    ngOnInit(): any {\n        // Config for Overlay Service\n        this.progressSpinnerOverlayConfig = {\n            hasBackdrop: this.backdropEnabled\n        };\n        if (this.positionGloballyCenter) {\n            this.progressSpinnerOverlayConfig.positionStrategy = this.overlayService.positionGloballyCenter();\n        }\n        // Create Overlay for progress spinner\n        this.overlayRef = this.overlayService.createOverlay(this.progressSpinnerOverlayConfig);\n    }\n\n    ngDoCheck(): any {\n        // Based on status of displayProgressSpinner attach/detach overlay to progress spinner template\n        if (this.displayProgressSpinner && !this.overlayRef.hasAttached()) {\n            this.overlayService.attachTemplatePortal(this.overlayRef, this.progressSpinnerRef, this.vcRef);\n        } else if (!this.displayProgressSpinner && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n    }\n}\n","/**\r\n * User registration data request\r\n */\r\nexport class UserRegistrationPayload {\r\n  email: string;\r\n  password: string;\r\n  name: string;\r\n  surname: string;\r\n}\r\n\r\n/**\r\n * User data response\r\n */\r\nexport class User extends UserRegistrationPayload {\r\n  id: string;\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new User(), json);\r\n  }\r\n}\r\n\r\n/**\r\n * User Login data response\r\n */\r\nexport class UserLogin {\r\n  id: string;\r\n  token: string;\r\n  verified: boolean;\r\n\r\n  constructor(id: string = '', token: string = '', verified: boolean = false) {\r\n    this.id = id;\r\n    this.token = token;\r\n    this.verified = verified;\r\n  }\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new UserLogin(), json);\r\n  }\r\n}\r\n","export * from './merchant';\r\nexport * from  './pos';\r\nexport  * from './user';\r\nexport * from './countryList';\r\nexport * from './aim';\r\nexport * from './primaryActivityType';\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthService } from '../_services';\r\nimport {UserService} from '../_services/user.service';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const currentUserLogin = this.userService.currentUserLoginValue;\r\n    if (currentUserLogin) {\r\n      let verified = true;\r\n      // check if user has validated email\r\n      if (environment.production) {\r\n        verified = currentUserLogin.verified;\r\n      }\r\n\r\n      if (state.url.includes('not-verified')) {\r\n        if (verified) {\r\n          this.router.navigate(['user/home']).then(r => {});\r\n        }\r\n      } else if (!verified) {\r\n        this.router.navigate(['/user/not-verified'], {queryParams: {returnUrl: state.url}}).then(r => {\r\n        });\r\n      }\r\n      return true;\r\n    }\r\n\r\n    if (state.url === '/merchant' || state.url === '/user/home')\r\n    {\r\n      this.router.navigate(['/authentication/signin'], {queryParams: {returnUrl: state.url}}).then(r => {});\r\n      return false;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/'], {queryParams: {returnUrl: state.url}}).then(r => {});\r\n    return false;\r\n  }\r\n}\r\n","import {AfterViewInit, Component, ElementRef, OnInit, ViewChild} from '@angular/core';\r\nimport {GoogleMap, MapInfoWindow, MapMarker} from '@angular/google-maps';\r\n\r\n@Component({\r\n  selector: 'app-merchant',\r\n  templateUrl: './merchant.component.html',\r\n  styleUrls: ['./merchant.component.css']\r\n})\r\nexport class MerchantComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(GoogleMap, { static: false }) map: GoogleMap;\r\n  @ViewChild(MapInfoWindow, { static: false }) infoWindow: MapInfoWindow;\r\n  @ViewChild('mapSearchField') searchField: ElementRef;\r\n  infoContent = '';\r\n  markers = [];\r\n  zoom = 12;\r\n  center: google.maps.LatLngLiteral;\r\n  options: google.maps.MapOptions = {\r\n    mapTypeId: 'hybrid',\r\n    clickableIcons: true,\r\n    zoomControl: true,\r\n    scrollwheel: true,\r\n    disableDoubleClickZoom: false,\r\n    maxZoom: 18,\r\n    minZoom: 6,\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.center = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      };\r\n    }, () => {\r\n      this.center = {\r\n        lat: 43.83833794129076,\r\n        lng: 13.02318609717848,\r\n      };\r\n    });\r\n\r\n    this.addMarker();\r\n    this.addMarker();\r\n    this.addMarker();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    const searchBox = new google.maps.places.SearchBox(\r\n        this.searchField.nativeElement\r\n    );\r\n    /*\r\n    this.map.controls[google.maps.ControlPosition.TOP_CENTER].push(\r\n        this.searchField.nativeElement\r\n    );\r\n*/\r\n    searchBox.addListener('places_changed', () => {\r\n      const places = searchBox.getPlaces();\r\n      if (places.length === 0) {\r\n        return;\r\n      }\r\n      const bounds = new google.maps.LatLngBounds();\r\n      places.forEach(place =>  {\r\n        if (!place.geometry || !place.geometry.location) {\r\n          return;\r\n        }\r\n        if (place.geometry.viewport) {\r\n          // Only geocodes have viewport\r\n          bounds.union(place.geometry.viewport);\r\n        } else {\r\n          bounds.extend(place.geometry.location);\r\n        }\r\n      });\r\n      this.map.fitBounds(bounds);\r\n    });\r\n  }\r\n\r\n  zoomIn(): void {\r\n    if (this.zoom < this.options.maxZoom)\r\n    {\r\n      this.zoom++;\r\n    }\r\n  }\r\n\r\n  zoomOut(): void {\r\n    if (this.zoom > this.options.minZoom) {\r\n      this.zoom--;\r\n    }\r\n  }\r\n\r\n  click(event: google.maps.MapMouseEvent): void {\r\n    console.log(event);\r\n  }\r\n\r\n  logCenter(): void {\r\n    console.log(JSON.stringify(this.map.getCenter()));\r\n  }\r\n\r\n  addMarker(): void {\r\n    this.markers.push({\r\n      position: {\r\n        lat: 43.83833794129076 + ((Math.random() - 0.5) * 2) / 10,\r\n        lng: 13.02318609717848 + ((Math.random() - 0.5) * 2) / 10,\r\n      },\r\n      // label: {\r\n      //   color: 'red',\r\n      //   text: 'Marker label ' + (this.markers.length + 1),\r\n      // },\r\n      title: 'Marker title ' + (this.markers.length + 1),\r\n      info: 'Marker info ' + (this.markers.length + 1),\r\n      options: {\r\n        animation: google.maps.Animation.DROP,\r\n      },\r\n    });\r\n  }\r\n\r\n  openInfo(marker: MapMarker, content): void {\r\n    this.infoContent = content;\r\n    this.infoWindow.open(marker);\r\n  }\r\n\r\n  boundsChanged(): void {\r\n    const bounds = this.map.getBounds().toJSON();\r\n    console.log('north: ' + bounds.north);\r\n    console.log('south: ' + bounds.south);\r\n    console.log('east: ' + bounds.east);\r\n    console.log('west: ' + bounds.west);\r\n\r\n    // TODO: update markers with search data\r\n  }\r\n}\r\n","<div class=\"container\" xmlns=\"http://www.w3.org/1999/html\">\r\n  <span class=\"page-title\">{{\"MERCHANT.TITLE\" | translate}}</span>\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"20px grid\">\r\n    <div fxFlex=\"100%\">\r\n      <p class=\"page-secondary-title\" [innerHTML]=\"'MERCHANT.SECTION_A.TITLE' | translate\"></p>\r\n      <p [innerHTML]=\"'MERCHANT.SECTION_A.A' | translate\"></p>\r\n    </div>\r\n\r\n    <!-- FILTERS -->\r\n    <div fxFlex=\"25%\" fxFlex.xs=\"100%\">\r\n      <p [innerHTML]=\"'MERCHANT.FILTERS.SEARCH.TITLE' | translate\"></p>\r\n      <input #mapSearchField placeholder=\"{{'MERCHANT.FILTERS.SEARCH.PLACEHOLDER' | translate}}\" type=\"text\" />\r\n\r\n      <mat-divider></mat-divider>\r\n      <button mat-flat-button color=\"primary\">{{'MERCHANT.FILTERS.BTN_SEARCH' | translate}}</button>\r\n    </div>\r\n\r\n    <!-- MAP -->\r\n    <google-map\r\n            fxFlex=\"75%\"\r\n            fxFlex.xs=\"100%\"\r\n            height=\"500px\"\r\n            width=\"100%\"\r\n            (boundsChanged)=\"boundsChanged()\"\r\n            [zoom]=\"zoom\"\r\n            [center]=\"center\"\r\n            [options]=\"options\"\r\n            (mapClick)=\"click($event)\">\r\n    <map-marker\r\n            #markerElem=\"mapMarker\"\r\n            *ngFor=\"let marker of markers\"\r\n            [position]=\"marker.position\"\r\n            [label]=\"marker.label\"\r\n            [title]=\"marker.title\"\r\n            [options]=\"marker.options\"\r\n            (mapClick)=\"openInfo(markerElem, marker.info)\"\r\n      >\r\n      </map-marker>\r\n\r\n      <map-info-window>{{ infoContent }}</map-info-window>\r\n    </google-map>\r\n    <!--\r\n    <button (click)=\"zoomIn()\">Zoom in</button>\r\n    <button (click)=\"zoomOut()\">Zoom out</button>\r\n    <button (click)=\"logCenter()\">Log center</button>\r\n    <button (click)=\"addMarker()\">Add marker</button>\r\n    -->\r\n\r\n    <div fxFlex=\"100%\">\r\n      <p class=\"page-secondary-title\" [innerHTML]=\"'MERCHANT.SECTION_B.TITLE' | translate\"></p>\r\n      <p [innerHTML]=\"'MERCHANT.SECTION_B.A' | translate\"></p>\r\n    </div>\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n      <a href=\"https://play.google.com/store/apps/details?id=social.wom.pos\" title=\"Download WOM POS from Google Play\">\r\n        <img style=\"max-width: 100%;\" src=\"assets/images/badge_google_play.png\" alt=\"Google Play\" />\r\n      </a>\r\n    </div>\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n      <a href=\"https://apps.apple.com/it/app/wom-pos/id1468252634\" title=\"Download WOM POS from App Store\">\r\n        <img style=\"max-width: 100%;\" src=\"assets/images/badge_app_store.png\" alt=\"Apple App Store\" />\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <h1>{{ \"SIGN_UP.TITLE\" | translate }}</h1>\r\n    <p [innerHTML]=\"'SIGN_UP.SUBTITLE' | translate\"></p>\r\n    <p>\r\n      <a [routerLink]=\"['/authentication/signin']\">{{ \"SIGN_UP.BTN_ALREADY_REGISTERED\" | translate }}</a>\r\n    </p>\r\n    <mat-error *ngIf=\"signupTimeout\">\r\n      {{'SIGN_UP.TIMEOUT_ERROR' | translate}}\r\n    </mat-error>\r\n    <mat-error *ngIf=\"signupInvalid\">\r\n      {{ 'SIGN_UP.FORM_ERROR' | translate }}\r\n      <br>\r\n      {{errorMessage | translate}}\r\n    </mat-error>\r\n    <mat-horizontal-stepper linear #stepper>\r\n      <mat-step [stepControl]=\"form\">\r\n        <ng-template matStepLabel>{{ 'SIGN_UP.REPRESENTATIVE.STEPPER_TITLE' | translate }}</ng-template>\r\n        <!-- REPRESENTATIVE DATA -->\r\n        <app-forms-user [(form)]=\"form\" [disabled]=\"userRegistered\"></app-forms-user>\r\n      </mat-step>\r\n\r\n      <!-- OPTIONAL SECTION -->\r\n      <mat-step [stepControl]=\"formMerchant\" [optional]=\"true\">\r\n        <ng-template matStepLabel>{{ 'SIGN_UP.MERCHANT.STEPPER_TITLE' | translate }}</ng-template>\r\n        <mat-checkbox class=\"mat-checkbox-merchant\" [(ngModel)]=\"requireMerchantRegistration\">\r\n          <mat-label>\r\n            {{'SIGN_UP.MERCHANT.CHECKBOX' | translate}}\r\n          </mat-label>\r\n        </mat-checkbox>\r\n\r\n        <!-- MERCHANT SECTION -->\r\n        <app-forms-merchant [(form)]=\"formMerchant\" [merchant]=\"null\" *ngIf=\"requireMerchantRegistration\">\r\n\r\n        </app-forms-merchant>\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n\r\n        <!-- POS SECTION -->\r\n        <mat-checkbox class=\"mat-checkbox-merchant\" [(ngModel)]=\"requirePosRegistration\" *ngIf=\"requireMerchantRegistration\">\r\n          <mat-label>\r\n            {{'SIGN_UP.POS.CHECKBOX' | translate}}\r\n          </mat-label>\r\n        </mat-checkbox>\r\n        <app-forms-pos [(form)]=\"formPos\" *ngIf=\"requirePosRegistration && requireMerchantRegistration\"></app-forms-pos>\r\n\r\n        <div>\r\n          <button mat-button matStepperPrevious>{{'SIGN_UP.BACK' | translate}}</button>\r\n          <button mat-button matStepperNext>{{'SIGN_UP.NEXT' | translate}}</button>\r\n        </div>\r\n      </mat-step>\r\n\r\n      <!-- CONFIRM SECTION -->\r\n      <mat-step [stepControl]=\"formSubmit\">\r\n        <form [formGroup]=\"formSubmit\">\r\n          <ng-template matStepLabel>{{ 'SIGN_UP.DONE' | translate }}</ng-template>\r\n          <mat-form-field>\r\n            <h2>{{'SIGN_UP.TERMS_CONDITIONS_TITLE' | translate}}</h2>\r\n            <label>\r\n              <textarea class=\"form-subgroup\" matInput formControlName=\"tcInfo\"></textarea>\r\n            </label>\r\n          </mat-form-field>\r\n          <mat-form-field  appearance=\"example-full-width\" style=\"height: 10px\">\r\n            <label>\r\n              <input matInput formControlName=\"termsConditionsCheckbox\" [hidden]=\"true\">\r\n            </label>\r\n            <mat-error>\r\n              {{'SIGN_UP.TC_ERROR' | translate}}\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-checkbox class=\"example-margin\" [checked]=\"termsConditionsChecked\" formControlName=\"termsConditionsCheckbox\">\r\n            {{ 'SIGN_UP.TERMS_CONDITIONS' | translate }}\r\n          </mat-checkbox>\r\n          <br><br>\r\n          <mat-divider [inset]=\"true\"></mat-divider>\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">{{ 'SIGN_UP.BTN_SIGN_UP' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n\r\n    </mat-horizontal-stepper>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<app-progress-spinner class=\"example-margin\" [color]=\"color\" [mode]=\"mode\" [value]=\"value\" [backdropEnabled]=\"true\" [positionGloballyCenter]=\"true\"\r\n                      [displayProgressSpinner]=\"displayProgressSpinner\">\r\n</app-progress-spinner>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {UserService} from '../../_services/user.service';\r\nimport {Merchant, PosRegistration, UserRegistrationPayload} from '../../_models';\r\nimport {first} from 'rxjs/operators';\r\nimport {MerchantService} from '../../_services/merchant.service';\r\nimport {PosService} from '../../_services/pos.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {LogInErrorDialogComponent} from './signup-login-error.directive';\r\n\r\n@Component({\r\n  selector: 'app-merchant-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class MerchantSignUpComponent implements OnInit {\r\n  form: FormGroup;\r\n  formMerchant: FormGroup;\r\n  formPos: FormGroup;\r\n  formSubmit: FormGroup;\r\n  errorMessage: string;\r\n\r\n  signupInvalid: boolean;\r\n  signupTimeout: boolean;\r\n  signupComplete: boolean;\r\n  returnUrl: string;\r\n  requireMerchantRegistration: boolean;\r\n  requirePosRegistration: boolean;\r\n  termsConditionsChecked: boolean;\r\n  termsAndConditionsText: string;\r\n  userRegistered = false;\r\n  userSignedIn = false;\r\n\r\n  // Spinner\r\n  color = 'primary';\r\n  mode = 'indeterminate';\r\n  value = 50;\r\n  displayProgressSpinner = false;\r\n\r\n  constructor(public dialog: MatDialog,\r\n              private fb: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private userService: UserService,\r\n              private merchantService: MerchantService,\r\n              private posService: PosService) {\r\n      this.termsAndConditionsText = 'Insert t&c text here';\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/home';\r\n\r\n    this.formSubmit = this.fb.group({\r\n      termsConditionsCheckbox: ['', Validators.requiredTrue],\r\n        tcInfo: [{value: this.termsAndConditionsText, disabled: true}, !Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit(): any {\r\n    this.errorMessage = '';\r\n    this.signupInvalid = false;\r\n    this.signupComplete = false;\r\n    this.showProgressSpinner();\r\n\r\n    const merchantFormValid = this.requireMerchantRegistration\r\n        ? (this.formMerchant !== undefined && this.formMerchant.valid)\r\n        : true;\r\n    const posFormValid = this.requirePosRegistration\r\n        ? (this.formPos !== undefined && this.formPos.valid)\r\n        : true;\r\n\r\n    if (!this.form.valid || !this.formSubmit.valid || !merchantFormValid || !posFormValid) {\r\n        this.signupInvalid = true;\r\n        this.signupComplete = true;\r\n        this.displayProgressSpinner = false;\r\n\r\n        return;\r\n    }\r\n\r\n    const userData: UserRegistrationPayload = new UserRegistrationPayload() ;\r\n    userData.email = this.form.controls.email.value;\r\n    userData.name = this.form.controls.firstName.value;\r\n    userData.password = this.form.controls.password.value;\r\n    userData.surname = this.form.controls.lastName.value;\r\n\r\n    if (this.userRegistered) {\r\n        this.logIn(userData.email, userData.password);\r\n        return;\r\n    }\r\n\r\n    this.userService.register(userData).pipe(first()).subscribe(\r\n        result => {\r\n            if (result.id !== null) {\r\n                console.log(result);\r\n                this.userRegistered = true;\r\n                this.logIn(userData.email, userData.password);\r\n            }\r\n        }, error => {\r\n            if (error.status === 422) {\r\n                this.errorMessage = 'SIGN_UP.EMAIL_EXISTS_ERROR';\r\n            } else {\r\n                this.errorMessage = 'SIGN_UP.GENERIC_ERROR';\r\n            }\r\n            this.signupInvalid = true;\r\n            this.signupComplete = true;\r\n            this.displayProgressSpinner = false;\r\n            console.log(error);\r\n        });\r\n  }\r\n\r\n  registerMerchant(): any {\r\n    const merchant: Merchant = new Merchant();\r\n    merchant.fiscalCode = this.formMerchant.controls.fiscalCode.value;\r\n    merchant.country = this.formMerchant.controls.country.value;\r\n    merchant.city = this.formMerchant.controls.city.value;\r\n    merchant.zipCode = this.formMerchant.controls.cap.value;\r\n    merchant.address = this.formMerchant.controls.address.value;\r\n    merchant.primaryActivity = this.formMerchant.controls.primaryActivity.value;\r\n    merchant.name = this.formMerchant.controls.name.value;\r\n    // Optional values\r\n    if (this.formMerchant.controls.url.value !== '') {\r\n        merchant.url = this.formMerchant.controls.url.value;\r\n    }\r\n    if (this.formMerchant.controls.description.value !== '') {\r\n      merchant.description = this.formMerchant.controls.description.value;\r\n    }\r\n\r\n    this.merchantService.register(merchant).pipe(first()).subscribe(\r\n        result => {\r\n          console.log(result);\r\n          if (this.requirePosRegistration) {\r\n            this.registerPos(result.id);\r\n          } else {\r\n            this.displayProgressSpinner = false;\r\n            this.signupComplete = true;\r\n            this.router.navigate(['/user/home']).then(r => r);\r\n          }\r\n        }, error => {\r\n            if (error.status === 422) {\r\n                this.errorMessage = 'SIGN_UP.FISCAL_CODE_EXISTS_ERROR';\r\n            } else {\r\n                this.errorMessage = 'SIGN_UP.GENERIC_ERROR';\r\n            }\r\n            this.signupInvalid = true;\r\n            this.displayProgressSpinner = false;\r\n            this.signupComplete = true;\r\n            console.log(error);\r\n        });\r\n  }\r\n\r\n  registerPos(merchantId: string): any {\r\n    const pos: PosRegistration = new PosRegistration();\r\n    pos.longitude = this.formPos.controls.longitude.value;\r\n    pos.latitude = this.formPos.controls.latitude.value;\r\n    pos.name = this.formPos.controls.name.value;\r\n    pos.ownerMerchantId = merchantId;\r\n    // Optional values\r\n    if (this.formPos.controls.url.value !== '') {\r\n        pos.url = this.formPos.controls.url.value;\r\n    }\r\n\r\n    this.posService.register(pos).pipe(first()).subscribe(\r\n        result => {\r\n          console.log(result);\r\n          this.displayProgressSpinner = false;\r\n          this.signupComplete = true;\r\n          this.router.navigate(['/user/home']).then(r => r);\r\n        }, error => {\r\n            this.signupInvalid = true;\r\n            this.errorMessage = 'SIGN_UP.GENERIC_ERROR';\r\n            this.displayProgressSpinner = false;\r\n            this.signupComplete = true;\r\n            console.log(error);\r\n        });\r\n  }\r\n\r\n  logIn(username: string, password: string): any {\r\n    if (this.userSignedIn) {\r\n        console.log('user already signed in');\r\n        if (this.requireMerchantRegistration) {\r\n            this.registerMerchant();\r\n        } else {\r\n            this.displayProgressSpinner = false;\r\n            this.signupComplete = true;\r\n            this.router.navigate(['/user/home']).then(r => r);\r\n        }\r\n        return;\r\n    }\r\n    this.userService.login(username, password).pipe().subscribe(\r\n        result => {\r\n            console.log(result);\r\n            this.userService.getLoggedUser().pipe().subscribe(\r\n                user => {\r\n                    console.log('user');\r\n                    this.userSignedIn = true;\r\n                    if (this.requireMerchantRegistration) {\r\n                        this.registerMerchant();\r\n                    } else {\r\n                        this.displayProgressSpinner = false;\r\n                        this.signupComplete = true;\r\n                        this.router.navigate(['/user/home']).then(r => r);\r\n                    }\r\n                }, error => {\r\n                    this.displayProgressSpinner = false;\r\n                    this.signupComplete = true;\r\n                    console.log(error);\r\n                });\r\n        }, error => {\r\n            this.signupInvalid = true;\r\n            this.errorMessage = error.title;\r\n            this.displayProgressSpinner = false;\r\n            this.signupComplete = true;\r\n            console.log(error);\r\n\r\n            const dialogRef = this.dialog.open(LogInErrorDialogComponent);\r\n            dialogRef.afterClosed().subscribe(result => {\r\n                this.router.navigate(['/authentication/signin']).then(r => r);\r\n            });\r\n        });\r\n  }\r\n\r\n  tcLinkClicked(): any {\r\n      this.router.navigate(['/privacy']).then(r => r);\r\n  }\r\n\r\n  showProgressSpinner = () => {\r\n    this.displayProgressSpinner = true;\r\n    setTimeout(() => {\r\n        if (!this.signupComplete) {\r\n            this.displayProgressSpinner = false;\r\n            this.signupInvalid = true;\r\n            this.signupTimeout = true;\r\n        }\r\n    }, 10000);\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-page-not-found',\n    templateUrl: './page-not-found.component.html',\n    styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent  {\n\n}\n","<mat-card>\n    <mat-card-content>\n        <section class=\"page_404\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12 \">\n                        <div class=\"col-sm-10 col-sm-offset-1  text-center\">\n                            <div class=\"four_zero_four_bg\">\n                                <h1 class=\"text-center \">404</h1>\n\n\n                            </div>\n\n                            <div class=\"contant_box_404\">\n                                <h3 class=\"h2\">\n                                    Look like you're lost\n                                </h3>\n\n                                <p>the page you are looking for not available!</p>\n\n                                <a href=\"/home\" class=\"link_404\">Go Home</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </mat-card-content>\n</mat-card>\n","export * from './home.component';\r\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../_services/user.service';\nimport {User} from '../../_models';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-request-new-password',\n    templateUrl: './request-new-password.component.html',\n    styleUrls: ['./request-new-password.component.css']\n})\nexport class RequestNewPasswordComponent implements OnInit {\n    requestSent = false;\n    form: FormGroup;\n\n    constructor(private userService: UserService,\n                private fb: FormBuilder){}\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            email: ['', Validators.email]\n        });\n    }\n\n    requestPassword(): void {\n        if (!this.form.valid) {\n            console.log('input not valid');\n            return;\n        }\n        if (this.form.controls.email.value === null) {\n           console.log('email not inserted');\n           return;\n        }\n\n        this.userService.passwordResetRequest(this.form.controls.email.value).pipe().subscribe(\n            response => {\n                this.requestSent = true;\n                console.log(response);\n            }, error => {\n                console.log(error);\n            });\n    }\n}\n","<mat-card>\n    <mat-card-title>\n        <h1>{{\"REQUEST_NEW_PASSWORD.TITLE\" | translate}}</h1>\n    </mat-card-title>\n    <mat-card-content *ngIf=\"requestSent\">\n        {{ 'REQUEST_NEW_PASSWORD.REQUEST_SENT' | translate }}\n        <a href=\"/home\">{{'REQUEST_NEW_PASSWORD.HOME' | translate}}</a>\n    </mat-card-content>\n    <mat-card-content *ngIf=\"!requestSent\">\n        <form [formGroup]=\"form\">\n            <table class=\"full-width\">\n                <tr style=\"width:100%\">\n                    <td>\n                        <mat-form-field>\n                            <label>\n                                <input matInput type=\"email\" placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.EMAIL' | translate }}\" formControlName=\"email\" required>\n                            </label>\n                        </mat-form-field>\n                    </td>\n                </tr>\n            </table>\n            <div>\n                <button mat-raised-button color=\"primary\" (click)=\"requestPassword()\">{{ 'REQUEST_NEW_PASSWORD.REQUEST_BUTTON' | translate }}</button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import {Component} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\n\n@Component({\n    selector: 'app-signup-login-error-dialog',\n    templateUrl: './signup-login-error.directive.html',\n    styleUrls: ['./signup-login-error.directive.css']\n})\nexport class LogInErrorDialogComponent {\n    constructor(public dialogRef: MatDialogRef<LogInErrorDialogComponent>){}\n}\n","import {Component, OnInit} from '@angular/core';\nimport {User} from '../../_models';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../_services/user.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: './reset-password.component.html',\n    styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n    user: User;\n    userId: string;\n    token: string;\n    form: FormGroup;\n    passwordNoMatch = false;\n    expiredLink = false;\n\n    constructor(private userService: UserService,\n                private route: ActivatedRoute,\n                private fb: FormBuilder,\n                private snackBar: MatSnackBar,\n                private router: Router,\n                private translate: TranslateService) {\n        if (userService.currentUserValue !== null) {\n            userService.logout();\n        }\n    }\n\n    ngOnInit(): any {\n        this.route.queryParams.subscribe(params => {\n            this.userId = params.userId;\n            this.token = params.token;\n        });\n        this.user = this.userService.currentUserValue;\n\n        console.log(this.userId);\n        this.form = this.fb.group({\n            password: ['', [Validators.required, Validators.minLength(8)]],\n            passwordRepeat: ['', [Validators.required, Validators.minLength(8)]],\n        });\n    }\n\n    resetPassword(): void {\n        this.expiredLink = false;\n        if (!this.form.valid || this.form.controls === null) {\n            return;\n        }\n        if (!this.checkPasswords()) {\n            this.passwordNoMatch = true;\n            return;\n        }\n        const pswd = this.form.controls.password.value;\n        this.userService.passwordReset(this.userId, this.token, pswd).pipe().subscribe(\n            response => {\n                const snackTitle = this.translate.instant('RESET_PASSWORD.SNACKBAR_SUCCESS');\n                const snackAction = this.translate.instant('RESET_PASSWORD.SNACKBAR_HOME');\n\n                const snackBarRef = this.snackBar.open(\n                    snackTitle,\n                    snackAction,\n                    {\n                        duration: 5000\n                    });\n                snackBarRef.onAction().subscribe(() => {\n                    this.router.navigate(['/authentication/signin']).then(r => r);\n                });\n                snackBarRef.afterDismissed().subscribe(() => {\n                    this.router.navigate(['/authentication/signin']).then(r => r);\n                });\n                console.log('password reset success');\n            }, error => {\n                // link already used if 404\n                this.expiredLink = true;\n                console.log('error: ', error);\n            });\n    }\n\n    checkPasswords(): boolean {\n        if (this.form.controls.password === null || this.form.controls.passwordRepeat === null) {\n            return false;\n        }\n        return this.form.controls.password.value === this.form.controls.passwordRepeat.value;\n    }\n}\n","<mat-card>\n    <mat-card-title>\n        <h1>{{\"RESET_PASSWORD.TITLE\" | translate}}</h1>\n    </mat-card-title>\n    <mat-card-content>\n        <form [formGroup]=\"form\">\n            <table class=\"full-width\">\n                <tr style=\"width:100%\">\n                    <td>\n                        <mat-form-field>\n                            <label>\n                                <input  #password\n                                        matInput\n                                        minlength=\"8\"\n                                        type=\"password\"\n                                        placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.PASSWORD' | translate }}\"\n                                        formControlName=\"password\"\n                                        required>\n                            </label>\n                            <mat-hint align=\"start\">{{password.value.length}} / {{password.minLength}}</mat-hint>\n                            <mat-error>\n                                {{'SIGN_UP.REPRESENTATIVE.PASSWORD_ERROR' | translate}}\n                            </mat-error>\n                        </mat-form-field>\n                    </td>\n                    <td>\n                        <mat-form-field>\n                            <label>\n                                <input matInput type=\"password\" minlength=\"8\"  placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.REPEAT_PASSWORD' | translate }}\" formControlName=\"passwordRepeat\" required>\n                            </label>\n                            <mat-error>\n                                {{'SIGN_UP.REPRESENTATIVE.PASSWORD_ERROR' | translate}}\n                            </mat-error>\n                        </mat-form-field>\n\n                    </td>\n                </tr>\n            </table>\n            <mat-error *ngIf=\"expiredLink\">\n                {{'SIGN_UP.REPRESENTATIVE.EXPIRED_LINK_ERROR' | translate}}\n            </mat-error>\n            <mat-error *ngIf=\"passwordNoMatch\">\n                {{'SIGN_UP.REPRESENTATIVE.PASSWORD_NO_MATCH_ERROR' | translate}}\n            </mat-error>\n            <div>\n                <button mat-raised-button color=\"primary\" (click)=\"resetPassword()\">{{ 'RESET_PASSWORD.RESET_BUTTON' | translate }}</button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}