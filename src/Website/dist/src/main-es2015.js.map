{"version":3,"sources":["./src/app/user/verify/user-verify.component.ts","./src/app/user/verify/user-verify.component.html","./src/app/volunteer/volunteer.component.ts","./src/app/volunteer/volunteer.component.html","./src/app/_overlay/overlay.service.ts","./src/app/_services/pos.service.ts","./src/app/user/home/user-home.component.ts","./src/app/user/home/user-home.component.html","./src/app/_models/aim.ts","./src/app/_services/auth.service.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/_models/merchant.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/_forms/user/forms-user.directive.ts","./src/app/_forms/user/forms-user.directive.html","./src/environments/environment.ts","./src/app/_helpers/httpInterceptor.ts","./src/app/privacy/instrument/instrument.component.ts","./src/app/privacy/instrument/instrument.component.html","./src/app/_models/dialogType.ts","./src/app/user/not-verified/user-not-verified.component.ts","./src/app/user/not-verified/user-not-verified.component.html","./src/app/_services/index.ts","./src/app/_forms/pos/forms-pos.directive.ts","./src/app/_forms/pos/forms-pos.directive.html","./src/app/_forms/merchant/forms-merchant.directive.ts","./src/app/_forms/merchant/forms-merchant.directive.html","./src/app/privacy/pos/pos.component.ts","./src/app/privacy/pos/pos.component.html","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/privacy/pocket/pocket.component.ts","./src/app/privacy/pocket/pocket.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/privacy/privacy.component.ts","./src/app/privacy/privacy.component.html","./src/app/_services/user.service.ts","./src/app/_services/merchant.service.ts","./src/app/breadcrumbs/breadcrumbs.component.ts","./src/app/breadcrumbs/breadcrumbs.component.html","./src/app/app.module.ts","./src/app/_models/countryList.ts","./src/app/_models/primaryActivityType.ts","./src/app/instrument/instrument.component.ts","./src/app/instrument/instrument.component.html","./src/app/_models/pos.ts","./src/app/app.routing.ts","./src/app/_helpers/HttpMockRequestInterceptor.ts","./src/app/user/add-merchant/add-merchant.component.ts","./src/app/user/add-merchant/add-merchant.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/merchant/dashboard/merchant-dashboard.component.ts","./src/app/merchant/dashboard/merchant-dashboard.component.html","./src/app/user/add-pos/add-pos.component.ts","./src/app/user/add-pos/add-pos.component.html","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/_overlay/overlay.module.ts","./src/app/_progressSpinner/progress-spinner.component.html","./src/app/_progressSpinner/progress-spinner.component.ts","./src/app/_models/user.ts","./src/app/_models/index.ts","./src/app/_helpers/auth.guard.ts","./src/app/merchant/merchant.component.ts","./src/app/merchant/merchant.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html","./src/app/pageNotFound/page-not-found.component.ts","./src/app/pageNotFound/page-not-found.component.html","./src/app/home/index.ts","./src/app/authentication/requestNewPassword/request-new-password.component.ts","./src/app/authentication/requestNewPassword/request-new-password.component.html","./src/app/authentication/signup/signup-login-error.directive.ts","./src/app/authentication/reset-password/reset-password.component.ts","./src/app/authentication/reset-password/reset-password.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../_services/user.service';\nimport {User} from '../../_models';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-user-verify',\n    templateUrl: './user-verify.component.html',\n    styleUrls: ['./user-verify.component.css']\n})\nexport class UserVerifyComponent {\n}\n","<mat-card>\n    <mat-card-content>\n        User verified!\n    </mat-card-content>\n</mat-card>\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-volunteer',\r\n  templateUrl: './volunteer.component.html',\r\n  styleUrls: ['./volunteer.component.css']\r\n})\r\nexport class VolunteerComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <span class=\"page-title\" [innerHTML]=\"'VOLUNTEER.TITLE' | translate\"></span>\r\n\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"20px grid\">\r\n    <div fxFlex=\"100%\">\r\n      <p class=\"page-secondary-title\" [innerHTML]=\"'VOLUNTEER.SECTION_A.TITLE' | translate\"></p>\r\n      <p [innerHTML]=\"'VOLUNTEER.SECTION_A.A' | translate\"></p>\r\n    </div>\r\n    <div fxFlex=\"100%\">\r\n      <p class=\"page-secondary-title\" [innerHTML]=\"'VOLUNTEER.SECTION_B.TITLE' | translate\"></p>\r\n      <p [innerHTML]=\"'VOLUNTEER.SECTION_B.A' | translate\"></p>\r\n    </div>\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n      <a href=\"https://play.google.com/store/apps/details?id=social.wom.pocket\" title=\"Download WOM Pocket from Google Play\">\r\n        <img style=\"max-width: 100%;\" src=\"assets/images/badge_google_play.png\" alt=\"Google Play\" />\r\n      </a>\r\n    </div>\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n      <a href=\"https://apps.apple.com/it/app/wom-pocket/id1466969163\" title=\"Download WOM Pocket from App Store\">\r\n        <img style=\"max-width: 100%;\" src=\"assets/images/badge_app_store.png\" alt=\"Apple App Store\" />\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef, PositionStrategy } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\n\n@Injectable()\n\nexport class OverlayService {\n    constructor(\n        private overlay: Overlay\n    ) { }\n    createOverlay(config: AppOverlayConfig): OverlayRef {\n        return this.overlay.create(config);\n    }\n    attachTemplatePortal(overlayRef: OverlayRef, templateRef: TemplateRef<any>, vcRef: ViewContainerRef): any {\n        const templatePortal = new TemplatePortal(templateRef, vcRef);\n        overlayRef.attach(templatePortal);\n    }\n    positionGloballyCenter(): PositionStrategy {\n        return this.overlay.position()\n            .global()\n            .centerHorizontally()\n            .centerVertically();\n    }\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface AppOverlayConfig extends OverlayConfig { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Pos, PosRegistration} from '../_models';\nimport {environment} from '../../environments/environment';\nimport {map} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class PosService {\n    localUrlV1 = environment.baseUrl + environment.v1 + 'pos/';\n    localUrlV2 = environment.baseUrl + environment.v2 + 'pos/';\n\n    constructor(private http: HttpClient) {\n    }\n\n    /**\n     * Get merchant data from specific pos id\n     * @param id pos id\n     */\n    get(id: string): Observable<Pos> {\n        return this.http.get<Pos>(this.localUrlV1 + id)\n            .pipe(map(response => response));\n    }\n\n    /**\n     * Update all information of a pos\n     * @param pos data to update\n     */\n    update(pos: Pos): Observable<Pos> {\n        return this.http.patch<Pos>(this.localUrlV1 + pos.id,\n            {\n\n            })\n            .pipe(map (response => response));\n    }\n\n    /**\n     * Create a new pos for a merchant\n     * @param pos data of pos to create\n     */\n    register(pos: PosRegistration): Observable<Pos> {\n        return this.http.put<Pos>(this.localUrlV1,\n            {\n                ownerMerchantId: pos.ownerMerchantId,\n                name: pos.name,\n                latitude: pos.latitude,\n                longitude: pos.longitude,\n                url: pos.url\n            })\n            .pipe(map (response => response));\n    }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserService} from '../../_services/user.service';\nimport {Merchant, Merchants} from '../../_models';\nimport {MerchantService} from '../../_services/merchant.service';\nimport {AuthService} from '../../_services';\nimport {MatDialog} from '@angular/material/dialog';\nimport {AddMerchantDialogComponent, MerchantDialogData} from '../add-merchant/add-merchant.component';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {TranslateService} from '@ngx-translate/core';\nimport {first} from 'rxjs/operators';\nimport {AddPosDialogComponent} from '../add-pos/add-pos.component';\nimport {DialogType} from '../../_models/dialogType';\nimport {Subscription} from 'rxjs';\n\n@Component({\n    selector: 'app-user-home',\n    templateUrl: './user-home.component.html',\n    styleUrls: ['./user-home.component.css']\n})\nexport class UserHomeComponent implements OnInit, OnDestroy {\n    username: string;\n    merchants: Merchants;\n    merchantSubscription: Subscription;\n\n    constructor(public dialog: MatDialog,\n                private snackBar: MatSnackBar,\n                private userService: UserService,\n                private merchantService: MerchantService,\n                private authService: AuthService,\n                private translate: TranslateService) {\n    }\n\n    ngOnInit(): any {\n        this.username = this.userService.currentUserValue.name + ' ' +   this.userService.currentUserValue.surname;\n        this.loadData();\n    }\n\n    ngOnDestroy(): any {\n        this.merchantSubscription.unsubscribe();\n    }\n\n    loadData(): any {\n        this.merchantSubscription = this.authService.merchants().pipe().subscribe(\n            response =>\n            {\n                this.merchants = response;\n            }, error => {\n                console.log(error);\n            });\n    }\n\n    addMerchant(): any {\n        const merchantDialogData = new MerchantDialogData();\n        merchantDialogData.data = null;\n        merchantDialogData.type = DialogType.create;\n        const dialogRef = this.dialog.open(AddMerchantDialogComponent, {\n            data: merchantDialogData\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loadData();\n                this.translate.get('USER.ADD_MERCHANT.SUCCESS').pipe(first()).subscribe(\n                    response => {\n                        this.openSnackBar(response);\n                    });\n            }\n        });\n    }\n\n    addPos(merchantId: string): any {\n        const dialogRef = this.dialog.open(AddPosDialogComponent, {\n            data: merchantId\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loadData();\n                this.translate.get('USER.ADD_POS.SUCCESS').pipe(first()).subscribe(\n                    response => {\n                        this.openSnackBar(response);\n                    });\n            }\n        });\n    }\n\n    editMerchant(merchant: Merchant): any {\n        const merchantDialogData = new MerchantDialogData();\n        merchantDialogData.data = merchant;\n        merchantDialogData.type = DialogType.edit;\n        const dialogRef = this.dialog.open(AddMerchantDialogComponent, {\n            data: merchantDialogData\n        });\n        dialogRef.afterClosed().subscribe(result => {\n            if (result) {\n                this.loadData();\n                this.translate.get('USER.EDIT_MERCHANT.SUCCESS').pipe(first()).subscribe(\n                    response => {\n                        this.openSnackBar(response);\n                    });\n            }\n        });\n    }\n\n    openSnackBar(message = 'null'): any {\n        this.snackBar.open(message, null, {\n            duration: 2000\n        });\n    }\n}\n","<div class=\"container\">\n    <div class=\"mat-card\" >\n        <h3>{{\"USER.HOME.WELCOME\" | translate}}, {{username}}</h3>\n        <mat-divider></mat-divider>\n        <div class=\"merchant-container\">\n            <div class=\"merchant-header\">\n                <h1>{{\"USER.HOME.MERCHANT_TITLE\" | translate}}</h1>\n                <div class=\"button-container\" >\n                    <button mat-icon-button color=\"primary\" matTooltip=\"{{'USER.HOME.ADD_MERCHANT_TOOLTIP' | translate}}\"\n                            (click)=\"addMerchant()\">\n                        <mat-icon>add</mat-icon>\n                    </button>\n                </div>\n            </div>\n\n            <ng-container *ngIf=\"merchants\">\n                <mat-accordion class=\"merchant-mat-accordion\">\n                    <ng-container *ngFor=\"let merchant of merchants.merchants\">\n                        <mat-expansion-panel>\n                            <mat-expansion-panel-header>\n                                <mat-panel-title>\n                                    {{merchant.name}}\n                                </mat-panel-title>\n                            </mat-expansion-panel-header>\n                            <mat-divider></mat-divider>\n\n                            <p>\n                                <b>{{\"USER.HOME.MERCHANT.CODE\" | translate}}</b>:\n                                {{merchant.fiscalCode}}\n                            </p>\n                            <p>\n                                <b>{{\"USER.HOME.MERCHANT.ADDRESS\" | translate}}</b>:\n                                {{merchant.address}},\n                                {{merchant.zipCode}},\n                                {{merchant.city}},\n                                {{merchant.country}}\n                            </p>\n                            <p>\n                                <b>{{\"USER.HOME.MERCHANT.ACTIVITY_TYPE\" | translate}}</b>:\n                                {{merchant.primaryActivity}}\n                            </p>\n                            <p *ngIf=\"merchant.url\">\n                                <b>{{\"USER.HOME.MERCHANT.URL\" | translate}}</b>:\n                                <a [href]=\"merchant.url\" target=\"_blank\">{{merchant.url}}</a>\n                            </p>\n                            <p *ngIf=\"merchant.description\">\n                                {{merchant.description}}\n                            </p>\n                            <button mat-raised-button\n                                    color=\"primary\"\n                                    matTooltip=\"{{'USER.HOME.EDIT_MERCHANT_TOOLTIP' | translate}}\"\n                                    (click)=\"editMerchant(merchant)\">\n                                {{\"USER.HOME.EDIT_MERCHANT_BTN\" | translate}}\n                            </button>\n                            <!-- POS LIST -->\n                            <mat-card class=\"pos-card\">\n                                <mat-card-header>\n                                    <div class=\"button-container\">\n                                        <button mat-icon-button\n                                                color=\"primary\"\n                                                matTooltip=\"{{'USER.HOME.MERCHANT.ADD_POS_TOOLTIP' | translate}} {{merchant.name}}\"\n                                                (click)=\"addPos(merchant.id)\">\n                                            <mat-icon>add</mat-icon>\n                                        </button>\n                                    </div>\n                                    <mat-card-title>{{\"USER.HOME.MERCHANT.POS_TITLE\" | translate}}</mat-card-title>\n                                    <mat-card-subtitle>{{\"USER.HOME.MERCHANT.POS_SUBTITLE\" | translate}}</mat-card-subtitle>\n                                </mat-card-header>\n                                    <ng-container *ngFor=\"let pos of merchant.pos\">\n                                        <mat-card-content>\n                                        {{pos.name}}\n                                        </mat-card-content>\n                                    </ng-container>\n                            </mat-card>\n                        </mat-expansion-panel>\n                    </ng-container>\n                </mat-accordion>\n            </ng-container>\n        </div>\n    </div>\n</div>\n","export class Aim {\n    code: string;\n    titles: Titles[];\n    order: number;\n\n    public static fromJson(json): any {\n        if (json === null) {\n            return null;\n        }\n        return Object.assign(new Aim(), json);\n    }\n}\n\nexport class Titles {\n    en: string;\n    it: string;\n\n    public static fromJson(json): any {\n        if (json === null) {\n            return null;\n        }\n        return Object.assign(new Titles(), json);\n    }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {environment} from '../../environments/environment';\r\nimport {Merchants, Pos} from '../_models';\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n  localUrlV1 = environment.baseUrl + environment.v1 + 'auth/';\r\n  localUrlV2 = environment.baseUrl + environment.v2 + 'auth/';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Retrieve available WOM sources for the authenticated user\r\n   */\r\n  sources(): Observable<any> {\r\n    return this.http.get<any>(this.localUrlV1 + 'sources')\r\n        .pipe(map(value => value));\r\n  }\r\n\r\n  /**\r\n   * Retrieve available WOM POS for the authenticated user\r\n   */\r\n  pos(): Observable<Pos> {\r\n    return this.http.get<Pos>(this.localUrlV1 + 'pos')\r\n        .pipe(map(value => value));\r\n  }\r\n\r\n  /**\r\n   * Retrieve the public key used by the WOM registry\r\n   */\r\n  publicKey(): Observable<any> {\r\n    return this.http.get<any>(this.localUrlV2 + 'key') // Can use also v1\r\n      .pipe(map(value => value));\r\n  }\r\n\r\n  /**\r\n   * Retrieve available WOM Merchants for the authenticated user\r\n   */\r\n  merchants(): Observable<Merchants> {\r\n    return this.http.post<Merchants>(this.localUrlV2 + 'merchant', {})\r\n        .pipe(map(value => value));\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <span class=\"page-title\">Cosa sono i WOM</span>\r\n\r\n    <p class=\"page-secondary-title\" [innerHTML]=\"'ABOUT.SECTION_A.TITLE' | translate\"></p >\r\n    <p class=\"content\" [innerHTML]=\"'ABOUT.SECTION_A.A' | translate\"></p>\r\n    <p class=\"content\" [innerHTML]=\"'ABOUT.SECTION_A.B' | translate\"></p>\r\n    <p class=\"content\" [innerHTML]=\"'ABOUT.SECTION_A.C' | translate\"></p>\r\n\r\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"20px grid\">\r\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n            <div>\r\n                <p class=\"page-secondary-title\" [innerHTML]=\"'ABOUT.SECTION_B.TITLE' | translate\"></p>\r\n                <p [innerHTML]=\"'ABOUT.SECTION_B.A' | translate\"></p>\r\n                <p [innerHTML]=\"'ABOUT.SECTION_B.B' | translate\"></p>\r\n            </div>\r\n        </div>\r\n        <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n            <img fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"image\" src=\"assets/images/wom_pocket.png\" alt=\"WOM Pocket app\" />\r\n        </div>\r\n        <div fxFlex=\"100%\">\r\n            <div>\r\n                <p class=\"page-secondary-title\" [innerHTML]=\"'ABOUT.SECTION_C.TITLE' | translate\"></p>\r\n                <p [innerHTML]=\"'ABOUT.SECTION_C.A' | translate\"></p>\r\n                <p [innerHTML]=\"'ABOUT.SECTION_C.B' | translate\"></p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import {Pos} from './pos';\r\n\r\nexport class Merchant {\r\n  id: string;\r\n  name: string;\r\n  fiscalCode: string;\r\n  primaryActivity: string;\r\n  address: string;\r\n  zipCode: string;\r\n  city: string;\r\n  country: string;\r\n  description: string;\r\n  url: string;\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new Merchant(), json);\r\n  }\r\n}\r\n\r\nexport class MerchantContainer extends Merchant {\r\n  pos: Pos[];\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new MerchantContainer(), json);\r\n  }\r\n}\r\n\r\nexport class Merchants {\r\n  name: string;\r\n  surname: string;\r\n  email: string;\r\n  merchants: MerchantContainer[];\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new Merchants(), json);\r\n  }\r\n}\r\n\r\n\r\n","import {Component} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent {\r\n  constructor(private router: Router){}\r\n\r\n  async navigate(link: string): Promise<void> {\r\n    await this.router.navigate(['/' + link]);\r\n  }\r\n\r\n  async navigateExternal(link: string): Promise<void> {\r\n    window.open(link, '_blank');\r\n  }\r\n}\r\n","<div class=\"img-container\">\r\n  <img class=\"image\" src=\"assets/images/wom_header.jpg\" alt=\"WOM header\" />\r\n</div>\r\n<div class=\"container\">\r\n  <div fxLayout=\"row wrap\">\r\n    <img fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"image\" src=\"assets/images/wom-logo.png\" alt=\"WOM logo\" />\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"section\">\r\n      <p [innerHTML]=\"'HOME.SECTION_A.A' | translate\"></p>\r\n      <button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('about')\"></button>\r\n    </div>\r\n\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"section\">\r\n      <p [innerHTML]=\"'HOME.SECTION_A.B' | translate\"></p>\r\n      <button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigateExternal('https://www.digit.srl')\"></button>\r\n    </div>\r\n    <img fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"image\" src=\"assets/images/digit_logo.png\" alt=\"DIGIT srl logo\" />\r\n\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"section\">\r\n      <div class=\"header-box-title\">\r\n        <h1 [innerHTML]=\"'HOME.SECTION_B.TITLE' | translate\"></h1>\r\n      </div>\r\n      <div class=\"header-box-content\">\r\n        <p [innerHTML]=\"'HOME.SECTION_B.MESSAGE' | translate\"></p>\r\n        <button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('volunteer')\"></button>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\" class=\"section\">\r\n      <div class=\"header-box-title\">\r\n        <h1 [innerHTML]=\"'HOME.SECTION_C.TITLE' | translate\"></h1>\r\n      </div>\r\n      <div class=\"header-box-content\">\r\n        <p [innerHTML]=\"'HOME.SECTION_C.MESSAGE' | translate\"></p>\r\n        <button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('merchant')\"></button>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"100%\" class=\"section\">\r\n      <div class=\"header-box-title\">\r\n        <h1 [innerHTML]=\"'HOME.SECTION_D.TITLE' | translate\"></h1>\r\n      </div>\r\n      <div class=\"header-box-content\">\r\n        <p [innerHTML]=\"'HOME.SECTION_D.MESSAGE' | translate\"></p>\r\n        <button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('instrument')\"></button>\r\n      </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"100%\" class=\"section\">\r\n      <div class=\"header-box-title\">\r\n        <h1 [innerHTML]=\"'HOME.SECTION_E.TITLE' | translate\"></h1>\r\n      </div>\r\n      <div class=\"header-box-content\">\r\n        <p [innerHTML]=\"'HOME.SECTION_E.MESSAGE' | translate\"></p>\r\n        <!--<button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('instrument')\"></button>-->\r\n      </div>\r\n    </div>\r\n\r\n    <div fxFlex=\"100%\" class=\"section\">\r\n      <div class=\"header-box-content\">\r\n        <h1 [innerHTML]=\"'HOME.SECTION_F.TITLE' | translate\"></h1>\r\n        <p [innerHTML]=\"'HOME.SECTION_F.MESSAGE' | translate\"></p>\r\n        <!--<button mat-flat-button fxFlexAlign=\"right\" [innerHTML]=\"'GENERIC.BUTTON.MORE' | translate\" (click)=\"navigate('instrument')\"></button>-->\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import {Component, Input, OnChanges, OnInit, Output, SimpleChanges} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {EventEmitter} from '@angular/core';\n\n@Component({\n    selector: 'app-forms-user',\n    templateUrl: './forms-user.directive.html',\n    styleUrls: ['./forms-user.directive.css', '../forms.directive.css']\n})\nexport class UserFormComponent implements OnInit, OnChanges {\n    posLon: string;\n    posLat: string;\n\n    @Input() form: FormGroup;\n    @Input() disabled: boolean;\n    @Output() formChange = new EventEmitter<FormGroup>();\n    constructor(private fb: FormBuilder){}\n\n    ngOnInit(): any {\n        this.form = this.fb.group({\n            email: [{value: '', disabled: this.disabled}, Validators.email],\n            password: [{value: '', disabled: this.disabled}, Validators.required],\n            passwordRepeat: [{value: '', disabled: this.disabled}, Validators.required],\n            firstName: [{value: '', disabled: this.disabled}, Validators.required],\n            lastName: [{value: '', disabled: this.disabled}, Validators.required]\n        });\n\n        this.form.get('email').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('password').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('passwordRepeat').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('firstName').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('lastName').valueChanges.subscribe(value => this.formChange.emit(this.form));\n    }\n\n    ngOnChanges(changes: SimpleChanges): any {\n        console.log('changed');\n        if (this.disabled) {\n            this.form.controls.email.disable();\n            this.form.controls.password.disable();\n            this.form.controls.passwordRepeat.disable();\n            this.form.controls.firstName.disable();\n            this.form.controls.lastName.disable();\n        }\n    }\n}\n","<form [formGroup]=\"form\">\n    <table class=\"full-width\">\n        <tr>\n            <td colspan=\"2\">\n                <h1>{{ 'SIGN_UP.REPRESENTATIVE.TITLE' | translate }}</h1>\n\n                <mat-form-field>\n                    <label>\n                        <input matInput placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.EMAIL' | translate }}\" formControlName=\"email\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.REPRESENTATIVE.EMAIL_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"password\" placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.PASSWORD' | translate }}\" formControlName=\"password\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.REPRESENTATIVE.PASSWORD_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"password\" placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.REPEAT_PASSWORD' | translate }}\" formControlName=\"passwordRepeat\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.REPRESENTATIVE.PASSWORD_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.NAME' | translate }}\" formControlName=\"firstName\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.REPRESENTATIVE.NAME_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.SURNAME' | translate }}\" formControlName=\"lastName\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.REPRESENTATIVE.SURNAME_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n    </table>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <div>\n        <button mat-button matStepperNext>{{'SIGN_UP.NEXT' | translate}}</button>\n    </div>\n</form>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  mock: false,\r\n  baseUrl: 'https://wom.social/api/',\r\n  v1: 'v1/',\r\n  v2: 'v2/',\r\n  i18n: '1.0.0'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import {\n    HttpEvent,\n    HttpHandler,\n    HttpInterceptor,\n    HttpRequest,\n    HttpResponse\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {UserLogin} from '../_models';\n\n@Injectable()\nexport class TokenInterceptorService implements HttpInterceptor {\n    noAuthStrings: string[] = ['aims', 'aim', 'auth/key', 'user/login', 'user/register', 'user/password-reset'];\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // If true do nothing - auth header not needed\n        if (this.noAuthStrings.some(str => req.url.includes(str))) {\n            return next.handle(req);\n        }\n        const userLogin = localStorage.getItem('currentUserLogin');\n        if (userLogin === null) {\n            return next.handle(req);\n        }\n\n        const user: UserLogin = JSON.parse(userLogin);\n\n        const duplicate = req.clone( {setHeaders: {\n                Authorization: 'Bearer ' + user.token\n            }});\n        return next.handle(duplicate).pipe(tap((ev: HttpEvent<any>) => {\n            /*\n            if (ev instanceof HttpResponse) {\n                console.log('HttpResponse:', ev);\n            }\n            */\n        }));\n    }\n}\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-privacy-instrument',\r\n  templateUrl: './instrument.component.html',\r\n  styleUrls: ['./instrument.component.css', '../privacy.component.css']\r\n})\r\nexport class PrivacyInstrumentComponent {}\r\n","<div class=\"container\">\r\n  <h1>Privacy Policy ‘WOM Instrument’</h1>\r\n\r\nThe service is compliant with the <a href=\"https://www.eugdpr.org/\">EU General Data Protection Regulation.</a>\r\n</div>\r\n","export enum DialogType {\n    create,\n    edit\n}\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../_services/user.service';\nimport {User} from '../../_models';\n\n@Component({\n    selector: 'app-user-not-verified',\n    templateUrl: './user-not-verified.component.html',\n    styleUrls: ['./user-not-verified.component.css']\n})\nexport class UserNotVerifiedComponent  {\n    user: User;\n\n    constructor(private userService: UserService) {\n        this.user = userService.currentUserValue;\n    }\n\n    sendValidationEmail(): any {\n        // TODO\n    }\n}\n","<mat-card>\n    <mat-card-content>\n        <p>\n            {{\"USER.NOT_VERIFIED.TITLE\" | translate}}\n        </p>\n        <p>\n            {{\"USER.NOT_VERIFIED.SUBTITLE\" | translate}}\n            <button (click)=\"sendValidationEmail()\" >{{\"USER.NOT_VERIFIED.SEND_EMAIL_LINK\" | translate}}</button>\n            {{\"USER.NOT_VERIFIED.SEND_EMAIL_TEXT\" | translate}}\n            {{user.email}}\n        </p>\n    </mat-card-content>\n</mat-card>\n","export * from './auth.service';\r\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport MapTypeId = google.maps.MapTypeId;\nimport {GoogleMap} from '@angular/google-maps';\n\n@Component({\n    selector: 'app-forms-pos',\n    templateUrl: './forms-pos.directive.html',\n    styleUrls: ['./forms-pos.directive.css', '../forms.directive.css']\n})\nexport class PosFormComponent implements OnInit {\n    @ViewChild(GoogleMap, { static: false }) map: GoogleMap;\n\n    posLon: string;\n    posLat: string;\n    marker: google.maps.Marker;\n    options: google.maps.MapOptions = {\n        center: {lat: 45.788, lng: 9.948},\n        zoom: 4,\n        mapTypeId: MapTypeId.ROADMAP\n    };\n\n    @Input() form: FormGroup;\n    @Output() formChange = new EventEmitter<FormGroup>();\n\n    constructor(private fb: FormBuilder){}\n\n    ngOnInit(): any {\n        this.form = this.fb.group({\n            name: ['', Validators.required],\n            latitude: [{value: 0, disabled: true}, Validators.required],\n            longitude: [{value: 0, disabled: true}, Validators.required],\n            url: ['', !Validators.required]\n        });\n\n        this.form.get('name').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('latitude').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('longitude').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('url').valueChanges.subscribe(value => this.formChange.emit(this.form));\n    }\n\n    mapClick(event): any {\n        console.log(event);\n        const clickedLocation = event.latLng;\n        if (!this.marker) {\n            this.marker = new google.maps.Marker({\n                position: clickedLocation,\n                map: this.map.googleMap,\n                draggable: true\n            });\n            google.maps.event.addListener(this.marker, 'dragend', (evt) => {\n                this.markerLocation();\n            });\n        } else {\n            this.marker.setPosition(clickedLocation);\n        }\n        this.markerLocation();\n    }\n\n    markerLocation(): any {\n        const currentLocation = this.marker.getPosition();\n        this.form.controls.latitude.setValue(currentLocation.lat());\n        this.form.controls.longitude.setValue(currentLocation.lng());\n\n        this.posLat = currentLocation.lat().toFixed(5);\n        this.posLon = currentLocation.lng().toFixed(5);\n    }\n}\n","<form [formGroup]=\"form\">\n    <h1 [innerHTML]=\"'SIGN_UP.POS.TITLE' | translate\"></h1>\n\n    <p [innerHTML]=\"'SIGN_UP.POS.SUBTITLE_A' | translate\"></p>\n\n    <p [innerHTML]=\"'SIGN_UP.POS.SUBTITLE_B' | translate\"></p>\n    <table class=\"full-width\">\n        <tr>\n            <td colspan=\"2\">\n                <mat-form-field class=\"example-full-width\">\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.POS.NAME' | translate }}\" formControlName=\"name\">\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.POS.NAME_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=\"2\">\n                <p class=\"description\">\n                    {{ 'SIGN_UP.POS.NAME_TEXT' | translate }}\n                </p>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=\"2\">\n                {{ 'SIGN_UP.POS.MAP_TITLE' | translate }}\n                <div>\n                    <google-map [options]=\"options\"\n                                (mapClick)=\"mapClick($event)\">\n                    </google-map>\n                </div>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field class=\"example-full-width\">\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.POS.LAT' | translate }}\" [value]=\"posLat\" formControlName=\"latitude\">\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.POS.LAT_LON_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n            <td>\n                <mat-form-field class=\"example-full-width\">\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.POS.LON' | translate }}\" [value]=\"posLon\" formControlName=\"longitude\">\n                    </label>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=\"2\">\n                <mat-form-field class=\"example-full-width\">\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.POS.URL' | translate }}\" formControlName=\"url\">\n                    </label>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td colspan=\"2\">\n                <p class=\"description\" [innerHTML]=\"'SIGN_UP.POS.URL_OPTIONAL_TEXT' | translate\"></p>\n            </td>\n        </tr>\n    </table>\n</form>\n","import {Component, Input, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {EventEmitter} from '@angular/core';\nimport {countryList, Merchant, primaryActivityType} from '../../_models';\n\n@Component({\n    selector: 'app-forms-merchant',\n    templateUrl: './forms-merchant.directive.html',\n    styleUrls: ['./forms-merchant.directive.css', '../forms.directive.css']\n})\nexport class MerchantFormComponent implements OnInit {\n    countryList: string[] = countryList;\n    businessList: string[] = primaryActivityType;\n\n    @Input() form: FormGroup;\n    @Input() merchant: Merchant;\n    @Output() formChange = new EventEmitter<FormGroup>();\n    constructor(private fb: FormBuilder){}\n\n    ngOnInit(): any {\n        this.form = this.fb.group({\n            name: ['', [Validators.required, Validators.minLength(8)]],\n            fiscalCode: [\n                {value: '', disabled: this.merchant !== null},\n                [Validators.required, Validators.minLength(16), Validators.maxLength(16)]\n            ],\n            address: ['', !Validators.required],\n            cap: ['', Validators.required],\n            city: ['', Validators.required],\n            country: ['', Validators.required],\n            primaryActivity: ['', Validators.required],\n            url: ['', !Validators.required],\n            description: ['', !Validators.required]\n        });\n\n        this.form.get('name').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('fiscalCode').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('address').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('cap').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('city').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('country').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('primaryActivity').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('url').valueChanges.subscribe(value => this.formChange.emit(this.form));\n        this.form.get('description').valueChanges.subscribe(value => this.formChange.emit(this.form));\n\n        if (this.merchant !== null) {\n            this.form.controls.name.setValue(this.merchant.name);\n            this.form.controls.fiscalCode.setValue(this.merchant.fiscalCode);\n            this.form.controls.address.setValue(this.merchant.address);\n            this.form.controls.cap.setValue(this.merchant.zipCode);\n            this.form.controls.city.setValue(this.merchant.city);\n            this.form.controls.country.setValue(this.merchant.country);\n            this.form.controls.primaryActivity.setValue(this.merchant.primaryActivity);\n            this.form.controls.url.setValue(this.merchant.url);\n            this.form.controls.description.setValue(this.merchant.description);\n        }\n    }\n}\n","<form [formGroup]=\"form\">\n    <!-- MERCHANT DATA -->\n    <table class=\"full-width\">\n        <tr>\n            <td colspan=\"2\">\n                <h1>{{ 'SIGN_UP.MERCHANT.TITLE' | translate }}</h1>\n\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"text\" min=\"8\" placeholder=\"{{ 'SIGN_UP.MERCHANT.NAME' | translate }}\" formControlName=\"name\" required>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.MERCHANT.NAME_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput\n                               type=\"text\"\n                               #cf\n                               minlength=\"16\"\n                               maxlength=\"16\"\n                               placeholder=\"{{ 'SIGN_UP.MERCHANT.CF' | translate }}\"\n                               formControlName=\"fiscalCode\"\n                               required>\n                    </label>\n                    <mat-hint align=\"start\">{{cf.value.length}} / {{cf.maxLength}}</mat-hint>\n                    <mat-error>\n                        {{'SIGN_UP.MERCHANT.CF_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n    </table>\n\n    <!-- OPTIONAL MERCHANT DATA -->\n    <div class=\"row form-subgroup\">\n        <p class=\"description\" [innerHTML]=\"'SIGN_UP.MERCHANT.OPTIONAL_TEXT' | translate\"></p>\n        <table class=\"full-width\">\n            <tr>\n                <td colspan=\"2\">\n                    <mat-form-field>\n                        <label>\n                            <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.MERCHANT.ADDRESS' | translate }}\" formControlName=\"address\">\n                        </label>\n                        <mat-error>\n                            {{'SIGN_UP.MERCHANT.ADDRESS_ERROR' | translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </td>\n            </tr>\n            <tr>\n                <td colspan=\"1\">\n                    <mat-form-field>\n                        <label>\n                            <input matInput #cap placeholder=\"{{ 'SIGN_UP.MERCHANT.CAP' | translate }}\" formControlName=\"cap\">\n                        </label>\n                        <mat-hint align=\"start\">{{cap.value.length}} / 5</mat-hint>\n                        <mat-error>\n                            {{'SIGN_UP.MERCHANT.CAP_ERROR' | translate}}\n                        </mat-error>\n                    </mat-form-field>\n                </td>\n                <td colspan=\"1\">\n                    <mat-form-field>\n                        <label>\n                            <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.MERCHANT.CITY' | translate }}\" formControlName=\"city\">\n                        </label>\n                    </mat-form-field>\n                </td>\n            </tr>\n            <tr>\n                <td colspan=\"2\">\n                    <mat-form-field appearance=\"fill\">\n                        <mat-label>{{ 'SIGN_UP.MERCHANT.SELECT_COUNTRY' | translate }}</mat-label>\n                        <mat-select formControlName=\"country\" >\n                            <mat-option *ngFor=\"let country of countryList\" [value]=\"country\">{{country}}</mat-option>\n                        </mat-select>\n                    </mat-form-field>\n                </td>\n            </tr>\n        </table>\n    </div>\n    <mat-divider [inset]=\"true\"></mat-divider>\n    <table class=\"full-width\">\n        <tr>\n            <td>\n                <mat-form-field appearance=\"fill\">\n                    <mat-label>{{ 'SIGN_UP.MERCHANT.BUSINESS' | translate }}</mat-label>\n                    <mat-select formControlName=\"primaryActivity\" >\n                        <mat-option *ngFor=\"let business of businessList\" [value]=\"business\">{{business}}</mat-option>\n                    </mat-select>\n                    <mat-error>\n                        {{'SIGN_UP.MERCHANT.BUSINESS_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field>\n                    <label>\n                        <input matInput type=\"text\" placeholder=\"{{ 'SIGN_UP.MERCHANT.WEBSITE' | translate }}\" formControlName=\"url\">\n                    </label>\n\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <p class=\"description\" [innerHTML]=\"'SIGN_UP.MERCHANT.OPTIONAL_WEBSITE_TEXT' | translate\"></p>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <mat-form-field class=\"example-full-width \">\n                    <label>\n                        <textarea class=\"form-subgroup\" matInput placeholder=\"{{ 'SIGN_UP.MERCHANT.DESCRIPTION' | translate }}\" formControlName=\"description\"></textarea>\n                    </label>\n                    <mat-error>\n                        {{'SIGN_UP.MERCHANT.DESCRIPTION_ERROR' | translate}}\n                    </mat-error>\n                </mat-form-field>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <p class=\"description\">\n                    {{ 'SIGN_UP.MERCHANT.DESCRIPTION_TEXT' | translate }}\n                </p>\n            </td>\n        </tr>\n    </table>\n</form>\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-privacy-pos',\r\n  templateUrl: './pos.component.html',\r\n  styleUrls: ['./pos.component.css', '../privacy.component.css']\r\n})\r\nexport class PrivacyPosComponent {}\r\n","<div class=\"container\">\r\n  <h1>Privacy Policy ‘WOM Point of Service’</h1>\r\n  Personal data collected for the following purposes and using the following services:\r\n  <ul>\r\n    <li>\r\n      Authentication: password and username\r\n    </li>\r\n    <li>\r\n      Non-continuous geolocation: geographic location\r\n    </li>\r\n  </ul>\r\n\r\n  WOM POS will ask for the following permissions during regular operation:\r\n  <ul>\r\n    <li>\r\n      Location: using your device’s GPS to find current location (this permission is optional)\r\n    </li>\r\n  </ul>\r\n\r\n  Communication protocols with the WOM POS online service have been developed in order to be privacy-preserving by design:\r\n  <ul>\r\n    <li>\r\n      Unique identifiers of sessions and other sensitive data are never transmitted to the online service and are kept on the device;\r\n    </li>\r\n    <li>\r\n      No personal information is ever stored on our servers.\r\n    </li>\r\n  </ul>\r\n  The service is compliant with the <a href=\"https://www.eugdpr.org/\">EU General Data Protection Regulation.</a>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {first} from 'rxjs/operators';\r\nimport {UserService} from '../../_services/user.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  error: string;\r\n  form: FormGroup;\r\n  public loginInvalid: boolean;\r\n  private formSubmitAttempt: boolean;\r\n  private returnUrl: string;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private translate: TranslateService\r\n  ) {}\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/user/home';\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', Validators.email],\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    if (await this.userService.checkAuthenticated()) {\r\n      await this.router.navigate([this.returnUrl]);\r\n    }\r\n  }\r\n\r\n  async onSubmit(): Promise<void> {\r\n    this.loginInvalid = false;\r\n    this.formSubmitAttempt = false;\r\n    if (this.form.valid) {\r\n      try {\r\n        console.log('request login...');\r\n        const username = this.form.get('username').value;\r\n        const password = this.form.get('password').value;\r\n        this.userService.login(username, password)\r\n          .pipe(first())\r\n          .subscribe(\r\n            data => {\r\n              this.userService.getLoggedUser().pipe().subscribe(\r\n                  user => {\r\n                    this.router.navigate([this.returnUrl]);\r\n                  }, error => {\r\n                    console.log(error);\r\n                    this.error = error;\r\n                  });\r\n            },\r\n            error => {\r\n              console.log(error);\r\n              this.translate.get(['SIGN_IN.ERR.LOGIN', 'SIGN_IN.ERR.LOGIN']).subscribe(res => {\r\n                if (error.status === 403) {\r\n                  this.error = res['SIGN_IN.ERR.LOGIN'];\r\n                } else {\r\n                  this.error = res['SIGN_IN.ERR.LOGIN'];\r\n                }\r\n                this.loginInvalid = true;\r\n              });\r\n            });\r\n      } catch (err) {\r\n        console.log(err);\r\n        this.loginInvalid = true;\r\n      }\r\n    } else {\r\n      this.formSubmitAttempt = true;\r\n    }\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\r\n      <h2>{{ 'SIGN_IN.TITLE' | translate }}</h2>\r\n      <mat-error *ngIf=\"loginInvalid\">\r\n        {{error}}\r\n      </mat-error>\r\n      <mat-form-field class=\"full-width-input\">\r\n        <label>\r\n          <input matInput placeholder=\"{{ 'SIGN_IN.EMAIL' | translate }}\" formControlName=\"username\" required>\r\n        </label>\r\n        <mat-error>\r\n          {{ 'SIGN_IN.ERR.EMAIL' | translate }}\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field class=\"full-width-input\">\r\n        <label>\r\n          <input matInput type=\"password\" placeholder=\"{{ 'SIGN_IN.PASSWORD' | translate }}\" formControlName=\"password\" required>\r\n        </label>\r\n        <mat-error>\r\n          {{ 'SIGN_IN.ERR.PASSWORD' | translate }}\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <button mat-raised-button color=\"primary\">{{ 'SIGN_IN.BTN_SIGN_IN' | translate }}</button>\r\n    </form>\r\n      <div class=\"bottom-buttons\">\r\n        <a class=\"nav-link text-spacing\" [routerLink]=\"['/authentication/request-new-password']\">{{ 'SIGN_IN.BTN_FORGOT_PASSWORD' | translate }}</a>\r\n        <a class=\"nav-link text-spacing\" [routerLink]=\"['/authentication/signup']\">{{ 'SIGN_IN.BTN_SIGN_UP' | translate }}</a>\r\n      </div>\r\n  </mat-card-content>\r\n</mat-card>\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-privacy-pocket',\r\n  templateUrl: './pocket.component.html',\r\n  styleUrls: ['./pocket.component.css', '../privacy.component.css']\r\n})\r\nexport class PrivacyPocketComponent {}\r\n","<div class=\"container\">\r\n  <h1>Privacy Policy ‘WOM Pocket’</h1>\r\n  The Pocket mobile application and its online services are designed to be fully anonymous and will never collect personal information from their users.\r\n\r\n  WOM Pocket will ask for the following permissions during regular operation:\r\n\r\n  <ul>\r\n    <li>\r\n      Camera: Using your device’s camera to scan a QR-Code\r\n    </li>\r\n  </ul>\r\n  It is required to grant these permissions otherwise the stated functions may not work as intended.\r\n\r\n  Communication protocols with the Pocket online service have been developed in order to be privacy-preserving by design:\r\n\r\n  <ul>\r\n    <li>\r\n      Unique identifiers of sessions and other sensitive data are never transmitted to the online service and are kept on the device;\r\n    </li>\r\n    <li>\r\n      No personal information is ever stored on our servers.\r\n    </li>\r\n  </ul>\r\n\r\n  The service is compliant with the <a href=\"https://www.eugdpr.org/\">EU General Data Protection Regulation.</a>\r\n</div>\r\n","import { Component } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  constructor(translate: TranslateService) {\n    translate.addLangs(['en', 'it']);\n\n    translate.setDefaultLang('it');\n\n    console.log('browser lang: ', translate.getBrowserLang());\n    if (translate.getBrowserLang()) {\n      translate.use(translate.getBrowserLang());\n    }\n  }\n}\n","<div fxLayout=\"column\" fxFlexFill>\n  <app-nav></app-nav>\n  <div fxFlex class=\"main-container\">\n    <app-breadcrumbs></app-breadcrumbs>\n    <router-outlet></router-outlet>\n  </div>\n  <app-footer></app-footer>\n</div>\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-privacy',\r\n  templateUrl: './privacy.component.html',\r\n  styleUrls: ['./privacy.component.css']\r\n})\r\nexport class PrivacyComponent {}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Title</title>\r\n</head>\r\n<body>\r\n\r\n</body>\r\n</html>\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {User, UserLogin, UserRegistrationPayload} from '../_models';\nimport {environment} from '../../environments/environment';\n\n@Injectable({providedIn: 'root'})\nexport class UserService {\n    localUrlV1 = environment.baseUrl + environment.v1 + 'user/';\n    localUrlV2 = environment.baseUrl + environment.v2 + 'user/';\n\n    // Login data\n    public currentUserLogin: Observable<UserLogin>;\n    private currentUserLoginSubject: BehaviorSubject<UserLogin>;\n\n    // User data\n    public currentUser: Observable<User>;\n    private currentUserSubject: BehaviorSubject<User>;\n\n    constructor(private http: HttpClient) {\n        const localStorageUserLogin = UserLogin.fromJson(JSON.parse(localStorage.getItem('currentUserLogin')));\n        this.currentUserLoginSubject = new BehaviorSubject<UserLogin>(localStorageUserLogin);\n        this.currentUserLogin = this.currentUserLoginSubject.asObservable();\n\n        const localStorageUser = User.fromJson(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUserSubject = new BehaviorSubject<User>(localStorageUser);\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n\n    public get currentUserLoginValue(): UserLogin {\n        return this.currentUserLoginSubject.value;\n    }\n\n    async checkAuthenticated(): Promise<boolean> {\n        return this.currentUserSubject.getValue() !== null && this.currentUserSubject.getValue() !== undefined;\n    }\n\n    /**\n     * Login and retrieve the user id and bearer token\n     * @param email username is always email\n     * @param password password associated for the username\n     */\n    login(email: string, password: string): Observable<any> {\n        return this.http.post<any>(this.localUrlV1 + 'login', {\n            /*\n            email,\n            password,\n            clientName: '',\n            persistent: true\n            */\n        }, {\n            observe: 'response',\n            headers: {\n                Authorization: 'Basic ' + btoa(email + ':' + password)\n            }\n        })\n            .pipe(map(response => {\n                // login successful if there's a valid user in the response\n                if (response.body) {\n                    const login = UserLogin.fromJson(response.body);\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\n                    localStorage.setItem('currentUserLogin', JSON.stringify(login));\n                    this.currentUserLoginSubject.next(login);\n                    return login;\n                }\n            }));\n    }\n\n    /**\n     * Notify the server that the user has logged out & remove local storage data\n     */\n    logout(): void {\n        this.http.post<any>(this.localUrlV1 + 'logout', {})\n            .pipe(map(value => {\n                console.log('logout: ' + value);\n            }));\n\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUserLogin');\n        localStorage.removeItem('currentUser');\n\n        this.currentUserLoginSubject.next(null);\n        this.currentUserSubject.next(null);\n    }\n\n    /**\n     * Get user data for current user id\n     */\n    getLoggedUser(): Observable<User> {\n        return this.http.get<User>(this.localUrlV1 + this.currentUserLoginSubject.value.id)\n            .pipe(map(user => {\n                // user id is correct if value is not null\n                if (user) {\n                    // hydrate a full User object from its JSON representation (to have its methods/logic)\n                    user = User.fromJson(user);\n\n                    // store user details in local storage to save user data in between page refreshes\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n                }\n                return user;\n            }));\n    }\n\n    /**\n     * Register a new user\n     * @param data user data\n     */\n    register(data: UserRegistrationPayload): Observable<User> {\n        return this.http.post<User>(this.localUrlV1 + 'register', data)\n            .pipe(map(response => response));\n    }\n\n    /**\n     * Update an existing user's data\n     * @param data user data\n     */\n    update(data: UserRegistrationPayload): Observable<User> {\n        return this.http.patch<User>(this.localUrlV1 + this.currentUserLoginSubject.value.id,\n            data).pipe(map (response => response));\n    }\n\n    /**\n     * verify status of user account\n     */\n    verify(): Observable<any> {\n        return this.http.post<any>(this.localUrlV1 + this.currentUserLoginSubject.value.id + '/verify', {})\n            .pipe(map (response => response));\n    }\n\n    /**\n     * ask for password reset\n     * @param email registered user's email (username)\n     */\n    passwordResetRequest(email: string): Observable<any> {\n        return this.http.post<any>(this.localUrlV1 + 'password-reset',\n            {email}).pipe(map (response => response));\n    }\n\n    /**\n     * Send new password\n     * @param userId user's id to reset password for\n     * @param token confirmation token\n     * @param password new password\n     */\n    passwordReset(userId: string, token: string, password: string): Observable<any> {\n        return this.http.post<any>(this.localUrlV1 + userId + '/password-reset',\n            {\n                token,\n                password\n            }).pipe(map (response => response));\n    }\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Merchant} from '../_models';\nimport {environment} from '../../environments/environment';\nimport {map} from 'rxjs/operators';\n\n@Injectable({providedIn: 'root'})\nexport class MerchantService {\n    localUrlV1 = environment.baseUrl + environment.v1 + 'merchant/';\n    localUrlV2 = environment.baseUrl + environment.v2 + 'merchant/';\n\n    constructor(private http: HttpClient) {}\n\n    /**\n     * Get merchant data from specific merchant id\n     * @param id merchant id\n     */\n    getMerchant(id: string): Observable<Merchant> {\n        return this.http.get<Merchant>(this.localUrlV1 + id)\n            .pipe(map (response => response));\n    }\n\n    /**\n     * Update all information of a merchant\n     * @param merchant data to update\n     */\n    update(merchant: Merchant): Observable<Merchant> {\n        return this.http.patch<Merchant>(this.localUrlV1 + merchant.id,\n            {\n                name: merchant.name,\n                fiscalCode: merchant.fiscalCode,\n                primaryActivity: merchant.primaryActivity,\n                address: merchant.address,\n                zipCode: merchant.zipCode,\n                city: merchant.city,\n                country: merchant.country,\n                description: merchant.description,\n                url: merchant.url\n            })\n            .pipe(map (response => response));\n    }\n\n    /**\n     * Create a new merchant\n     * @param merchant data of merchant to create\n     */\n    register(merchant: Merchant): Observable<Merchant> {\n        return this.http.put<Merchant>(this.localUrlV1,\n            {\n                name: merchant.name,\n                fiscalCode: merchant.fiscalCode,\n                primaryActivityType: merchant.primaryActivity,\n                address: merchant.address,\n                zipCode: merchant.zipCode,\n                city: merchant.city,\n                country: merchant.country,\n                description: merchant.description,\n                url: merchant.url\n            })\n            .pipe(map (response => response));\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {MenuItem} from 'primeng-lts/api';\nimport {filter} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-breadcrumbs',\n    templateUrl: './breadcrumbs.component.html'\n})\nexport class BreadcrumbsComponent implements OnInit {\n    static readonly ROUTE_DATA_BREADCRUMB = 'breadcrumb';\n    readonly home = {icon: 'pi pi-home', url: 'home'};\n    menuItems: MenuItem[];\n\n    constructor(\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private translate: TranslateService) {}\n\n    ngOnInit(): void {\n        this.router.events\n            .pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(() => this.menuItems = this.createBreadcrumbs(this.activatedRoute.root));\n    }\n\n    private createBreadcrumbs(route: ActivatedRoute, url: string = '#', breadcrumbs: MenuItem[] = []): MenuItem[] {\n        const children: ActivatedRoute[] = route.children;\n        const menu: MenuItem[] = [];\n        breadcrumbs.forEach(b => {\n            const label: string = this.translate.instant(b.label);\n            menu.push({label, url: b.url});\n        });\n\n        if (children.length === 0) {\n            return menu;\n        }\n\n        for (const child of children) {\n            const routeURL: string = child.snapshot.url.map(segment => segment.path).join('/');\n            if (routeURL !== '') {\n                url += `/${routeURL}`;\n            }\n\n            const labelVal = child.snapshot.data[BreadcrumbsComponent.ROUTE_DATA_BREADCRUMB];\n            if (labelVal !== undefined) {\n                const label: string = this.translate.instant(labelVal);\n                menu.push({label, url});\n            }\n            return this.createBreadcrumbs(child, url, menu);\n        }\n    }\n}\n","<p-breadcrumb [home]=\"home\" [model]=\"menuItems\"></p-breadcrumb>\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport {APP_INITIALIZER, NgModule} from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS, HttpClient} from '@angular/common/http';\r\nimport {appRoutingModule} from './app.routing';\r\nimport {RouterModule} from '@angular/router';\r\nimport {TranslateLoader, TranslateModule, TranslateService} from '@ngx-translate/core';\r\nimport {HomeComponent} from './home';\r\nimport {NavComponent} from './nav/nav.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {SignInComponent} from './authentication/signin/signin.component';\r\nimport {FooterComponent} from './footer/footer.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MerchantSignUpComponent} from './authentication/signup/signup.component';\r\nimport {FlexLayoutModule, FlexModule} from '@angular/flex-layout';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MerchantDashboardComponent} from './merchant/dashboard/merchant-dashboard.component';\r\nimport {PrivacyComponent} from './privacy/privacy.component';\r\nimport {PrivacyInstrumentComponent} from './privacy/instrument/instrument.component';\r\nimport {PrivacyPocketComponent} from './privacy/pocket/pocket.component';\r\nimport {PrivacyPosComponent} from './privacy/pos/pos.component';\r\nimport {HttpMockRequestInterceptor} from './_helpers/HttpMockRequestInterceptor';\r\n\r\nimport {environment} from '../environments/environment';\r\nimport {TokenInterceptorService} from './_helpers/httpInterceptor';\r\nimport {UserHomeComponent} from './user/home/user-home.component';\r\nimport {PosFormComponent} from './_forms/pos/forms-pos.directive';\r\nimport {UserFormComponent} from './_forms/user/forms-user.directive';\r\nimport {MerchantFormComponent} from './_forms/merchant/forms-merchant.directive';\r\nimport {ProgressSpinnerComponent} from './_progressSpinner/progress-spinner.component';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {AppOverlayModule} from './_overlay/overlay.module';\r\nimport {UserNotVerifiedComponent} from './user/not-verified/user-not-verified.component';\r\nimport {AddMerchantDialogComponent} from './user/add-merchant/add-merchant.component';\r\nimport {AddPosDialogComponent} from './user/add-pos/add-pos.component';\r\nimport {CookieService} from 'ngx-cookie-service';\r\nimport {ResetPasswordComponent} from './authentication/reset-password/reset-password.component';\r\nimport {LogInErrorDialogComponent} from './authentication/signup/signup-login-error.directive';\r\nimport {UserVerifyComponent} from './user/verify/user-verify.component';\r\nimport {PageNotFoundComponent} from './pageNotFound/page-not-found.component';\r\nimport {RequestNewPasswordComponent} from './authentication/requestNewPassword/request-new-password.component';\r\nimport {MerchantComponent} from './merchant/merchant.component';\r\nimport {InstrumentComponent} from './instrument/instrument.component';\r\nimport {VolunteerComponent} from './volunteer/volunteer.component';\r\nimport {AboutComponent} from './about/about.component';\r\nimport {BreadcrumbsComponent} from './breadcrumbs/breadcrumbs.component';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport {BreadcrumbModule} from 'primeng-lts/breadcrumb';\r\n\r\n// AoT requires an exported function for factories\r\nexport const createTranslateLoader = (http: HttpClient) => new TranslateHttpLoader(http, './assets/i18n/', '.json?cb=' + environment.i18n);\r\nexport function translateFactory(translate: TranslateService): any {\r\n    return async () => {\r\n        translate.setDefaultLang('en');\r\n        translate.use('en');\r\n        return new Promise(resolve => {\r\n            translate.onLangChange.subscribe(() => {\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n}\r\nexport const isMock = environment.mock;\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FooterComponent,\r\n    HomeComponent,\r\n    NavComponent,\r\n    SignInComponent,\r\n    MerchantSignUpComponent,\r\n    MerchantDashboardComponent,\r\n    PrivacyComponent,\r\n    PrivacyInstrumentComponent,\r\n    PrivacyPocketComponent,\r\n    PrivacyPosComponent,\r\n    UserHomeComponent,\r\n    PosFormComponent,\r\n    UserFormComponent,\r\n    MerchantFormComponent,\r\n    ProgressSpinnerComponent,\r\n    UserNotVerifiedComponent,\r\n    AddMerchantDialogComponent,\r\n    AddPosDialogComponent,\r\n    ResetPasswordComponent,\r\n    LogInErrorDialogComponent,\r\n    UserVerifyComponent,\r\n    RequestNewPasswordComponent,\r\n    PageNotFoundComponent,\r\n    MerchantComponent,\r\n    InstrumentComponent,\r\n    VolunteerComponent,\r\n    AboutComponent,\r\n    BreadcrumbsComponent\r\n  ],\r\n  exports: [\r\n      MatStepperModule\r\n  ],\r\n    imports: [\r\n        appRoutingModule,\r\n        RouterModule.forRoot([\r\n            {path: '', component: HomeComponent, pathMatch: 'full'}\r\n        ]),\r\n        TranslateModule.forRoot({\r\n            defaultLanguage: 'en',\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: (createTranslateLoader),\r\n                deps: [HttpClient]\r\n            }\r\n        }),\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        FlexLayoutModule,\r\n        MatIconModule,\r\n        MatToolbarModule,\r\n        MatButtonModule,\r\n        MatExpansionModule,\r\n        MatCheckboxModule,\r\n        MatMenuModule,\r\n        MatDividerModule,\r\n        MatProgressSpinnerModule,\r\n        MatInputModule,\r\n        MatCardModule,\r\n        MatSlideToggleModule,\r\n        MatSelectModule,\r\n        MatStepperModule,\r\n        MatTooltipModule,\r\n        MatDialogModule,\r\n        MatSnackBarModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        GoogleMapsModule,\r\n        OverlayModule,\r\n        AppOverlayModule,\r\n        TranslateModule,\r\n        MatButtonModule,\r\n        MatButtonModule,\r\n        TranslateModule,\r\n        MatGridListModule,\r\n        MatGridListModule,\r\n        GoogleMapsModule,\r\n        FlexModule,\r\n        FlexLayoutModule,\r\n        FlexModule,\r\n        MatButtonModule,\r\n        BreadcrumbModule\r\n    ],\r\n  providers: [\r\n      {\r\n          provide: APP_INITIALIZER,\r\n          useFactory: translateFactory,\r\n          deps: [TranslateService],\r\n          multi: true\r\n      },\r\n    isMock\r\n      ? [{\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: HttpMockRequestInterceptor,\r\n          multi: true\r\n        },\r\n          CookieService\r\n        ]\r\n      : [{\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: TokenInterceptorService,\r\n          multi: true\r\n        },\r\n          CookieService\r\n        ]\r\n  ],\r\n  entryComponents: [ProgressSpinnerComponent],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export const countryList = [\n    'Afghanistan',\n    'Albania',\n    'Algeria',\n    'American Samoa',\n    'Andorra',\n    'Angola',\n    'Anguilla',\n    'Antarctica',\n    'Antigua and Barbuda',\n    'Argentina',\n    'Armenia',\n    'Aruba',\n    'Australia',\n    'Austria',\n    'Azerbaijan',\n    'Bahamas (the)',\n    'Bahrain',\n    'Bangladesh',\n    'Barbados',\n    'Belarus',\n    'Belgium',\n    'Belize',\n    'Benin',\n    'Bermuda',\n    'Bhutan',\n    'Bolivia (Plurinational State of)',\n    'Bonaire, Sint Eustatius and Saba',\n    'Bosnia and Herzegovina',\n    'Botswana',\n    'Bouvet Island',\n    'Brazil',\n    'British Indian Ocean Territory (the)',\n    'Brunei Darussalam',\n    'Bulgaria',\n    'Burkina Faso',\n    'Burundi',\n    'Cabo Verde',\n    'Cambodia',\n    'Cameroon',\n    'Canada',\n    'Cayman Islands (the)',\n    'Central African Republic (the)',\n    'Chad',\n    'Chile',\n    'China',\n    'Christmas Island',\n    'Cocos (Keeling) Islands (the)',\n    'Colombia',\n    'Comoros (the)',\n    'Congo (the Democratic Republic of the)',\n    'Congo (the)',\n    'Cook Islands (the)',\n    'Costa Rica',\n    'Croatia',\n    'Cuba',\n    'Curaçao',\n    'Cyprus',\n    'Czechia',\n    'Côte d\\'Ivoire',\n    'Denmark',\n    'Djibouti',\n    'Dominica',\n    'Dominican Republic (the)',\n    'Ecuador',\n    'Egypt',\n    'El Salvador',\n    'Equatorial Guinea',\n    'Eritrea',\n    'Estonia',\n    'Eswatini',\n    'Ethiopia',\n    'Falkland Islands (the) [Malvinas]',\n    'Faroe Islands (the)',\n    'Fiji',\n    'Finland',\n    'France',\n    'French Guiana',\n    'French Polynesia',\n    'French Southern Territories (the)',\n    'Gabon',\n    'Gambia (the)',\n    'Georgia',\n    'Germany',\n    'Ghana',\n    'Gibraltar',\n    'Greece',\n    'Greenland',\n    'Grenada',\n    'Guadeloupe',\n    'Guam',\n    'Guatemala',\n    'Guernsey',\n    'Guinea',\n    'Guinea-Bissau',\n    'Guyana',\n    'Haiti',\n    'Heard Island and McDonald Islands',\n    'Holy See (the)',\n    'Honduras',\n    'Hong Kong',\n    'Hungary',\n    'Iceland',\n    'India',\n    'Indonesia',\n    'Iran (Islamic Republic of)',\n    'Iraq',\n    'Ireland',\n    'Isle of Man',\n    'Israel',\n    'Italy',\n    'Jamaica',\n    'Japan',\n    'Jersey',\n    'Jordan',\n    'Kazakhstan',\n    'Kenya',\n    'Kiribati',\n    'Korea (the Democratic People\\'s Republic of)',\n    'Korea (the Republic of)',\n    'Kuwait',\n    'Kyrgyzstan',\n    'Lao People\\'s Democratic Republic (the)',\n    'Latvia',\n    'Lebanon',\n    'Lesotho',\n    'Liberia',\n    'Libya',\n    'Liechtenstein',\n    'Lithuania',\n    'Luxembourg',\n    'Macao',\n    'Madagascar',\n    'Malawi',\n    'Malaysia',\n    'Maldives',\n    'Mali',\n    'Malta',\n    'Marshall Islands (the)',\n    'Martinique',\n    'Mauritania',\n    'Mauritius',\n    'Mayotte',\n    'Mexico',\n    'Micronesia (Federated States of)',\n    'Moldova (the Republic of)',\n    'Monaco',\n    'Mongolia',\n    'Montenegro',\n    'Montserrat',\n    'Morocco',\n    'Mozambique',\n    'Myanmar',\n    'Namibia',\n    'Nauru',\n    'Nepal',\n    'Netherlands (the)',\n    'New Caledonia',\n    'New Zealand',\n    'Nicaragua',\n    'Niger (the)',\n    'Nigeria',\n    'Niue',\n    'Norfolk Island',\n    'Northern Mariana Islands (the)',\n    'Norway',\n    'Oman',\n    'Pakistan',\n    'Palau',\n    'Palestine, State of',\n    'Panama',\n    'Papua New Guinea',\n    'Paraguay',\n    'Peru',\n    'Philippines (the)',\n    'Pitcairn',\n    'Poland',\n    'Portugal',\n    'Puerto Rico',\n    'Qatar',\n    'Republic of North Macedonia',\n    'Romania',\n    'Russian Federation (the)',\n    'Rwanda',\n    'Réunion',\n    'Saint Barthélemy',\n    'Saint Helena, Ascension and Tristan da Cunha',\n    'Saint Kitts and Nevis',\n    'Saint Lucia',\n    'Saint Martin (French part)',\n    'Saint Pierre and Miquelon',\n    'Saint Vincent and the Grenadines',\n    'Samoa',\n    'San Marino',\n    'Sao Tome and Principe',\n    'Saudi Arabia',\n    'Senegal',\n    'Serbia',\n    'Seychelles',\n    'Sierra Leone',\n    'Singapore',\n    'Sint Maarten (Dutch part)',\n    'Slovakia',\n    'Slovenia',\n    'Solomon Islands',\n    'Somalia',\n    'South Africa',\n    'South Georgia and the South Sandwich Islands',\n    'South Sudan',\n    'Spain',\n    'Sri Lanka',\n    'Sudan (the)',\n    'Suriname',\n    'Svalbard and Jan Mayen',\n    'Sweden',\n    'Switzerland',\n    'Syrian Arab Republic',\n    'Taiwan',\n    'Tajikistan',\n    'Tanzania, United Republic of',\n    'Thailand',\n    'Timor-Leste',\n    'Togo',\n    'Tokelau',\n    'Tonga',\n    'Trinidad and Tobago',\n    'Tunisia',\n    'Turkey',\n    'Turkmenistan',\n    'Turks and Caicos Islands (the)',\n    'Tuvalu',\n    'Uganda',\n    'Ukraine',\n    'United Arab Emirates (the)',\n    'United Kingdom of Great Britain and Northern Ireland (the)',\n    'United States Minor Outlying Islands (the)',\n    'United States of America (the)',\n    'Uruguay',\n    'Uzbekistan',\n    'Vanuatu',\n    'Venezuela (Bolivarian Republic of)',\n    'Viet Nam',\n    'Virgin Islands (British)',\n    'Virgin Islands (U.S.)',\n    'Wallis and Futuna',\n    'Western Sahara',\n    'Yemen',\n    'Zambia',\n    'Zimbabwe',\n    'Åland Islands'\n];\n","export const primaryActivityType = [\n    'Agricolture',\n    'Construction',\n    'Manifacture',\n    'RetailCommerce',\n    'Transport',\n    'Lodging',\n    'Food',\n    'Information',\n    'Finance',\n    'Travel',\n    'Education',\n    'Health',\n    'Sports',\n    'Services',\n    'Entertainment',\n    'Organizations'\n];\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-instrument',\r\n  templateUrl: './instrument.component.html',\r\n  styleUrls: ['./instrument.component.css']\r\n})\r\nexport class InstrumentComponent {\r\n  constructor() {\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <span class=\"page-title\">Instrument</span>\r\n</div>\r\n","export class Pos {\r\n  id: string;\r\n  name: string;\r\n  url: string;\r\n  privateKey: string;\r\n  publicKey: string;\r\n  latitude: number;\r\n  longitude: number;\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new Pos(), json);\r\n  }\r\n}\r\n\r\nexport class PosRegistration {\r\n  ownerMerchantId: string;\r\n  name: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  url: string;\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new PosRegistration(), json);\r\n  }\r\n}\r\n","import {AuthGuard} from './_helpers/auth.guard';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {HomeComponent} from './home';\r\nimport {SignInComponent} from './authentication/signin/signin.component';\r\nimport {MerchantSignUpComponent} from './authentication/signup/signup.component';\r\nimport {MerchantDashboardComponent} from './merchant/dashboard/merchant-dashboard.component';\r\nimport {PrivacyComponent} from './privacy/privacy.component';\r\nimport {PrivacyPosComponent} from './privacy/pos/pos.component';\r\nimport {PrivacyPocketComponent} from './privacy/pocket/pocket.component';\r\nimport {PrivacyInstrumentComponent} from './privacy/instrument/instrument.component';\r\nimport {UserHomeComponent} from './user/home/user-home.component';\r\nimport {UserNotVerifiedComponent} from './user/not-verified/user-not-verified.component';\r\nimport {ResetPasswordComponent} from './authentication/reset-password/reset-password.component';\r\nimport {UserVerifyComponent} from './user/verify/user-verify.component';\r\nimport {PageNotFoundComponent} from './pageNotFound/page-not-found.component';\r\nimport {RequestNewPasswordComponent} from './authentication/requestNewPassword/request-new-password.component';\r\nimport {MerchantComponent} from './merchant/merchant.component';\r\nimport {VolunteerComponent} from './volunteer/volunteer.component';\r\nimport {InstrumentComponent} from './instrument/instrument.component';\r\nimport {AboutComponent} from './about/about.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: '/home',\r\n        pathMatch: 'full',\r\n        data: {\r\n          breadcrumb: null\r\n        }\r\n      },\r\n      {\r\n        path: 'home',\r\n        component: HomeComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.HOME'\r\n        },\r\n      },\r\n      {\r\n        path: 'about',\r\n        component: AboutComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.ABOUT'\r\n        },\r\n      },\r\n      {\r\n        path: 'volunteer',\r\n        component: VolunteerComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.VOLUNTEER'\r\n        },\r\n      },\r\n      {\r\n        path: 'merchant',\r\n        component: MerchantComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.MERCHANT'\r\n        },\r\n      },\r\n      {\r\n        path: 'instrument',\r\n        component: InstrumentComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.INSTRUMENT'\r\n        },\r\n      },\r\n      {\r\n        path: 'user',\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.USER.USER'\r\n        },\r\n        children: [\r\n          {\r\n            path: 'merchant',\r\n            component :  MerchantDashboardComponent,\r\n            canActivate: [AuthGuard],\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.USER.MERCHANT'\r\n            }\r\n          },\r\n          {\r\n            path: 'not-verified',\r\n            component: UserNotVerifiedComponent,\r\n            canActivate: [AuthGuard],\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.USER.ERROR'\r\n            }\r\n          },\r\n          {\r\n            path: 'home',\r\n            component: UserHomeComponent,\r\n            canActivate: [AuthGuard],\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.USER.HOME'\r\n            }\r\n          },\r\n          {\r\n            path: 'verify',\r\n            component: UserVerifyComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.USER.VERIFY'\r\n            }\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'authentication',\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.AUTHENTICATION.AUTHENTICATION'\r\n        },\r\n        children: [\r\n          {\r\n            path: 'signin',\r\n            component : SignInComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.AUTHENTICATION.SIGNIN'\r\n            }\r\n          },\r\n          {\r\n            path: 'signup',\r\n            component : MerchantSignUpComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.AUTHENTICATION.SIGNUP'\r\n            }\r\n          },\r\n          {\r\n            path: 'reset-password',\r\n            component : ResetPasswordComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.AUTHENTICATION.RESET_PASSWORD'\r\n            }\r\n          },\r\n          {\r\n            path: 'request-new-password',\r\n            component : RequestNewPasswordComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.AUTHENTICATION.NEW_PASSWORD'\r\n            }\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: 'privacy',\r\n        component : PrivacyComponent,\r\n        data: {\r\n          breadcrumb: 'BREADCRUMBS.PRIVACY.PRIVACY'\r\n        },\r\n        children: [\r\n          {\r\n            path: 'pos',\r\n            component : PrivacyPosComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.PRIVACY.POS'\r\n            },\r\n          },\r\n          {\r\n            path: 'pocket',\r\n            component : PrivacyPocketComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.PRIVACY.POCKET'\r\n            },\r\n          },\r\n          {\r\n            path: 'instrument',\r\n            component : PrivacyInstrumentComponent,\r\n            data: {\r\n              breadcrumb: 'BREADCRUMBS.PRIVACY.INSTRUMENT'\r\n            },\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        path: '**',\r\n        component : PageNotFoundComponent\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const appRoutingModule = RouterModule.forRoot(routes);\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\n// @ts-ignore\r\nimport * as user from './user.json';\r\n\r\nconst urls = [\r\n  {\r\n    url: 'https://wom.social/api/v2/auth/merchant',\r\n    json: user\r\n  }\r\n];\r\n\r\n@Injectable()\r\nexport class HttpMockRequestInterceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    for (const element of urls) {\r\n      if (request.url === element.url) {\r\n        console.log('Loaded from json : ' + request.url);\r\n        return of(new HttpResponse({ status: 200, body: ((element.json) as any).default }));\r\n      }\r\n    }\r\n    console.log('Loaded from http call :' + request.url);\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import {ChangeDetectorRef, Component, Inject, OnInit} from '@angular/core';\nimport {Merchant} from '../../_models';\nimport {first} from 'rxjs/operators';\nimport {FormGroup} from '@angular/forms';\nimport {MerchantService} from '../../_services/merchant.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {DialogType} from '../../_models/dialogType';\n\n@Component({\n    selector: 'app-merchant-dialog',\n    templateUrl: 'add-merchant.component.html',\n    styleUrls: ['add-merchant.component.css']\n})\nexport class AddMerchantDialogComponent implements OnInit {\n    formMerchant: FormGroup;\n    formInputError: boolean;\n    formApiError: boolean;\n    dialogTypes = DialogType;\n    merchantData: Merchant;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: MerchantDialogData,\n                public dialogRef: MatDialogRef<AddMerchantDialogComponent>,\n                private merchantService: MerchantService,\n                private cd: ChangeDetectorRef) {}\n\n    ngOnInit(): any {\n        this.merchantData = this.data.data;\n        this.cd.detectChanges();\n    }\n    onSubmit(): any {\n        switch (this.data.type) {\n            case DialogType.create:\n                this.create();\n                break;\n            case DialogType.edit:\n                this.edit();\n                break;\n        }\n    }\n\n    create(): any {\n        const merchant = this.createMerchantDataStruct();\n        this.merchantService.register(merchant).pipe(first()).subscribe(\n            result => {\n                console.log(result);\n                this.dialogRef.close(true);\n            }, error => {\n                this.formApiError = true;\n                console.log(error);\n            });\n    }\n\n    edit(): any {\n        const merchant = this.createMerchantDataStruct();\n        merchant.id = this.merchantData.id;\n        this.merchantService.update(merchant).pipe(first()).subscribe(\n            result => {\n                console.log(result);\n                this.dialogRef.close(true);\n            }, error => {\n                this.formApiError = true;\n                console.log(error);\n            });\n    }\n\n    createMerchantDataStruct(): Merchant {\n        this.formInputError = this.formMerchant === undefined;\n        const merchant: Merchant = new Merchant();\n        merchant.fiscalCode = this.formMerchant.controls.fiscalCode.value;\n        merchant.country = this.formMerchant.controls.country.value;\n        merchant.city = this.formMerchant.controls.city.value;\n        merchant.zipCode = this.formMerchant.controls.cap.value;\n        merchant.address = this.formMerchant.controls.address.value;\n        merchant.primaryActivity = this.formMerchant.controls.primaryActivity.value;\n        merchant.name = this.formMerchant.controls.name.value;\n        // Optional values\n        if (this.formMerchant.controls.url.value !== '') {\n            merchant.url = this.formMerchant.controls.url.value;\n        }\n        if (this.formMerchant.controls.description.value !== '') {\n            merchant.description = this.formMerchant.controls.description.value;\n        }\n\n        return merchant;\n    }\n}\n\nexport class MerchantDialogData {\n    type: DialogType;\n    data: Merchant;\n}\n","<h2 mat-dialog-title>{{( data.type === dialogTypes.create ? \"USER.ADD_MERCHANT.TITLE\" : \"USER.EDIT_MERCHANT.TITLE\") | translate}}</h2>\n<mat-dialog-content >\n    <mat-error *ngIf=\"formInputError\">\n        {{(data.type === dialogTypes.create ? \"USER.ADD_MERCHANT.INPUT_ERROR\" : \"USER.EDIT_MERCHANT.INPUT_ERROR\") | translate}}\n    </mat-error>\n    <mat-error *ngIf=\"formApiError\">\n        {{(data.type === dialogTypes.create ? \"USER.ADD_MERCHANT.API_ERROR\" : \"USER.EDIT_MERCHANT.API_ERROR\") | translate}}\n    </mat-error>\n    <app-forms-merchant [(form)]=\"formMerchant\" [merchant]=\"merchantData\" ></app-forms-merchant>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>{{(data.type === dialogTypes.create ? \"USER.ADD_MERCHANT.CANCEL\" : \"USER.EDIT_MERCHANT.CANCEL\") | translate}}</button>\n    <button mat-button (click)=\"onSubmit()\" cdkFocusInitial>{{(data.type === dialogTypes.create ? \"USER.ADD_MERCHANT.ADD\" : \"USER.EDIT_MERCHANT.ADD\") | translate}}</button>\n</mat-dialog-actions>\n","import {Component} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent {\r\n  currentYear = new Date().getFullYear();\r\n}\r\n","<footer>\r\n  <div class=\"container\">\r\n    <div fxLayout=\"row\" color=\"primary\">\r\n      <div fxFlex=\"100%\">\r\n        <p>WOM&nbsp;Platform&nbsp;&mdash;&nbsp;{{currentYear}}. <a [routerLink]=\"['/privacy']\">Privacy policy</a> &#169; <a href=\"https://www.digit.srl\" target=\"_blank\">DIGIT srl</a></p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {first} from 'rxjs/operators';\r\nimport {UserService} from '../../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-merchant',\r\n  templateUrl: './merchant-dashboard.component.html',\r\n  styleUrls: ['./merchant-dashboard.component.css']\r\n})\r\nexport class MerchantDashboardComponent {\r\n  constructor(private userService: UserService) {\r\n    userService.getLoggedUser().pipe(first()).subscribe(user => {\r\n      console.log(user);\r\n    });\r\n  }\r\n}\r\n","<div class=\"mat-card\">\r\n  Merchant\r\n</div>\r\n","import {Component, Inject} from '@angular/core';\nimport { PosRegistration} from '../../_models';\nimport {first} from 'rxjs/operators';\nimport {FormGroup} from '@angular/forms';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {PosService} from '../../_services/pos.service';\n\n@Component({\n    selector: 'app-pos-dialog',\n    templateUrl: 'add-pos.component.html',\n    styleUrls: ['add-pos.component.css']\n})\nexport class AddPosDialogComponent {\n    formPos: FormGroup;\n    formInputError: boolean;\n    formApiError: boolean;\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: string,\n                public dialogRef: MatDialogRef<AddPosDialogComponent>,\n                private posService: PosService) {}\n\n    onSubmit(): any {\n        this.formInputError = this.formPos === undefined;\n        if (this.formPos.controls.latitude.value === 0) {\n            this.formInputError = true;\n            return;\n        }\n\n        const pos: PosRegistration = new PosRegistration();\n        pos.longitude = this.formPos.controls.longitude.value;\n        pos.latitude = this.formPos.controls.latitude.value;\n        pos.name = this.formPos.controls.name.value;\n        pos.ownerMerchantId = this.data;\n\n        // Optional values\n        if (this.formPos.controls.url.value !== '') {\n            pos.url = this.formPos.controls.url.value;\n        }\n\n        this.posService.register(pos).pipe(first()).subscribe(\n            result => {\n                console.log(result);\n                this.dialogRef.close(true);\n            }, error => {\n                this.formApiError = true;\n                console.log(error);\n            });\n    }\n}\n","<h2 mat-dialog-title>{{\"USER.ADD_POS.TITLE\" | translate}}</h2>\n<mat-dialog-content >\n    <mat-error *ngIf=\"formInputError\">\n        {{\"USER.ADD_POS.INPUT_ERROR\" | translate}}\n    </mat-error>\n    <mat-error *ngIf=\"formApiError\">\n        {{\"USER.ADD_POS.API_ERROR\" | translate}}\n    </mat-error>\n    <app-forms-pos [(form)]=\"formPos\" ></app-forms-pos>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>{{\"USER.ADD_POS.CANCEL\" | translate}}</button>\n    <button mat-button (click)=\"onSubmit()\" cdkFocusInitial>{{\"USER.ADD_POS.ADD\" | translate}}</button>\n</mat-dialog-actions>\n","<mat-toolbar class=\"app-toolbar\" >\r\n  <img src=\"assets/images/wom-logo-bianco.png\">\r\n  <span class=\"example-spacer\"></span>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('home')\">\r\n    <span>{{ \"NAV.HOME\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('about')\">\r\n    <span>{{ \"NAV.ABOUT\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('volunteer')\">\r\n    <span>{{ \"NAV.VOLUNTEERS\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('merchant')\">\r\n    <span>{{ \"NAV.MERCHANT\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('instrument')\">\r\n    <span>{{ \"NAV.INSTRUMENT\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\" (click)=\"navigate('user/home')\">\r\n    <span>{{ \"NAV.PROFILE\" | translate }}</span>\r\n  </button>\r\n  <button mat-button class=\"nav-button\"  *ngIf=\"isLogged\" (click)=\"logout()\">\r\n    <span>{{ \"NAV.SIGN_OUT\" | translate }}</span>\r\n  </button>\r\n\r\n  <button mat-icon-button class=\"example-icon nav-icon-button\" aria-label=\"Example icon-button with menu icon\" [matMenuTriggerFor]=\"menu\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <mat-menu #menu=\"matMenu\">\r\n    <button mat-menu-item (click)=\"navigate('home')\">\r\n      <mat-icon>home</mat-icon>\r\n      <span>{{ \"NAV.HOME\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"navigate('about')\">\r\n      <mat-icon>info</mat-icon>\r\n      <span>{{ \"NAV.ABOUT\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"navigate('volunteers')\">\r\n      <mat-icon>person_pin_circle</mat-icon>\r\n      <span>{{ \"NAV.VOLUNTEERS\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"navigate('merchant')\">\r\n      <mat-icon>store</mat-icon>\r\n      <span>{{ \"NAV.MERCHANT\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"navigate('instrument')\">\r\n      <mat-icon>timer</mat-icon>\r\n      <span>{{ \"NAV.INSTRUMENT\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item (click)=\"navigate('user/home')\">\r\n      <mat-icon>account_circle</mat-icon>\r\n      <span>{{ \"NAV.PROFILE\" | translate }}</span>\r\n    </button>\r\n    <button mat-menu-item *ngIf=\"isLogged\" (click)=\"logout()\">\r\n      <mat-icon>close</mat-icon>\r\n      <span>{{ \"NAV.SIGN_OUT\" | translate }}</span>\r\n    </button>\r\n  </mat-menu>\r\n</mat-toolbar>\r\n","import {Component} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {UserLogin} from '../_models';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {UserService} from '../_services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent {\r\n  isExpanded = false;\r\n  currentUserLogin: UserLogin;\r\n  openMenu = false;\r\n  isOver = false;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private translate: TranslateService,\r\n    private userService: UserService\r\n  ) {\r\n    this.userService.currentUserLogin.subscribe(x => this.currentUserLogin = x);\r\n  }\r\n\r\n  get isLogged(): boolean {\r\n    return this.currentUserLogin != null;\r\n  }\r\n\r\n  clickMenu(): void {\r\n    this.openMenu = !this.openMenu;\r\n  }\r\n\r\n  collapse(): void {\r\n    this.isExpanded = false;\r\n  }\r\n\r\n  toggle(): void {\r\n    this.isExpanded = !this.isExpanded;\r\n  }\r\n\r\n  async navigate(link: string): Promise<void> {\r\n    this.openMenu = false;\r\n    await this.router.navigate(['/' + link]);\r\n  }\r\n\r\n  async logout(): Promise<void> {\r\n    this.userService.logout();\r\n    await this.router.navigate(['/home']);\r\n\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\nimport { OverlayService, AppOverlayConfig } from './overlay.service';\nexport { OverlayService, AppOverlayConfig } from './overlay.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    providers: [OverlayService],\n})\nexport class AppOverlayModule { }\n","<ng-template #progressSpinnerRef>\n    <mat-progress-spinner [color]=\"color\" [diameter]=\"diameter\" [mode]=\"mode\" [strokeWidth]=\"strokeWidth\" [value]=\"value\">\n    </mat-progress-spinner>\n</ng-template>\n","import { Component, Input, OnInit, ViewChild, TemplateRef, ViewContainerRef, DoCheck } from '@angular/core';\nimport { OverlayRef } from '@angular/cdk/overlay';\nimport {OverlayService, AppOverlayConfig} from '../_overlay/overlay.service';\nimport {ThemePalette} from '@angular/material/core';\nimport {ProgressSpinnerMode} from '@angular/material/progress-spinner';\n\n@Component({\n    selector: 'app-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.component.css']\n})\nexport class ProgressSpinnerComponent implements OnInit, DoCheck {\n    @Input() color?: ThemePalette;\n    @Input() diameter ? = 100;\n    @Input() mode?: ProgressSpinnerMode;\n    @Input() strokeWidth?: number;\n    @Input() value?: number;\n    @Input() backdropEnabled = true;\n    @Input() positionGloballyCenter = true;\n    @Input() displayProgressSpinner: boolean;\n\n    @ViewChild('progressSpinnerRef')\n    private progressSpinnerRef: TemplateRef<any>;\n    private progressSpinnerOverlayConfig: AppOverlayConfig;\n    private overlayRef: OverlayRef;\n    constructor(private vcRef: ViewContainerRef, private overlayService: OverlayService) { }\n\n    ngOnInit(): any {\n        // Config for Overlay Service\n        this.progressSpinnerOverlayConfig = {\n            hasBackdrop: this.backdropEnabled\n        };\n        if (this.positionGloballyCenter) {\n            this.progressSpinnerOverlayConfig.positionStrategy = this.overlayService.positionGloballyCenter();\n        }\n        // Create Overlay for progress spinner\n        this.overlayRef = this.overlayService.createOverlay(this.progressSpinnerOverlayConfig);\n    }\n\n    ngDoCheck(): any {\n        // Based on status of displayProgressSpinner attach/detach overlay to progress spinner template\n        if (this.displayProgressSpinner && !this.overlayRef.hasAttached()) {\n            this.overlayService.attachTemplatePortal(this.overlayRef, this.progressSpinnerRef, this.vcRef);\n        } else if (!this.displayProgressSpinner && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n    }\n}\n","/**\r\n * User registration data request\r\n */\r\nexport class UserRegistrationPayload {\r\n  email: string;\r\n  password: string;\r\n  name: string;\r\n  surname: string;\r\n}\r\n\r\n/**\r\n * User data response\r\n */\r\nexport class User extends UserRegistrationPayload {\r\n  id: string;\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new User(), json);\r\n  }\r\n}\r\n\r\n/**\r\n * User Login data response\r\n */\r\nexport class UserLogin {\r\n  id: string;\r\n  token: string;\r\n  verified: boolean;\r\n\r\n  constructor(id: string = '', token: string = '', verified: boolean = false) {\r\n    this.id = id;\r\n    this.token = token;\r\n    this.verified = verified;\r\n  }\r\n\r\n  public static fromJson(json): any {\r\n    if (json === null) {\r\n      return null;\r\n    }\r\n    return Object.assign(new UserLogin(), json);\r\n  }\r\n}\r\n","export * from './merchant';\r\nexport * from  './pos';\r\nexport  * from './user';\r\nexport * from './countryList';\r\nexport * from './aim';\r\nexport * from './primaryActivityType';\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthService } from '../_services';\r\nimport {UserService} from '../_services/user.service';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthService,\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const currentUserLogin = this.userService.currentUserLoginValue;\r\n    if (currentUserLogin) {\r\n      let verified = true;\r\n      // check if user has validated email\r\n      if (environment.production) {\r\n        verified = currentUserLogin.verified;\r\n      }\r\n\r\n      if (state.url.includes('not-verified')) {\r\n        if (verified) {\r\n          this.router.navigate(['user/home']).then(r => {});\r\n        }\r\n      } else if (!verified) {\r\n        this.router.navigate(['/user/not-verified'], {queryParams: {returnUrl: state.url}}).then(r => {\r\n        });\r\n      }\r\n      return true;\r\n    }\r\n\r\n    if (state.url === '/merchant' || state.url === '/user/home')\r\n    {\r\n      this.router.navigate(['/authentication/signin'], {queryParams: {returnUrl: state.url}}).then(r => {});\r\n      return false;\r\n    }\r\n\r\n    // not logged in so redirect to login page with the return url\r\n    this.router.navigate(['/'], {queryParams: {returnUrl: state.url}}).then(r => {});\r\n    return false;\r\n  }\r\n}\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {GoogleMap, MapInfoWindow, MapMarker} from '@angular/google-maps';\r\n\r\n@Component({\r\n  selector: 'app-merchant',\r\n  templateUrl: './merchant.component.html',\r\n  styleUrls: ['./merchant.component.css']\r\n})\r\nexport class MerchantComponent implements OnInit{\r\n  @ViewChild(GoogleMap, { static: false }) map: GoogleMap;\r\n  @ViewChild(MapInfoWindow, { static: false }) infoWindow: MapInfoWindow;\r\n  infoContent = '';\r\n  markers = [];\r\n  zoom = 12;\r\n  center: google.maps.LatLngLiteral;\r\n  options: google.maps.MapOptions = {\r\n    mapTypeId: 'hybrid',\r\n    clickableIcons: true,\r\n    zoomControl: true,\r\n    scrollwheel: true,\r\n    disableDoubleClickZoom: false,\r\n    maxZoom: 15,\r\n    minZoom: 3,\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.center = {\r\n        lat: position.coords.latitude,\r\n        lng: position.coords.longitude,\r\n      };\r\n    }, () => {\r\n      this.center = {\r\n        lat: 43.83833794129076,\r\n        lng: 13.02318609717848,\r\n      };\r\n    });\r\n\r\n    this.addMarker();\r\n    this.addMarker();\r\n    this.addMarker();\r\n  }\r\n\r\n  zoomIn(): void {\r\n    if (this.zoom < this.options.maxZoom)\r\n    {\r\n      this.zoom++;\r\n    }\r\n  }\r\n\r\n  zoomOut(): void {\r\n    if (this.zoom > this.options.minZoom) {\r\n      this.zoom--;\r\n    }\r\n  }\r\n\r\n  click(event: google.maps.MapMouseEvent): void {\r\n    console.log(event);\r\n  }\r\n\r\n  logCenter(): void {\r\n    console.log(JSON.stringify(this.map.getCenter()));\r\n  }\r\n\r\n  addMarker(): void {\r\n    this.markers.push({\r\n      position: {\r\n        lat: 43.83833794129076 + ((Math.random() - 0.5) * 2) / 10,\r\n        lng: 13.02318609717848 + ((Math.random() - 0.5) * 2) / 10,\r\n      },\r\n      // label: {\r\n      //   color: 'red',\r\n      //   text: 'Marker label ' + (this.markers.length + 1),\r\n      // },\r\n      title: 'Marker title ' + (this.markers.length + 1),\r\n      info: 'Marker info ' + (this.markers.length + 1),\r\n      options: {\r\n        animation: google.maps.Animation.DROP,\r\n      },\r\n    });\r\n  }\r\n\r\n  openInfo(marker: MapMarker, content): void {\r\n    this.infoContent = content;\r\n    this.infoWindow.open(marker);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <span class=\"page-title\">{{\"MERCHANT.TITLE\" | translate}}</span>\r\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"20px grid\">\r\n    <div fxFlex=\"100%\">\r\n      <p class=\"page-secondary-title\" [innerHTML]=\"'VOLUNTEER.SECTION_A.TITLE' | translate\"></p>\r\n      <p [innerHTML]=\"'VOLUNTEER.SECTION_A.A' | translate\"></p>\r\n    </div>\r\n\r\n    <google-map\r\n            fxFlex=\"100%\"\r\n            height=\"500px\"\r\n            width=\"100%\"\r\n            [zoom]=\"zoom\"\r\n            [center]=\"center\"\r\n            [options]=\"options\"\r\n            (mapClick)=\"click($event)\">\r\n    <map-marker\r\n            #markerElem=\"mapMarker\"\r\n            *ngFor=\"let marker of markers\"\r\n            [position]=\"marker.position\"\r\n            [label]=\"marker.label\"\r\n            [title]=\"marker.title\"\r\n            [options]=\"marker.options\"\r\n            (mapClick)=\"openInfo(markerElem, marker.info)\"\r\n      >\r\n      </map-marker>\r\n\r\n      <map-info-window>{{ infoContent }}</map-info-window>\r\n    </google-map>\r\n    <!--\r\n    <button (click)=\"zoomIn()\">Zoom in</button>\r\n    <button (click)=\"zoomOut()\">Zoom out</button>\r\n    <button (click)=\"logCenter()\">Log center</button>\r\n    <button (click)=\"addMarker()\">Add marker</button>\r\n    -->\r\n\r\n    <div fxFlex=\"100%\">\r\n      <p class=\"page-secondary-title\" [innerHTML]=\"'MERCHANT.SECTION_B.TITLE' | translate\"></p>\r\n      <p [innerHTML]=\"'MERCHANT.SECTION_B.A' | translate\"></p>\r\n    </div>\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n      <a href=\"https://play.google.com/store/apps/details?id=social.wom.pos\" title=\"Download WOM POS from Google Play\">\r\n        <img style=\"max-width: 100%;\" src=\"assets/images/badge_google_play.png\" alt=\"Google Play\" />\r\n      </a>\r\n    </div>\r\n    <div fxFlex=\"50%\" fxFlex.xs=\"100%\">\r\n      <a href=\"https://apps.apple.com/it/app/wom-pos/id1468252634\" title=\"Download WOM POS from App Store\">\r\n        <img style=\"max-width: 100%;\" src=\"assets/images/badge_app_store.png\" alt=\"Apple App Store\" />\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {UserService} from '../../_services/user.service';\r\nimport {Merchant, PosRegistration, UserRegistrationPayload} from '../../_models';\r\nimport {first} from 'rxjs/operators';\r\nimport {MerchantService} from '../../_services/merchant.service';\r\nimport {PosService} from '../../_services/pos.service';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {LogInErrorDialogComponent} from './signup-login-error.directive';\r\n\r\n@Component({\r\n  selector: 'app-merchant-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class MerchantSignUpComponent implements OnInit {\r\n  form: FormGroup;\r\n  formMerchant: FormGroup;\r\n  formPos: FormGroup;\r\n  formSubmit: FormGroup;\r\n  errorMessage: string;\r\n\r\n  signupInvalid: boolean;\r\n  signupTimeout: boolean;\r\n  signupComplete: boolean;\r\n  returnUrl: string;\r\n  requireMerchantRegistration: boolean;\r\n  requirePosRegistration: boolean;\r\n  termsConditionsChecked: boolean;\r\n  termsAndConditionsText: string;\r\n  userRegistered = false;\r\n  userSignedIn = false;\r\n\r\n  // Spinner\r\n  color = 'primary';\r\n  mode = 'indeterminate';\r\n  value = 50;\r\n  displayProgressSpinner = false;\r\n\r\n  constructor(public dialog: MatDialog,\r\n              private fb: FormBuilder,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private userService: UserService,\r\n              private merchantService: MerchantService,\r\n              private posService: PosService) {\r\n      this.termsAndConditionsText = 'Insert t&c text here';\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.returnUrl = this.route.snapshot.queryParams.returnUrl || '/home';\r\n\r\n    this.formSubmit = this.fb.group({\r\n      termsConditionsCheckbox: ['', Validators.requiredTrue],\r\n        tcInfo: [{value: this.termsAndConditionsText, disabled: true}, !Validators.required]\r\n    });\r\n  }\r\n\r\n  onSubmit(): any {\r\n    this.errorMessage = '';\r\n    this.signupInvalid = false;\r\n    this.signupComplete = false;\r\n    this.showProgressSpinner();\r\n\r\n    const merchantFormValid = this.requireMerchantRegistration\r\n        ? (this.formMerchant !== undefined && this.formMerchant.valid)\r\n        : true;\r\n    const posFormValid = this.requirePosRegistration\r\n        ? (this.formPos !== undefined && this.formPos.valid)\r\n        : true;\r\n\r\n    if (!this.form.valid || !this.formSubmit.valid || !merchantFormValid || !posFormValid) {\r\n        this.signupInvalid = true;\r\n        this.signupComplete = true;\r\n        this.displayProgressSpinner = false;\r\n\r\n        return;\r\n    }\r\n\r\n    const userData: UserRegistrationPayload = new UserRegistrationPayload() ;\r\n    userData.email = this.form.controls.email.value;\r\n    userData.name = this.form.controls.firstName.value;\r\n    userData.password = this.form.controls.password.value;\r\n    userData.surname = this.form.controls.lastName.value;\r\n\r\n    if (this.userRegistered) {\r\n        this.logIn(userData.email, userData.password);\r\n        return;\r\n    }\r\n\r\n    this.userService.register(userData).pipe(first()).subscribe(\r\n        result => {\r\n            if (result.id !== null) {\r\n                console.log(result);\r\n                this.userRegistered = true;\r\n                this.logIn(userData.email, userData.password);\r\n            }\r\n        }, error => {\r\n            if (error.status === 422) {\r\n                this.errorMessage = 'SIGN_UP.EMAIL_EXISTS_ERROR';\r\n            } else {\r\n                this.errorMessage = 'SIGN_UP.GENERIC_ERROR';\r\n            }\r\n            this.signupInvalid = true;\r\n            this.signupComplete = true;\r\n            this.displayProgressSpinner = false;\r\n            console.log(error);\r\n        });\r\n  }\r\n\r\n  registerMerchant(): any {\r\n    const merchant: Merchant = new Merchant();\r\n    merchant.fiscalCode = this.formMerchant.controls.fiscalCode.value;\r\n    merchant.country = this.formMerchant.controls.country.value;\r\n    merchant.city = this.formMerchant.controls.city.value;\r\n    merchant.zipCode = this.formMerchant.controls.cap.value;\r\n    merchant.address = this.formMerchant.controls.address.value;\r\n    merchant.primaryActivity = this.formMerchant.controls.primaryActivity.value;\r\n    merchant.name = this.formMerchant.controls.name.value;\r\n    // Optional values\r\n    if (this.formMerchant.controls.url.value !== '') {\r\n        merchant.url = this.formMerchant.controls.url.value;\r\n    }\r\n    if (this.formMerchant.controls.description.value !== '') {\r\n      merchant.description = this.formMerchant.controls.description.value;\r\n    }\r\n\r\n    this.merchantService.register(merchant).pipe(first()).subscribe(\r\n        result => {\r\n          console.log(result);\r\n          if (this.requirePosRegistration) {\r\n            this.registerPos(result.id);\r\n          } else {\r\n            this.displayProgressSpinner = false;\r\n            this.signupComplete = true;\r\n            this.router.navigate(['/user/home']).then(r => r);\r\n          }\r\n        }, error => {\r\n            if (error.status === 422) {\r\n                this.errorMessage = 'SIGN_UP.FISCAL_CODE_EXISTS_ERROR';\r\n            } else {\r\n                this.errorMessage = 'SIGN_UP.GENERIC_ERROR';\r\n            }\r\n            this.signupInvalid = true;\r\n            this.displayProgressSpinner = false;\r\n            this.signupComplete = true;\r\n            console.log(error);\r\n        });\r\n  }\r\n\r\n  registerPos(merchantId: string): any {\r\n    const pos: PosRegistration = new PosRegistration();\r\n    pos.longitude = this.formPos.controls.longitude.value;\r\n    pos.latitude = this.formPos.controls.latitude.value;\r\n    pos.name = this.formPos.controls.name.value;\r\n    pos.ownerMerchantId = merchantId;\r\n    // Optional values\r\n    if (this.formPos.controls.url.value !== '') {\r\n        pos.url = this.formPos.controls.url.value;\r\n    }\r\n\r\n    this.posService.register(pos).pipe(first()).subscribe(\r\n        result => {\r\n          console.log(result);\r\n          this.displayProgressSpinner = false;\r\n          this.signupComplete = true;\r\n          this.router.navigate(['/user/home']).then(r => r);\r\n        }, error => {\r\n            this.signupInvalid = true;\r\n            this.errorMessage = 'SIGN_UP.GENERIC_ERROR';\r\n            this.displayProgressSpinner = false;\r\n            this.signupComplete = true;\r\n            console.log(error);\r\n        });\r\n  }\r\n\r\n  logIn(username: string, password: string): any {\r\n    if (this.userSignedIn) {\r\n        console.log('user already signed in');\r\n        if (this.requireMerchantRegistration) {\r\n            this.registerMerchant();\r\n        } else {\r\n            this.displayProgressSpinner = false;\r\n            this.signupComplete = true;\r\n            this.router.navigate(['/user/home']).then(r => r);\r\n        }\r\n        return;\r\n    }\r\n    this.userService.login(username, password).pipe().subscribe(\r\n        result => {\r\n            console.log(result);\r\n            this.userService.getLoggedUser().pipe().subscribe(\r\n                user => {\r\n                    console.log('user');\r\n                    this.userSignedIn = true;\r\n                    if (this.requireMerchantRegistration) {\r\n                        this.registerMerchant();\r\n                    } else {\r\n                        this.displayProgressSpinner = false;\r\n                        this.signupComplete = true;\r\n                        this.router.navigate(['/user/home']).then(r => r);\r\n                    }\r\n                }, error => {\r\n                    this.displayProgressSpinner = false;\r\n                    this.signupComplete = true;\r\n                    console.log(error);\r\n                });\r\n        }, error => {\r\n            this.signupInvalid = true;\r\n            this.errorMessage = error.title;\r\n            this.displayProgressSpinner = false;\r\n            this.signupComplete = true;\r\n            console.log(error);\r\n\r\n            const dialogRef = this.dialog.open(LogInErrorDialogComponent);\r\n            dialogRef.afterClosed().subscribe(result => {\r\n                this.router.navigate(['/authentication/signin']).then(r => r);\r\n            });\r\n        });\r\n  }\r\n\r\n  tcLinkClicked(): any {\r\n      this.router.navigate(['/privacy']).then(r => r);\r\n  }\r\n\r\n  showProgressSpinner = () => {\r\n    this.displayProgressSpinner = true;\r\n    setTimeout(() => {\r\n        if (!this.signupComplete) {\r\n            this.displayProgressSpinner = false;\r\n            this.signupInvalid = true;\r\n            this.signupTimeout = true;\r\n        }\r\n    }, 10000);\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-content>\r\n    <h1>{{ \"SIGN_UP.TITLE\" | translate }}</h1>\r\n    <p [innerHTML]=\"'SIGN_UP.SUBTITLE' | translate\"></p>\r\n    <p>\r\n      <a [routerLink]=\"['/authentication/signin']\">{{ \"SIGN_UP.BTN_ALREADY_REGISTERED\" | translate }}</a>\r\n    </p>\r\n    <mat-error *ngIf=\"signupTimeout\">\r\n      {{'SIGN_UP.TIMEOUT_ERROR' | translate}}\r\n    </mat-error>\r\n    <mat-error *ngIf=\"signupInvalid\">\r\n      {{ 'SIGN_UP.FORM_ERROR' | translate }}\r\n      <br>\r\n      {{errorMessage | translate}}\r\n    </mat-error>\r\n    <mat-horizontal-stepper linear #stepper>\r\n      <mat-step [stepControl]=\"form\">\r\n        <ng-template matStepLabel>{{ 'SIGN_UP.REPRESENTATIVE.STEPPER_TITLE' | translate }}</ng-template>\r\n        <!-- REPRESENTATIVE DATA -->\r\n        <app-forms-user [(form)]=\"form\" [disabled]=\"userRegistered\"></app-forms-user>\r\n      </mat-step>\r\n\r\n      <!-- OPTIONAL SECTION -->\r\n      <mat-step [stepControl]=\"formMerchant\" [optional]=\"true\">\r\n        <ng-template matStepLabel>{{ 'SIGN_UP.MERCHANT.STEPPER_TITLE' | translate }}</ng-template>\r\n        <mat-checkbox class=\"mat-checkbox-merchant\" [(ngModel)]=\"requireMerchantRegistration\">\r\n          <mat-label>\r\n            {{'SIGN_UP.MERCHANT.CHECKBOX' | translate}}\r\n          </mat-label>\r\n        </mat-checkbox>\r\n\r\n        <!-- MERCHANT SECTION -->\r\n        <app-forms-merchant [(form)]=\"formMerchant\" [merchant]=\"null\" *ngIf=\"requireMerchantRegistration\">\r\n\r\n        </app-forms-merchant>\r\n        <mat-divider [inset]=\"true\"></mat-divider>\r\n\r\n        <!-- POS SECTION -->\r\n        <mat-checkbox class=\"mat-checkbox-merchant\" [(ngModel)]=\"requirePosRegistration\" *ngIf=\"requireMerchantRegistration\">\r\n          <mat-label>\r\n            {{'SIGN_UP.POS.CHECKBOX' | translate}}\r\n          </mat-label>\r\n        </mat-checkbox>\r\n        <app-forms-pos [(form)]=\"formPos\" *ngIf=\"requirePosRegistration && requireMerchantRegistration\"></app-forms-pos>\r\n\r\n        <div>\r\n          <button mat-button matStepperPrevious>{{'SIGN_UP.BACK' | translate}}</button>\r\n          <button mat-button matStepperNext>{{'SIGN_UP.NEXT' | translate}}</button>\r\n        </div>\r\n      </mat-step>\r\n\r\n      <!-- CONFIRM SECTION -->\r\n      <mat-step [stepControl]=\"formSubmit\">\r\n        <form [formGroup]=\"formSubmit\">\r\n          <ng-template matStepLabel>{{ 'SIGN_UP.DONE' | translate }}</ng-template>\r\n          <mat-form-field>\r\n            <h2>{{'SIGN_UP.TERMS_CONDITIONS_TITLE' | translate}}</h2>\r\n            <label>\r\n              <textarea class=\"form-subgroup\" matInput formControlName=\"tcInfo\"></textarea>\r\n            </label>\r\n          </mat-form-field>\r\n          <mat-form-field  appearance=\"example-full-width\" style=\"height: 10px\">\r\n            <label>\r\n              <input matInput formControlName=\"termsConditionsCheckbox\" [hidden]=\"true\">\r\n            </label>\r\n            <mat-error>\r\n              {{'SIGN_UP.TC_ERROR' | translate}}\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-checkbox class=\"example-margin\" [checked]=\"termsConditionsChecked\" formControlName=\"termsConditionsCheckbox\">\r\n            {{ 'SIGN_UP.TERMS_CONDITIONS' | translate }}\r\n          </mat-checkbox>\r\n          <br><br>\r\n          <mat-divider [inset]=\"true\"></mat-divider>\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">{{ 'SIGN_UP.BTN_SIGN_UP' | translate }}</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n\r\n    </mat-horizontal-stepper>\r\n  </mat-card-content>\r\n</mat-card>\r\n\r\n<app-progress-spinner class=\"example-margin\" [color]=\"color\" [mode]=\"mode\" [value]=\"value\" [backdropEnabled]=\"true\" [positionGloballyCenter]=\"true\"\r\n                      [displayProgressSpinner]=\"displayProgressSpinner\">\r\n</app-progress-spinner>\r\n","import {Component, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-page-not-found',\n    templateUrl: './page-not-found.component.html',\n    styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent  {\n\n}\n","<mat-card>\n    <mat-card-content>\n        <section class=\"page_404\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12 \">\n                        <div class=\"col-sm-10 col-sm-offset-1  text-center\">\n                            <div class=\"four_zero_four_bg\">\n                                <h1 class=\"text-center \">404</h1>\n\n\n                            </div>\n\n                            <div class=\"contant_box_404\">\n                                <h3 class=\"h2\">\n                                    Look like you're lost\n                                </h3>\n\n                                <p>the page you are looking for not available!</p>\n\n                                <a href=\"/home\" class=\"link_404\">Go Home</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </mat-card-content>\n</mat-card>\n","export * from './home.component';\r\n","import {Component, OnInit} from '@angular/core';\nimport {UserService} from '../../_services/user.service';\nimport {User} from '../../_models';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-request-new-password',\n    templateUrl: './request-new-password.component.html',\n    styleUrls: ['./request-new-password.component.css']\n})\nexport class RequestNewPasswordComponent implements OnInit {\n    requestSent = false;\n    form: FormGroup;\n\n    constructor(private userService: UserService,\n                private fb: FormBuilder){}\n\n    ngOnInit(): void {\n        this.form = this.fb.group({\n            email: ['', Validators.email]\n        });\n    }\n\n    requestPassword(): void {\n        if (!this.form.valid) {\n            console.log('input not valid');\n            return;\n        }\n        if (this.form.controls.email.value === null) {\n           console.log('email not inserted');\n           return;\n        }\n\n        this.userService.passwordResetRequest(this.form.controls.email.value).pipe().subscribe(\n            response => {\n                this.requestSent = true;\n                console.log(response);\n            }, error => {\n                console.log(error);\n            });\n    }\n}\n","<mat-card>\n    <mat-card-title>\n        <h1>{{\"REQUEST_NEW_PASSWORD.TITLE\" | translate}}</h1>\n    </mat-card-title>\n    <mat-card-content *ngIf=\"requestSent\">\n        {{ 'REQUEST_NEW_PASSWORD.REQUEST_SENT' | translate }}\n        <a href=\"/home\">{{'REQUEST_NEW_PASSWORD.HOME' | translate}}</a>\n    </mat-card-content>\n    <mat-card-content *ngIf=\"!requestSent\">\n        <form [formGroup]=\"form\">\n            <table class=\"full-width\">\n                <tr style=\"width:100%\">\n                    <td>\n                        <mat-form-field>\n                            <label>\n                                <input matInput type=\"email\" placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.EMAIL' | translate }}\" formControlName=\"email\" required>\n                            </label>\n                        </mat-form-field>\n                    </td>\n                </tr>\n            </table>\n            <div>\n                <button mat-raised-button color=\"primary\" (click)=\"requestPassword()\">{{ 'REQUEST_NEW_PASSWORD.REQUEST_BUTTON' | translate }}</button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import {Component} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\n\n\n@Component({\n    selector: 'app-signup-login-error-dialog',\n    templateUrl: './signup-login-error.directive.html',\n    styleUrls: ['./signup-login-error.directive.css']\n})\nexport class LogInErrorDialogComponent {\n    constructor(public dialogRef: MatDialogRef<LogInErrorDialogComponent>){}\n}\n","import {Component, OnInit} from '@angular/core';\nimport {User} from '../../_models';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {UserService} from '../../_services/user.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-reset-password',\n    templateUrl: './reset-password.component.html',\n    styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n    user: User;\n    userId: string;\n    token: string;\n    form: FormGroup;\n    passwordNoMatch = false;\n    expiredLink = false;\n\n    constructor(private userService: UserService,\n                private route: ActivatedRoute,\n                private fb: FormBuilder,\n                private snackBar: MatSnackBar,\n                private router: Router,\n                private translate: TranslateService) {\n        if (userService.currentUserValue !== null) {\n            userService.logout();\n        }\n    }\n\n    ngOnInit(): any {\n        this.route.queryParams.subscribe(params => {\n            this.userId = params.userId;\n            this.token = params.token;\n        });\n        this.user = this.userService.currentUserValue;\n\n        console.log(this.userId);\n        this.form = this.fb.group({\n            password: ['', [Validators.required, Validators.minLength(8)]],\n            passwordRepeat: ['', [Validators.required, Validators.minLength(8)]],\n        });\n    }\n\n    resetPassword(): void {\n        this.expiredLink = false;\n        if (!this.form.valid || this.form.controls === null) {\n            return;\n        }\n        if (!this.checkPasswords()) {\n            this.passwordNoMatch = true;\n            return;\n        }\n        const pswd = this.form.controls.password.value;\n        this.userService.passwordReset(this.userId, this.token, pswd).pipe().subscribe(\n            response => {\n                const snackTitle = this.translate.instant('RESET_PASSWORD.SNACKBAR_SUCCESS');\n                const snackAction = this.translate.instant('RESET_PASSWORD.SNACKBAR_HOME');\n\n                const snackBarRef = this.snackBar.open(\n                    snackTitle,\n                    snackAction,\n                    {\n                        duration: 5000\n                    });\n                snackBarRef.onAction().subscribe(() => {\n                    this.router.navigate(['/authentication/signin']).then(r => r);\n                });\n                snackBarRef.afterDismissed().subscribe(() => {\n                    this.router.navigate(['/authentication/signin']).then(r => r);\n                });\n                console.log('password reset success');\n            }, error => {\n                // link already used if 404\n                this.expiredLink = true;\n                console.log('error: ', error);\n            });\n    }\n\n    checkPasswords(): boolean {\n        if (this.form.controls.password === null || this.form.controls.passwordRepeat === null) {\n            return false;\n        }\n        return this.form.controls.password.value === this.form.controls.passwordRepeat.value;\n    }\n}\n","<mat-card>\n    <mat-card-title>\n        <h1>{{\"RESET_PASSWORD.TITLE\" | translate}}</h1>\n    </mat-card-title>\n    <mat-card-content>\n        <form [formGroup]=\"form\">\n            <table class=\"full-width\">\n                <tr style=\"width:100%\">\n                    <td>\n                        <mat-form-field>\n                            <label>\n                                <input  #password\n                                        matInput\n                                        minlength=\"8\"\n                                        type=\"password\"\n                                        placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.PASSWORD' | translate }}\"\n                                        formControlName=\"password\"\n                                        required>\n                            </label>\n                            <mat-hint align=\"start\">{{password.value.length}} / {{password.minLength}}</mat-hint>\n                            <mat-error>\n                                {{'SIGN_UP.REPRESENTATIVE.PASSWORD_ERROR' | translate}}\n                            </mat-error>\n                        </mat-form-field>\n                    </td>\n                    <td>\n                        <mat-form-field>\n                            <label>\n                                <input matInput type=\"password\" minlength=\"8\"  placeholder=\"{{ 'SIGN_UP.REPRESENTATIVE.REPEAT_PASSWORD' | translate }}\" formControlName=\"passwordRepeat\" required>\n                            </label>\n                            <mat-error>\n                                {{'SIGN_UP.REPRESENTATIVE.PASSWORD_ERROR' | translate}}\n                            </mat-error>\n                        </mat-form-field>\n\n                    </td>\n                </tr>\n            </table>\n            <mat-error *ngIf=\"expiredLink\">\n                {{'SIGN_UP.REPRESENTATIVE.EXPIRED_LINK_ERROR' | translate}}\n            </mat-error>\n            <mat-error *ngIf=\"passwordNoMatch\">\n                {{'SIGN_UP.REPRESENTATIVE.PASSWORD_NO_MATCH_ERROR' | translate}}\n            </mat-error>\n            <div>\n                <button mat-raised-button color=\"primary\" (click)=\"resetPassword()\">{{ 'RESET_PASSWORD.RESET_BUTTON' | translate }}</button>\n            </div>\n        </form>\n    </mat-card-content>\n</mat-card>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}